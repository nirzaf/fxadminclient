{"version":3,"sources":["./src/app/pages/database/database.component.ts","./src/app/pages/database/database.component.html","./src/app/pages/group/edit-sub-group/edit-sub-group.component.ts","./src/app/pages/group/edit-sub-group/edit-sub-group.component.html","./src/app/shared/directives/only-number.directive.ts","./src/app/pages/user/user.component.ts","./src/app/pages/user/user.component.html","./src/app/shared/services/toast.service.ts","./src/app/pages/user/user-hierarchy/user-hierarchy.component.ts","./src/app/pages/user/user-hierarchy/user-hierarchy.component.html","./src/app/shared/mat-paginator-goto/mat-paginator-goto.component.ts","./src/app/shared/mat-paginator-goto/mat-paginator-goto.component.html","./src/app/shared/services/common.service.ts","./src/app/pages/hierarchy/hierarchy.component.ts","./src/app/pages/hierarchy/hierarchy.component.html","./src/app/shared/pipe/filter.pipe.ts","./src/app/shared/services/auth-guard.service.ts","./src/environments/environment.ts","./src/app/pages/property/delete-property/delete-property.component.ts","./src/app/pages/property/delete-property/delete-property.component.html","./src/app/pages/holdingcompany/view-holdingcompany/view-holdingcompany.component.ts","./src/app/pages/holdingcompany/view-holdingcompany/view-holdingcompany.component.html","./src/app/pages/property/property.component.ts","./src/app/pages/property/property.component.html","./src/app/pages/property/view-property/view-property.component.ts","./src/app/pages/property/view-property/view-property.component.html","./src/app/shared/services/custom-validation.service.ts","./src/app/pages/user/link-product/link-product.component.ts","./src/app/pages/user/link-product/link-product.component.html","./src/app/pages/holdingcompany/delete-holdingcompany/delete-holdingcompany.component.ts","./src/app/pages/holdingcompany/delete-holdingcompany/delete-holdingcompany.component.html","./src/app/shared/constant/translate.ts","./src/app/common/loader/loader.component.ts","./src/app/common/loader/loader.component.html","./src/app/shared/services/configuration-micro.service.ts","./src/app/pages/group/delete-group/delete-group.component.ts","./src/app/pages/group/delete-group/delete-group.component.html","./src/app/pages/group/add-sub-group/add-sub-group.component.ts","./src/app/pages/group/add-sub-group/add-sub-group.component.html","./src/app/shared/services/web.service.ts","./src/app/pages/group/edit-group/edit-group.component.ts","./src/app/pages/group/edit-group/edit-group.component.html","./src/app/pages/sample/sample.component.ts","./src/app/pages/sample/sample.component.html","./src/app/pages/group/add-group/add-group.component.ts","./src/app/pages/group/add-group/add-group.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/group/view-group/view-group.component.ts","./src/app/pages/group/view-group/view-group.component.html","./src/app/shared/pipe/format-time.pipe.ts","./src/app/pages/user/create-user/create-user.component.ts","./src/app/pages/user/create-user/create-user.component.html","./src/app/pages/group/delete-sub-group/delete-sub-group.component.ts","./src/app/pages/group/delete-sub-group/delete-sub-group.component.html","./src/app/pages/holdingcompany/add/add-holdingcompany.component.ts","./src/app/pages/holdingcompany/add/add-holdingcompany.component.html","./src/app/app.module.ts","./src/app/pages/group/view-sub-group/view-sub-group.component.ts","./src/app/pages/group/view-sub-group/view-sub-group.component.html","./src/app/pages/property/add-property/add-property.component.ts","./src/app/pages/property/add-property/add-property.component.html","./src/app/shared/services/local-storage.service.ts","./src/app/shared/star-rating/star-rating.component.ts","./src/app/shared/star-rating/star-rating.component.html","./src/app/shared/pipe/toggle.pipe.ts","./src/app/common/breadcrumb/breadcrumb.component.ts","./src/app/common/breadcrumb/breadcrumb.component.html","./src/app/pages/user/db-connection/db-connection.component.ts","./src/app/pages/user/db-connection/db-connection.component.html","./src/app/app-routing.module.ts","./src/app/pages/holdingcompany/edit-holdingcompany/edit-holdingcompany.component.ts","./src/app/pages/holdingcompany/edit-holdingcompany/edit-holdingcompany.component.html","./src/app/pages/user/single-property/single-property.component.ts","./src/app/pages/user/single-property/single-property.component.html","./src/app/pages/property/edit-property/edit-property.component.ts","./src/app/pages/property/edit-property/edit-property.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-database',\r\n  templateUrl: './database.component.html',\r\n  styleUrls: ['./database.component.scss']\r\n})\r\nexport class DatabaseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n    database works!\r\n</p>\r\n<mat-slide-toggle>Slide me!</mat-slide-toggle>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nexport interface GroupData {\n  groupID: string;\n  groupName: string;\n  parentGroupName:string;\n  parentGroupID:string;\n  holdingCompanyName:string;\n  holdingCompanyID:string;\n  subGroupIndex:string\n}\n@Component({\n  selector: 'app-edit-sub-group',\n  templateUrl: './edit-sub-group.component.html',\n  styleUrls: ['./edit-sub-group.component.scss']\n})\nexport class EditSubGroupComponent implements OnInit {\n  editGroupForm: FormGroup = this.formBuilder.group({\n    groupName: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupCode: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n    groupState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n    groupCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n    groupPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\n  \n});\ngroupData:GroupData;\ncountry:any=0;\n  city:any=0;\n  state:any=0;\npublic cityList: any = [];\npublic stateList: any = [];\npublic countryList: any = [];\n  constructor( public dialogRef: MatDialogRef<EditSubGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public _groupData: GroupData,private webService:WebService,private toast:ToastService,private formBuilder: FormBuilder) \n    {\n      this.groupData = _groupData;\n      this.getgroupData(_groupData.groupID);\n\n      this.getCountryList();\n     }\n\n  ngOnInit(): void {\n  }\n  close(): void {\n   \n    this.dialogRef.close( { event: 'close', data: null });\n  }\n  getCityList(stateID:string){\n    this.webService.commonMethod('city/get/'+stateID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.cityList=data.data;\n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }      \n \n    });\n  }\n\n  getCountryList(){\n    this.webService.commonMethod('country/get?pageSize=100',null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.countryList=data.data;\n       \n        \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n  \n    });\n  }\n  getStateList(countryID:string){\n    this.cityList=[];\n    this.webService.commonMethod('state/get/'+countryID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.stateList=data.data;\n       \n      }\n      else{\n        this.toast.error(data.errors);\n        this.stateList=[];\n      }\n      \n      \n      \n    \n    });\n  }\n  getgroupData(groupID){\n    this.webService.commonMethod('group/get/'+groupID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n      \n        this.editGroupForm.get('groupCode').setValue(data.data.code);\n        this.editGroupForm.get('groupName').setValue(data.data.name);\n        this.editGroupForm.get('groupAddress').setValue(data.data.address);\n        this.editGroupForm.get('groupCountry').setValue(data.data.countryId);\n      \n        this.editGroupForm.get('groupState').setValue(data.data.stateId);\n    \n        this.editGroupForm.get('groupCity').setValue(data.data.cityId);\n        this.getStateList(data.data.countryId);\n        this.getCityList(data.data.stateId);\n        this.editGroupForm.get('groupPinZip').setValue(data.data.zipCode);\n        this.editGroupForm.get('groupPhone').setValue(data.data.phoneNumber);\n        //this.groupObj=data.data;\n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n      \n    });\n  }\n  submitForm():void{\n    if (this.editGroupForm.valid) {\n      var postData={\n        \"groupID\":this.groupData.groupID,\n        \"Name\":this.editGroupForm.controls['groupName'].value,\n        \"Code\":this.editGroupForm.controls['groupCode'].value,\n        \"CityId\":this.editGroupForm.controls['groupCity'].value,\n        \"StateId\":this.editGroupForm.controls['groupState'].value,\n        \"CountryId\":this.editGroupForm.controls['groupCountry'].value,\n        \"ZipCode\":this.editGroupForm.controls['groupPinZip'].value,\n        \"PhoneNumber\":this.editGroupForm.controls['groupPhone'].value,\n        \"Address\":this.editGroupForm.controls['groupAddress'].value,            \n        \"ModifiedBy\":\"Sirojan\",\n   \n        }\n        this.webService.commonMethod('group/put/'+this.groupData.groupID,postData,'PUT',null)\n        .subscribe(data=>{\n          if(data.succeeded){\n            if(data.data==0){\n              this.toast.error(\"Code Must be unique\");\n            }\n            else if(data.data=1){\n              this.dialogRef.close( { event: 'close', data: 1 });\n            }\n            //this.countryList=data.data;\n            //this.groupData.groupID=data.data.groupID;\n            //this.groupData.groupName=data.data.name;\n           \n          }\n          else{\n          \n            this.toast.error(data.errors);\n          }\n          \n          \n          \n          //this.isProgressing = false;\n        });\n    } else {\n     return;\n    }\n  \n  }\n\n}\n","<form [formGroup]=\"editGroupForm\" (submit)=\"submitForm()\">\n    <h2 mat-dialog-title>\n        <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\n    <div fxFlex=\"70%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Sub Group</div>\n    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"headerAction\">\n        <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"cancelcontainer\">\n            <div fxFlex=\"100%\">\n                <i class=\"fas fa-times themecolor cancelicon\" (click)=\"close()\" ></i>\n            </div>\n            <div fxFlex=\"100%\" class=\"headercanceltext\" (click)=\"close()\">\n                Cancel\n            </div>\n         \n        </div>\n        <div fxFlex=\"33%\"  fxLayout=\"row wrap\">\n            <div fxFlex=\"100%\">\n               <i class=\"far fa-check-circle themecolor saveicon\" (click)=\"submitForm()\"></i>\n            </div>\n            <div fxFlex=\"100%\" class=\"headersavetext\" (click)=\"submitForm()\">\n               Save\n            </div>\n          \n        </div>\n        <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"disablecontainer\">\n            <div fxFlex=\"100%\">\n                <i class=\"far fa-trash-alt  deleteicon\"></i>\n            </div>\n            <div fxFlex=\"100%\" class=\"e_headerdeletetext\">\n                Delete\n            </div>\n          \n        </div>\n        \n       </div>\n        </div>\n       \n    </h2>\n    \n    \n        <mat-dialog-content  class=\"mat-typography\">\n        \n          <div>\n            <div class=\"content\"  >\n                <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"7px\" >\n                    <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                      Holding Company\n                    \n                      </div>\n                      <div fxFlex=\"25%\">\n                        {{groupData.holdingCompanyName}}\n                        </div>\n                      \n                      </div>\n                      <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"7px\" >\n                          <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                              Group\n                             \n                               </div>\n                      <div fxFlex=\"25%\" >\n                        {{groupData.parentGroupName}}\n                        </div>\n                      \n                    </div>\n          </div>\n          <div class=\"content\">\n             \n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n                <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n                  Sub Group {{groupData.subGroupIndex+1}}           \n                  </div>\n                 \n                  \n                </div>\n          </div>\n            <div class=\"content-0\">\n              \n             \n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Code</mat-label>\n                        <input matInput  placeholder=\"Code\" formControlName=\"groupCode\" readonly maxlength=\"10\"> \n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupCode').hasError('required')\">\n                        Code is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Name</mat-label>\n                        <input matInput #input placeholder=\"Name\" formControlName=\"groupName\" maxlength=\"100\">\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupName').hasError('required')\">\n                        Name is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"48%\" fxFlex.xs=\"100%\" >\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Address</mat-label>\n                        <input matInput #input placeholder=\"Address\" formControlName=\"groupAddress\" maxlength=\"100\">\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupAddress').hasError('required')\">\n                        Address is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n            </div>\n            <div class=\"content\">\n                <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\">\n                    <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n                        <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\n                            <mat-label>Country</mat-label>\n                            <mat-select placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value)\" formControlName=\"groupCountry\">\n                                \n                              <mat-option *ngFor=\"let country of countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\n                            \n                          </mat-select>\n        \n                          <mat-error\n                          *ngIf=\"editGroupForm.get('groupCountry').hasError('min')\">\n                          Country is <strong>required</strong>\n                        </mat-error>\n                    \n                  \n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>State</mat-label>\n                            <mat-select placeholder=\"Select State\" (selectionChange)=\"getCityList($event.value)\" formControlName=\"groupState\">\n                             \n                                <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\n                            </mat-select>\n                                  <mat-error\n                          *ngIf=\"editGroupForm.get('groupState').hasError('min')\">\n                          State is <strong>required</strong>\n                        </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>City</mat-label>\n                            <mat-select placeholder=\"Select City\" formControlName=\"groupCity\">\n                              \n                                <mat-option *ngFor=\"let city of cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\n                            </mat-select>\n                            <mat-error\n                            *ngIf=\"editGroupForm.get('groupCity').hasError('min')\">\n                            City is <strong>required</strong>\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>Pin/Zip</mat-label>\n                            <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"groupPinZip\" maxlength=\"100\">\n                            <mat-error\n                            *ngIf=\"editGroupForm.get('groupPinZip').hasError('required')\">\n                            PinZip is <strong>required</strong>\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                    </div>\n        </div>\n        <div class=\"content\">\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                \n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Phone Number</mat-label>\n                        <input matInput #input placeholder=\"Phone Number\" formControlName=\"groupPhone\" numbersOnly maxlength=\"20\">\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupPhone').hasError('required')\">\n                        Phone Number is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n        </div>\n        \n          \n        \n        </div>\n        \n        </mat-dialog-content>\n    </form>\n    ","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n  selector: 'input[numbersOnly]'\r\n})\r\nexport class OnlyNumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CreateUserComponent } from './create-user/create-user.component';\r\nimport { UserHierarchyComponent } from './user-hierarchy/user-hierarchy.component';\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  public isProgressing: boolean = true;\r\n  public loaderMessage: string = \"Loading...\";\r\n\r\n\r\n  public breadCrumb: string[] = [];\r\n\r\n  public defaultGroupCode: string = \"40531\";\r\n  public pmsCustCode: number = 20007;\r\n  public GroupList: any = [];\r\n  public PropertyList: any= [];\r\n\r\n\r\n\r\n  \r\n\r\n  constructor(private webService:WebService,private toast:ToastService,public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.breadCrumb = [\"Admin\", \"User Configuration\"];\r\n    this.GetPropertyAndGroup();\r\n\r\n    this.getAPIlist();\r\n  }\r\n\r\n  showHirarchy(): void {\r\n    // if (this.holdingCompanyID != \"\" && this.holdingCompanyID != null) {\r\n    const dialogRef = this.dialog.open(UserHierarchyComponent, {\r\n      panelClass: 'custom-dialog-container',\r\n      disableClose: true,\r\n      data: { holdingCompanyName:'dddfdfd', holdingCompanyID: 35 }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      //this.holdingCompanyName = result;\r\n    });\r\n  // } else {\r\n  //   this.toast.error(\"please select holding company\");\r\n\r\n  // }\r\n  }\r\n  GetPropertyAndGroup() {\r\n    let serverResponse = {\"Response\":\"Success\",\"Code\":\"FCS00001\",\"Description\":\"Property And Group List\",\"Data\":[{\"propertyGroupID\":40531,\"propertyGroupCode\":40531,\"propertyGroupName\":\"FXFD QA Group\",\"propertyList\":[{\"propertyID\":40529,\"pmsCustCode\":20007,\"propertyName\":\"FXFD QA1 Property\",\"hotelConnStr\":\"Server=;Database=;User ID=;Password=;Trusted_Connection=False\",\"pmsVendor\":\"FX1\",\"crsApplicable\":false,\"isGSTApplicable\":false,\"isInterfaceApplicable\":false}]}]};\r\n    for (let a of serverResponse.Data) {\r\n      this.GroupList.push({\r\n        \"GroupName\": a.propertyGroupName,\r\n        \"GroupCode\": \"\" + a.propertyGroupCode,\r\n        \"GroupID\": a.propertyGroupID\r\n      })\r\n      for (let b of a.propertyList) {\r\n     \r\n          this.PropertyList.push({\r\n            \"propertyID\": b.propertyID,\r\n            \"pmsCustCode\": b.pmsCustCode,\r\n            \"propertyName\": b.propertyName,\r\n            \"isGSTApplicable\": b.isGSTApplicable,\r\n            \"isInterfaceApplicable\": b.isInterfaceApplicable,\r\n            \"pmsVendor\": b.pmsVendor\r\n          })\r\n        }\r\n      }    \r\n    \r\n  }\r\n\r\n  CreateUser(): void {\r\n  \r\n      const dialogRef = this.dialog.open(CreateUserComponent, {\r\n        panelClass:['custom-dialog-container','create-user-modal'] ,\r\n        //minHeight: '800px',    \r\n        data: {\r\n \r\n        },\r\n        autoFocus: false\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        //this.getPropertyList(this.groupID);\r\n\r\n      });\r\n   \r\n  }\r\n  getAPIlist(){\r\n    this.webService.commonMethod('PropertyAndGroup/list-by-login',{\"LoginID\":\"nitish.kumar@idsnext.com\"},'POST','fxauth')\r\n    .subscribe(data=>{\r\n      // this.toast.error(\"Api hitted success\")\r\n     \r\n      this.isProgressing = false;\r\n    });\r\n  }\r\n\r\n  \r\n\r\n\r\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n\r\n}\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n  email:string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 3984, name: 'John Lee',email: 'john@gmail.com', weight: 4.0026, symbol: 'He'},\r\n  {position: 3984, name: 'John Lee',email: 'john@gmail.com', weight: 4.0026, symbol: 'He'},\r\n  {position: 3984, name: 'John Lee',email: 'john@gmail.com', weight: 4.0026, symbol: 'He'},\r\n  {position: 3984, name: 'John Lee',email: 'john@gmail.com', weight: 4.0026, symbol: 'He'},\r\n  {position: 3984, name: 'John Lee',email: 'john@gmail.com', weight: 4.0026, symbol: 'He'},\r\n  {position: 3984, name: 'John Lee',email: 'john@gmail.com', weight: 4.0026, symbol: 'He'},\r\n\r\n];\r\n","<app-loader *ngIf=\"isProgressing\" [msg]=\"loaderMessage\"></app-loader>\r\n\r\n\r\n<div>\r\n    <h1 class=\"page_heading margin-padding-none\">List - User</h1>\r\n    <app-breadcrumb [breadCrumbList]=\"breadCrumb\"></app-breadcrumb>\r\n</div>\r\n\r\n<div class=\"user-landing\"  fxLayout=\"column wrap\">\r\n    \r\n\r\n   \r\n    <div fxFlex=\"100%\" fxLayout=\"row wrap\">\r\n        <mat-card fxFlex=\"100%\" fxLayout=\"row wrap\" style=\"padding-left: 0px !important;\">\r\n            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxLayout=\"row\"  fxLayout.lt-sm=\"column\"   fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"75%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\" fxFlex.sm=\"50%\" fxLayoutAlign=\"end start\" class=\"disableicon\" style=\"opacity: 0.5;\"> \r\n                   \r\n                    <div fxFlex=\"7%\" fxFlex.sm=\"33%\" fxFlex.xs=\"33%\" >\r\n                        <i class=\"fas fa-trash-alt   createicon\"></i><br/>\r\n                        <div class=\"createtext\">Delete</div>\r\n                    </div>\r\n                    <div fxFlex=\"7%\" fxFlex.sm=\"33%\" fxFlex.xs=\"33%\" >\r\n                        <i class=\"fas fa-sitemap   createicon\" (click)=\"showHirarchy()\"></i><br/>\r\n                        <div class=\"createtext\" (click)=\"showHirarchy()\">Hierarchy</div>\r\n                    </div>\r\n                  </div>\r\n                <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxLayoutGap=\"25px\" fxLayout.lt-xs=\"column\">\r\n                  <mat-form-field [style.width.%]=\"90\" floatLabel=\"always\"> \r\n                      <mat-label>Search User Name/ Holding company/ Group/ Property</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"User Name\"\r\n                      aria-label=\"Number\"\r\n                      matInput\r\n                      \r\n                     >\r\n       \r\n                    \r\n                      <span class=\"fas fa-search searchspanicon themecolor\"></span>\r\n                  \r\n                  </mat-form-field>\r\n                  <div fxFlex=\"10%\"  >\r\n                    <i class=\"fas fa-ellipsis-v themecolor iconSize moreicon fxcursor_pointer\"></i><br/>\r\n                    <div class=\"themecolor moretext fxcursor_pointer\">More</div>\r\n                </div>\r\n                </div>\r\n               \r\n            </div>\r\n            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxLayout=\"column\"  fxLayout.lt-sm=\"column\"   fxLayoutGap=\"15px\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"select\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\r\n                </mat-checkbox>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                </mat-checkbox>\r\n            </td>\r\n        </ng-container>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef> User ID </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n    \r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"weight\">\r\n            <th mat-header-cell *matHeaderCellDef> Email </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n        </ng-container>\r\n    \r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> <mat-slide-toggle></mat-slide-toggle> </td>\r\n        </ng-container>\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\r\n        </tr>\r\n    </table>\r\n    <div fxFlex=\"100%\">\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n        <!-- <mat-paginator-goto [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n        showFirstLastButtons></mat-paginator-goto> -->\r\n      \r\n        <div class=\"icon btnusercreate fxcursor_pointer\" id=\"bigplus\" (click)=\"CreateUser()\" style=\"padding:0px 32px;\"></div>\r\n    </div>\r\n\r\n</div>\r\n</mat-card>\r\n    <p>&nbsp;</p>\r\n\r\n</div>\r\n    <!-- numbersOnly -->\r\n \r\n    \r\n    <mat-card>\r\n        <div class=\"container no_padding\" fxLayout=\"row wrap\" fxFlex=\"100%\"  fxLayoutAlign=\"end end\">\r\n            <div fxFlex=\"10%\" fxFlex.xs=\"100%\">\r\n            <button mat-button class=\"border\" style=\"padding:0px 32px;\">Back</button>\r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n</div>\r\n\r\n","import {\r\n  Injectable\r\n} from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor() { }\r\n\r\n  success(message: any) {\r\n    let html:string =`<i class=\"close fa fa-times\"></i>\r\n    <i class=\"success fa fa-check-circle\"></i>\r\n    <h4>Success</h4>\r\n    <p>${message} </p>`;\r\n    this.template(html,'success');\r\n  }\r\n  error(message: any) {\r\n    let html:string =`<i class=\"close fa fa-times\"></i>\r\n    <i class=\"error fa fa-ban\"></i>\r\n    <h4>Error</h4>\r\n    <p>${message} </p>`;\r\n    this.template(html,'error');\r\n  }\r\n  warning(message: any) {\r\n    let html:string =`<i class=\"close fa fa-times\"></i>\r\n    <i class=\"warning fa fa-exclamation-triangle\"></i>\r\n    <h4>Warning</h4>\r\n    <p>${message} </p>`;\r\n    this.template(html,'warning');\r\n  }\r\n  info(message: any) {\r\n    let html:string =`<i class=\"close fa fa-times\"></i>\r\n    <i class=\"info fa fa-info-circle\"></i>\r\n    <h4>Info</h4>\r\n    <p>${message} </p>`;\r\n    this.template(html,'info');\r\n  }\r\n\r\n\r\n  template(innerhtml:string,classname:string){\r\n    let iDiv:any = document.createElement('div');\r\n    iDiv.id = 'toast-popup';\r\n    iDiv.className = classname;\r\n    iDiv.innerHTML = innerhtml;\r\n    document.getElementsByTagName('body')[0].appendChild(iDiv);\r\n    setTimeout(() => {\r\n      (<HTMLElement>document.getElementById('toast-popup')).style.top = \"10px\";\r\n      (<HTMLElement>document.getElementById('toast-popup')).style.zIndex = \"9999999\";\r\n      (<HTMLElement>document.querySelector('.close')).addEventListener('click', () => {\r\n        this.closePopup();\r\n      });\r\n      setTimeout(() => {\r\n        this.closePopup();\r\n      }, 4000);\r\n    }, 200);\r\n  }\r\n  closePopup() {\r\n    if((<HTMLElement>document.getElementById('toast-popup'))){\r\n      (<HTMLElement>document.getElementById('toast-popup')).style.top = \"-150px\";\r\n      setTimeout(()=>{\r\n        this.removeElement('toast-popup');\r\n      },1)\r\n\r\n    }\r\n \r\n\r\n  }\r\n\r\n  removeElement(id: string) {\r\n    let elem:any = document.getElementById(id);\r\n    return elem.parentNode.removeChild(elem);\r\n  }\r\n}","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatTreeFlattener, MatTreeNestedDataSource } from '@angular/material/tree';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { WebService } from 'src/app/shared/services/web.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nexport interface CompanyData {\n  holdingCompanyID: string;\n  holdingCompanyName: string;\n}\nexport class HierarchyNode {\n  children: BehaviorSubject<HierarchyNode[]>;\n  constructor(public item: string, children?: HierarchyNode[], public parent?: HierarchyNode) {\n    this.children = new BehaviorSubject(children === undefined ? [] : children);\n  }\n}\nconst TREE_DATA = [\n  new HierarchyNode(`Sarovar Hotels G1`, [\n    new HierarchyNode(`Sarovar Hotels SG1`, [\n      new HierarchyNode(`Sarovar Hotels P2`),\n      new HierarchyNode(`Sarovar Hotels P3`),\n      new HierarchyNode(`Sarovar Hotels P4`),\n    ]),\n    new HierarchyNode(`Sarovar Hotels SG2`, [\n      new HierarchyNode(`Sarovar Hotels P2`),\n      new HierarchyNode(`Sarovar Hotels P3`),\n      new HierarchyNode(`Sarovar Hotels P4`),\n      new HierarchyNode(`Sarovar Hotels P5`),\n    ]),\n    new HierarchyNode(`Sarovar Hotels P2`),\n    new HierarchyNode(`Sarovar Hotels P3`),\n    new HierarchyNode(`Sarovar Hotels P4`),\n    new HierarchyNode(`Sarovar Hotels P5`),\n    new HierarchyNode(`Sarovar Hotels P6`),\n    new HierarchyNode(`Sarovar Hotels P7`),\n    new HierarchyNode(`Sarovar Hotels P8`),\n  ]),\n  new HierarchyNode(`Sarovar Hotels G2`, [\n    new HierarchyNode(`Sarovar Hotels P1`),\n    new HierarchyNode(`Sarovar Hotels P2`),\n    new HierarchyNode(`Sarovar Hotels P3`),\n    new HierarchyNode(`Sarovar Hotels P4`),\n    new HierarchyNode(`Sarovar Hotels P5`),\n    new HierarchyNode(`Sarovar Hotels P6`),\n    new HierarchyNode(`Sarovar Hotels P7`),\n    new HierarchyNode(`Sarovar Hotels P8`),\n  ]),\n  new HierarchyNode(`Sarovar Hotels G3`, [\n    new HierarchyNode(`Sarovar Hotels P1`),\n    new HierarchyNode(`Sarovar Hotels P2`),\n    new HierarchyNode(`Sarovar Hotels P3`),\n    new HierarchyNode(`Sarovar Hotels P4`),\n    new HierarchyNode(`Sarovar Hotels P5`),\n    new HierarchyNode(`Sarovar Hotels P6`),\n    new HierarchyNode(`Sarovar Hotels P7`),\n    new HierarchyNode(`Sarovar Hotels P8`),\n  ])\n];\n\n@Component({\n  selector: 'app-user-hierarchy',\n  templateUrl: './user-hierarchy.component.html',\n  styleUrls: ['./user-hierarchy.component.scss']\n})\nexport class UserHierarchyComponent  {\n\n  public isProgressing: boolean = false;\n  public loaderMessage: string = \"Loading...\";\n  holdingCompanyData: CompanyData;\n  recursive: boolean = false;\n  levels = new Map<HierarchyNode, number>();\n  treeControl: NestedTreeControl<HierarchyNode>;\n\n\n  dataSource: MatTreeNestedDataSource<HierarchyNode>;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, public dialogRef: MatDialogRef<UserHierarchyComponent>, @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: CompanyData,\n    private webService: WebService, private toast: ToastService\n  ) {\n    this.holdingCompanyData = _holdingCompanyData;\n    this.treeControl = new NestedTreeControl<HierarchyNode>(this.getChildren);\n    this.dataSource = new MatTreeNestedDataSource();\n    this.dataSource.data = TREE_DATA;\n    //this.getHierarchyData(_holdingCompanyData.holdingCompanyID);\n\n\n\n  }\n  getChildren = (node: HierarchyNode) => {\n    return node.children;\n  };\n\n  hasChildren = (index: number, node: HierarchyNode) => {\n    return node.children.value.length > 0;\n  }\n  onNoClick(): void {\n    this.dialogRef.close({ event: 'close', data: null });\n  }\n  getHierarchyData(holdingCompanyID: string) {\n    this.webService.commonMethod('holdingcompany/gethierarchy/' + holdingCompanyID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          var hierarrchyData = [];\n          data.data.groups.map(function (group) {\n\n            var subGroupData = [];\n            group.subGroups.map(function (subgroup) {\n              var propertyData = [];\n              subgroup.properties.map(function (property) {\n                propertyData.push(new HierarchyNode(property.propertyName));\n\n\n              });\n              subGroupData.push(new HierarchyNode(subgroup.subGroupName, propertyData));\n\n            });\n            \n            group.properties.map(function (property) {\n              subGroupData.push(new HierarchyNode(property.propertyName));\n\n\n            });\n           \n            var groupData = new HierarchyNode(group.groupName, subGroupData);\n            hierarrchyData.push(groupData);\n\n\n\n          });\n       \n\n\n          this.dataSource.data = hierarrchyData;\n          this.isProgressing=false;\n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n\n      });\n  }\n\n  /**\n * Toggle the node, remove from display list\n */\n  toggleNode(node) {\n    \n    let index = this.dataSource.data.findIndex(x => x.item == node.item);\n\n    if (!this.treeControl.isExpanded(node)) {\n      this.treeControl.expand(this.dataSource.data[index])\n      //this.treeControl.collapseAll();\n\n    } else {\n      this.treeControl.collapse(this.dataSource.data[index]);\n    }\n\n\n\n\n\n  }\n\n}\n","\n<app-loader *ngIf=\"isProgressing\" [msg]=\"loaderMessage\"></app-loader>\n\n\n<h2 mat-dialog-title>Hierarchy</h2>\n<mat-dialog-content  class=\"mat-typography\">\n  <div>\n    <div class=\"content-0 hierarchyContainer\">\n      \n     \n    <div fxFlex=\"100%\"  fxLayout=\"column\">\n        <div fxFlex=\"100%\" >\n            <!-- {{holdingCompanyData.holdingCompanyName}} -->\n            Company Name\n        </div>\n        <div fxFlex=\"100%\" style=\"margin-bottom: 25px;\">\n          <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n            <mat-nested-tree-node *matTreeNodeDef=\"let node\">\n              <li>\n                <div class=\"mat-tree-node\">  {{node.item}}</div>\n              </li>\n            </mat-nested-tree-node>\n            <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChildren\">\n                <li class=\"example-tree-container\">\n                  <div class=\"mat-tree-node\">\n                    <button class=\"themecolor\" mat-icon-button matTreeNodeToggle\n                            [matTreeNodeToggleRecursive]=\"recursive\"\n                          [attr.aria-label]=\"'toggle ' + node.filename\">\n                      <mat-icon>\n                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                      </mat-icon>\n                    </button>\n                    {{node.item}}\n                </div>\n                <ul class=\"example-tree-nested-node\">\n                  <div  *ngIf=\"treeControl.isExpanded(node)\">\n                  <ng-container matTreeNodeOutlet></ng-container>\n                  </div>\n                </ul>\n              </li>\n              \n            </mat-nested-tree-node>\n          </mat-tree>\n        </div>\n        \n        \n     \n  \n\n</div>\n</div>\n</div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button  mat-button type=\"button\"  class=\"border btnProperty\" (click)=\"onNoClick()\" >Back</button>\n\n \n</mat-dialog-actions>\n\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild\n} from \"@angular/core\";\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\n\n@Component({\n  selector: \"mat-paginator-goto\",\n  templateUrl: \"./mat-paginator-goto.component.html\",\n  styleUrls: [\"./mat-paginator-goto.component.scss\"]\n})\nexport class MatPaginatorGotoComponent implements OnInit {\n  pageSize: number;\n  pageIndex: number;\n  length: number;\n  goTo: number;\n  pageNumbers: number[];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @Input() disabled = false;\n  @Input() hidePageSize = false;\n  @Input() pageSizeOptions: number[];\n  @Input() showFirstLastButtons = false;\n  @Output() page = new EventEmitter<PageEvent>();\n  @Input(\"pageIndex\") set pageIndexChanged(pageIndex: number) {\n    this.pageIndex = pageIndex;\n  }\n  @Input(\"length\") set lengthChanged(length: number) {\n    this.length = length;\n    this.updateGoto();\n  }\n  @Input(\"pageSize\") set pageSizeChanged(pageSize: number) {\n    this.pageSize = pageSize;\n    this.updateGoto();\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    this.updateGoto();\n  }\n\n  updateGoto() {\n    this.goTo = (this.pageIndex || 0) + 1;\n    this.pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(this.length / this.pageSize); i++) {\n      this.pageNumbers.push(i);\n    }\n  }\n\n  paginationChange(pageEvt: PageEvent) {\n    this.length = pageEvt.length;\n    this.pageIndex = pageEvt.pageIndex;\n    this.pageSize = pageEvt.pageSize;\n    this.updateGoto();\n    this.emitPageEvent(pageEvt);\n  }\n\n  goToChange() {\n    this.paginator.pageIndex = this.goTo - 1;\n    const event: PageEvent = {\n      length: this.paginator.length,\n      pageIndex: this.paginator.pageIndex,\n      pageSize: this.paginator.pageSize\n    };\n    this.paginator.page.next(event);\n    this.emitPageEvent(event);\n  }\n\n  emitPageEvent(pageEvent: PageEvent) {\n    this.page.next(pageEvent);\n  }\n}\n\n/** Created by Sameer Khan **/\n","<div class=\"d-flex\">\n\t<mat-paginator [length]=\"length\" [pageIndex]=\"pageIndex\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginationChange($event)\">\n\t</mat-paginator>\n\t<div class=\"go-to-container\">\n\t\t<div class=\"go-to-label\">Go To: </div>\n\t\t<mat-form-field>\n\t\t\t<mat-select [(ngModel)]=\"goTo\" (selectionChange)=\"goToChange()\">\n\t\t\t\t<mat-option *ngFor=\"let pageNumber of pageNumbers\" [value]=\"pageNumber\">{{pageNumber}}</mat-option>\n\t\t\t</mat-select>\n\t\t</mat-form-field>\n\t</div>\n</div>\n\n<!-- Created by Sameer Khan -->","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from '../../shared/services/local-storage.service'\r\n\r\n\r\n@Injectable()\r\nexport class CommonService {\r\n\r\n  constructor(\r\n\r\n    public _localStorageService: LocalStorageService\r\n  ) { }\r\n  genericSort(data, key) {\r\n    return data.sort((a: any, b: any) => {\r\n      if (a[key] < b[key]) {\r\n        return -1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n  }\r\n\r\n  genericDuplicateList(data: any, key: string) {\r\n    var valueArr = data.map(function (item) { return item[key] });\r\n    var duplicate: { \"id\": number, \"text\": string }[] = [];\r\n    valueArr.some(function (item, idx) {\r\n      if (valueArr.indexOf(item) != idx && JSON.stringify(duplicate).indexOf(JSON.stringify(data[idx])) == -1)\r\n        duplicate.push(data[idx]);\r\n    });\r\n    return duplicate;\r\n  }\r\n\r\n  /**\r\n   * Three param\r\n   * 1. elem = id reference then type will be id\r\n   * 2. t = time in millisecond\r\n   * 3. type = id selector or querySelector\r\n   */\r\n  addFocus(elem: string, t?: number, type?: string) {\r\n    if (type == \"query\") {\r\n      if (t == undefined) {\r\n        (<HTMLElement>document.querySelector(elem)).focus();\r\n      }\r\n      else {\r\n        setTimeout(function () {\r\n          if ((<HTMLElement>document.querySelector(elem))) {\r\n            (<HTMLElement>document.querySelector(elem)).focus();\r\n          }\r\n        }, t);\r\n      }\r\n    }\r\n    else {\r\n      if (t == undefined) {\r\n        if ((<HTMLElement>document.getElementById(elem))) {\r\n          (<HTMLElement>document.getElementById(elem)).focus();\r\n        }\r\n      }\r\n      else {\r\n        setTimeout(function () {\r\n          if ((<HTMLElement>document.getElementById(elem))) {\r\n            (<HTMLElement>document.getElementById(elem)).focus();\r\n          }\r\n        }, t);\r\n      }\r\n    }\r\n  }\r\n\r\n  capitalize(name: string) {\r\n    name = name.toLowerCase();\r\n    return name.trim().replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase() });\r\n  }\r\n\r\n  capitalizenew(name: string) {\r\n    name = name.toLowerCase();\r\n    return name.replace(/\\w\\S*/g, function (txt) { return txt.toUpperCase() });\r\n  }\r\n\r\n\r\n  // Convert Date Format\r\n  formatDate(date, format, seperator, isTime?: boolean) { //\"Format:dd-mm-yy,mm-dd-yy,dd/mm/yy,dd:mm:yy\" & Seperator - '-','/',',',':'\r\n    if (date != \"\" && date != undefined) {\r\n\r\n      if (typeof date == 'string' && date.includes(\"GMT+\")) {\r\n        date = date.split(\"GMT+\")[0];\r\n      }\r\n      else if (typeof date == 'string' && date.includes(\"+\")) {\r\n        date = date.split(\"+\")[0];\r\n      }\r\n      let d = new Date(date),\r\n        mm = '' + (d.getMonth() + 1),\r\n        mmm: any = d.getMonth(),\r\n        dd = '' + d.getDate(),\r\n        yy = d.getFullYear();\r\n      let month_names = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n      if (mm.length < 2) mm = '0' + mm;\r\n      if (dd.length < 2) dd = '0' + dd;\r\n      let part = format.split(seperator);\r\n      mmm = month_names[mmm];\r\n\r\n      let sHour = d.getHours();\r\n      let sMinute = this.padValue(d.getMinutes());\r\n      let sAMPM = \"AM\";\r\n      let iHourCheck = Number(sHour);\r\n      if (iHourCheck > 12) {\r\n        sAMPM = \"PM\";\r\n        sHour = iHourCheck - 12;\r\n      }\r\n      else if (iHourCheck === 0) {\r\n        sHour = 12;\r\n      }\r\n      sHour = this.padValue(sHour);\r\n      try {\r\n        if (isTime) {\r\n          return eval(part[0]) + seperator + eval(part[1]) + seperator + eval(part[2]) + \", \" + sHour + \":\" + sMinute + \" \" + sAMPM;\r\n        }\r\n        return eval(part[0]) + seperator + eval(part[1]) + seperator + eval(part[2]);\r\n      }\r\n      catch (e) {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n  padValue(value): number {\r\n    return (Number(value) < 10) ? \"0\" + value : value;\r\n  }\r\n\r\n  getTimeFromDate(date: any) {\r\n    if (date != \"\" && date != undefined) {\r\n      if (typeof date == 'string' && date.includes(\"+\")) {\r\n        date = date.split(\"+\")[0];\r\n      }\r\n      let d = new Date(date);\r\n      let hh = d.getHours().toString();\r\n      let mm = d.getMinutes().toString();\r\n      if (hh.length < 2) hh = '0' + hh;\r\n      if (mm.length < 2) mm = '0' + mm;\r\n      return hh + ':' + mm;\r\n\r\n    }\r\n  }\r\n\r\n  formatDateCalender(date) {\r\n    if (date != \"\" && date != undefined) {\r\n      let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n      if (month.length < 2) month = '0' + month;\r\n      if (day.length < 2) day = '0' + day;\r\n\r\n      return [month, day, year].join('/');\r\n    }\r\n  }\r\n\r\n\r\n  formatSQLDate(date) {\r\n    if (date != \"\" && date != undefined) {\r\n      let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n      if (month.length < 2) month = '0' + month;\r\n      if (day.length < 2) day = '0' + day;\r\n\r\n      return [year, month, day].join('-');\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  uniqueArray(originalArray, prop) {\r\n    let newArray = [];\r\n    let t = {};\r\n\r\n    for (let i in originalArray) {\r\n      t[originalArray[i][prop]] = originalArray[i];\r\n    }\r\n\r\n    for (let i in t) {\r\n      newArray.push(t[i]);\r\n    }\r\n\r\n    return newArray;\r\n  }\r\n\r\n\r\n  // getAzureStoragePath():string{\r\n  //   return this._configurationMicroService.getAzureStorageURL();\r\n  // }\r\n  getDocumentMimeTypeList() {\r\n    return [\r\n      'image/png',\r\n      'image/jpeg',\r\n      'image/jpg',\r\n      'image/gif',\r\n      'application/pdf',\r\n      'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n      'application/vnd.ms-powerpoint',\r\n      'application/vnd.ms-powerpoint.presentation.macroenabled.12',\r\n      'application/vnd.ms-excel',\r\n      'application/vnd.ms-excel.sheet.binary.macroenabled.12',\r\n      'application/vnd.ms-excel.sheet.macroenabled.12',\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n      'application/msword',\r\n      'application/vnd.oasis.opendocument.text',\r\n      'text/plain'\r\n    ]\r\n  }\r\n\r\n  imageList() {\r\n    return [\r\n      'image/png',\r\n      'image/jpeg',\r\n      'image/jpg',\r\n      'image/gif',\r\n    ]\r\n  }\r\n\r\n  CompareDate(date1: string, date2: string): boolean {\r\n    let dateOne = new Date(date1); //Year, Month, Date\r\n    let dateTwo = new Date(date2); //Year, Month, Date\r\n    if (dateOne > dateTwo) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  CompareDateEqualTo(date1: string, date2: string): boolean {\r\n    let dateOne = new Date(date1); //Year, Month, Date\r\n    let dateTwo = new Date(date2); //Year, Month, Date\r\n    if (dateOne >= dateTwo) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  formatDecimal(n, decimal) {\r\n    return n.toFixed(decimal).replace(/./g, function (c, i, a) {\r\n      return i >= 0 && c !== \".\" ? '' + c : c;\r\n    });\r\n  }\r\n\r\n  restrictQuote(elem: any) {\r\n    let v = elem.target.value;\r\n    elem.target.value = v.replace(/\\\"|\\'|<|>/g, \"\");\r\n    if (elem.charCode == 39 || elem.charCode == 34 || elem.charCode == 60 || elem.charCode == 62)\r\n      return false;\r\n    return true;\r\n  }\r\n  dayOfWeekAsString(dayIndex: number) {\r\n    return [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"][dayIndex];\r\n  }\r\n\r\n  timeDiffinMinute(arr, dep) {//sample format 24 hour format arrival=\"00:01\" departure=\"02:59\"\r\n    let part1 = arr.split(':');\r\n    let part2 = dep.split(':');\r\n    let arrmin = Number(part1[0]) * 60 + Number(part1[1]);\r\n    let depmin = Number(part2[0]) * 60 + Number(part2[1]);\r\n    return depmin - arrmin;\r\n  }\r\n\r\n  formatNumber(num: number, seperator: string, decimal: number, formater: string) {\r\n    if (formater == \"###,###,###,###\") {\r\n      return (num).toFixed(decimal).replace(/\\d(?=(\\d{3})+\\.)/g, '$&' + seperator);\r\n    } else if (formater == \"##,##,##,###\") {\r\n      return (num).toFixed(decimal).replace(/(\\d)(?=(\\d{2})+\\d\\.)/g, '$1' + seperator);\r\n    } else {\r\n      return (num).toFixed(decimal).replace(/\\d(?=(\\d{3})+\\.)/g, '$&' + seperator);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MatTreeFlattener, MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nexport interface CompanyData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\nexport class HierarchyNode {\r\n  children: BehaviorSubject<HierarchyNode[]>;\r\n  constructor(public item: string, children?: HierarchyNode[], public parent?: HierarchyNode) {\r\n    this.children = new BehaviorSubject(children === undefined ? [] : children);\r\n  }\r\n}\r\nconst TREE_DATA = [\r\n  new HierarchyNode(`Sarovar Hotels G1`, [\r\n    new HierarchyNode(`Sarovar Hotels SG1`, [\r\n      new HierarchyNode(`Sarovar Hotels P2`),\r\n      new HierarchyNode(`Sarovar Hotels P3`),\r\n      new HierarchyNode(`Sarovar Hotels P4`),\r\n    ]),\r\n    new HierarchyNode(`Sarovar Hotels SG2`, [\r\n      new HierarchyNode(`Sarovar Hotels P2`),\r\n      new HierarchyNode(`Sarovar Hotels P3`),\r\n      new HierarchyNode(`Sarovar Hotels P4`),\r\n      new HierarchyNode(`Sarovar Hotels P5`),\r\n    ]),\r\n    new HierarchyNode(`Sarovar Hotels P2`),\r\n    new HierarchyNode(`Sarovar Hotels P3`),\r\n    new HierarchyNode(`Sarovar Hotels P4`),\r\n    new HierarchyNode(`Sarovar Hotels P5`),\r\n    new HierarchyNode(`Sarovar Hotels P6`),\r\n    new HierarchyNode(`Sarovar Hotels P7`),\r\n    new HierarchyNode(`Sarovar Hotels P8`),\r\n  ]),\r\n  new HierarchyNode(`Sarovar Hotels G2`, [\r\n    new HierarchyNode(`Sarovar Hotels P1`),\r\n    new HierarchyNode(`Sarovar Hotels P2`),\r\n    new HierarchyNode(`Sarovar Hotels P3`),\r\n    new HierarchyNode(`Sarovar Hotels P4`),\r\n    new HierarchyNode(`Sarovar Hotels P5`),\r\n    new HierarchyNode(`Sarovar Hotels P6`),\r\n    new HierarchyNode(`Sarovar Hotels P7`),\r\n    new HierarchyNode(`Sarovar Hotels P8`),\r\n  ]),\r\n  new HierarchyNode(`Sarovar Hotels G3`, [\r\n    new HierarchyNode(`Sarovar Hotels P1`),\r\n    new HierarchyNode(`Sarovar Hotels P2`),\r\n    new HierarchyNode(`Sarovar Hotels P3`),\r\n    new HierarchyNode(`Sarovar Hotels P4`),\r\n    new HierarchyNode(`Sarovar Hotels P5`),\r\n    new HierarchyNode(`Sarovar Hotels P6`),\r\n    new HierarchyNode(`Sarovar Hotels P7`),\r\n    new HierarchyNode(`Sarovar Hotels P8`),\r\n  ])\r\n];\r\n@Component({\r\n  selector: 'app-hierarchy',\r\n  templateUrl: './hierarchy.component.html',\r\n  styleUrls: ['./hierarchy.component.scss']\r\n})\r\nexport class HierarchyComponent {\r\n  public isProgressing: boolean = true;\r\n  public loaderMessage: string = \"Loading...\";\r\n  holdingCompanyData: CompanyData;\r\n  recursive: boolean = false;\r\n  levels = new Map<HierarchyNode, number>();\r\n  treeControl: NestedTreeControl<HierarchyNode>;\r\n\r\n\r\n  dataSource: MatTreeNestedDataSource<HierarchyNode>;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, public dialogRef: MatDialogRef<HierarchyComponent>, @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: CompanyData,\r\n    private webService: WebService, private toast: ToastService\r\n  ) {\r\n    this.holdingCompanyData = _holdingCompanyData;\r\n    this.treeControl = new NestedTreeControl<HierarchyNode>(this.getChildren);\r\n    this.dataSource = new MatTreeNestedDataSource();\r\n    this.dataSource.data = [];\r\n    this.getHierarchyData(_holdingCompanyData.holdingCompanyID);\r\n\r\n\r\n\r\n  }\r\n  getChildren = (node: HierarchyNode) => {\r\n    return node.children;\r\n  };\r\n\r\n  hasChildren = (index: number, node: HierarchyNode) => {\r\n    return node.children.value.length > 0;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close({ event: 'close', data: null });\r\n  }\r\n  getHierarchyData(holdingCompanyID: string) {\r\n    this.webService.commonMethod('holdingcompany/gethierarchy/' + holdingCompanyID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          var hierarrchyData = [];\r\n          data.data.groups.map(function (group) {\r\n\r\n            var subGroupData = [];\r\n            group.subGroups.map(function (subgroup) {\r\n              var propertyData = [];\r\n              subgroup.properties.map(function (property) {\r\n                propertyData.push(new HierarchyNode(property.propertyName));\r\n\r\n\r\n              });\r\n              subGroupData.push(new HierarchyNode(subgroup.subGroupName, propertyData));\r\n\r\n            });\r\n            \r\n            group.properties.map(function (property) {\r\n              subGroupData.push(new HierarchyNode(property.propertyName));\r\n\r\n\r\n            });\r\n           \r\n            var groupData = new HierarchyNode(group.groupName, subGroupData);\r\n            hierarrchyData.push(groupData);\r\n\r\n\r\n\r\n          });\r\n         \r\n\r\n\r\n          this.dataSource.data = hierarrchyData;\r\n          this.isProgressing=false;\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n      });\r\n  }\r\n\r\n  /**\r\n * Toggle the node, remove from display list\r\n */\r\n  toggleNode(node) {\r\n   \r\n    let index = this.dataSource.data.findIndex(x => x.item == node.item);\r\n\r\n    if (!this.treeControl.isExpanded(node)) {\r\n      this.treeControl.expand(this.dataSource.data[index])\r\n      //this.treeControl.collapseAll();\r\n\r\n    } else {\r\n      this.treeControl.collapse(this.dataSource.data[index]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n","\r\n<app-loader *ngIf=\"isProgressing\" [msg]=\"loaderMessage\"></app-loader>\r\n\r\n\r\n<h2 mat-dialog-title>Hierarchy</h2>\r\n<mat-dialog-content  class=\"mat-typography\">\r\n  <div>\r\n    <div class=\"content-0 hierarchyContainer\">\r\n      \r\n     \r\n    <div fxFlex=\"100%\"  fxLayout=\"column\">\r\n        <div fxFlex=\"100%\" >\r\n            {{holdingCompanyData.holdingCompanyName}}\r\n        </div>\r\n        <div fxFlex=\"100%\" style=\"margin-bottom: 25px;\">\r\n          <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n            <mat-nested-tree-node *matTreeNodeDef=\"let node\">\r\n              <li>\r\n                <div class=\"mat-tree-node\">  {{node.item}}</div>\r\n              </li>\r\n            </mat-nested-tree-node>\r\n            <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChildren\">\r\n                <li class=\"example-tree-container\">\r\n                  <div class=\"mat-tree-node\">\r\n                    <button class=\"themecolor\" mat-icon-button matTreeNodeToggle\r\n                            [matTreeNodeToggleRecursive]=\"recursive\"\r\n                          [attr.aria-label]=\"'toggle ' + node.filename\">\r\n                      <mat-icon>\r\n                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n                      </mat-icon>\r\n                    </button>\r\n                    {{node.item}}\r\n                </div>\r\n                <ul class=\"example-tree-nested-node\">\r\n                  <div  *ngIf=\"treeControl.isExpanded(node)\">\r\n                  <ng-container matTreeNodeOutlet></ng-container>\r\n                  </div>\r\n                </ul>\r\n              </li>\r\n              \r\n            </mat-nested-tree-node>\r\n          </mat-tree>\r\n        </div>\r\n        \r\n        \r\n     \r\n  \r\n\r\n</div>\r\n</div>\r\n</div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button  mat-button type=\"button\"  class=\"border btnProperty\" (click)=\"onNoClick()\" >Back</button>\r\n\r\n \r\n</mat-dialog-actions>\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) return [];\r\n    if (!searchText) return items;\r\n\r\n    searchText = searchText.toLowerCase();\r\n    return items.filter(it => {\r\n      return it.name.toLowerCase().includes(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n// Services\r\n// import { CommonService } from '../services/common.service'\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\nimport { ConfigurationMicroService } from '../services/configuration-micro.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _configurationMicroService: ConfigurationMicroService,\r\n    public _localStorageService: LocalStorageService\r\n  ) {\r\n    /**\r\n     * @param: router\r\n     * @param: _localStorageService\r\n     */\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return true;\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nexport interface PropertyData {\n  propertyID: string;\n  propertyName: string;\n}\n@Component({\n  selector: 'app-delete-property',\n  templateUrl: './delete-property.component.html',\n  styleUrls: ['./delete-property.component.scss']\n})\nexport class DeletePropertyComponent implements OnInit {\n  propertyData:PropertyData;\n  constructor(public dialogRef: MatDialogRef<DeletePropertyComponent>,\n    @Inject(MAT_DIALOG_DATA) public _propertyData: PropertyData,private webService:WebService,private toast:ToastService) { \n\n      this.propertyData = _propertyData;\n    }\n    onConfirmClick():void{\n      var postData={\n        \"PropertyID\":this.propertyData.propertyID,\n             \n        \"DeletedBy\":\"Sirojan\",\n        // \"CreatedDateTime\":\"2012-04-23\",\n        // \"ModifiedDateTime\":\"2012-04-23\"\n        };\n     \n      this.webService.commonMethod('property/delete/'+this.propertyData.propertyID,postData,'DELETE',null)\n      .subscribe(data=>{\n        if(data.succeeded){\n          if(data.data==1){\n          \n            this.dialogRef.close( { event: 'close', data: 1 });\n            this.toast.success(\"Property Succesfully Removed\");\n  \n          }\n          else if(data.data==0){\n            this.toast.error(\"Please Remove the Child elements first\");\n            this.dialogRef.close( { event: 'close', data: 0 });\n          }\n          //this.holdingCompanyObj=data.data;\n         \n        }\n        else{\n          this.toast.error(data.errors);\n        }\n        \n        \n        \n        //this.isProgressing = false;\n      });\n    }\n  ngOnInit(): void {\n  }\n}\n","<mat-dialog-content>\n\t<p>\n\t\tAre you sure you want to delete <b>{{propertyData.propertyName}}</b> ?\n\t</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n\t<button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\" tabindex=\"1\">Yes</button>\n\t<button mat-raised-button mat-dialog-close tabindex=\"-1\">No</button>\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { EditHoldingcompanyComponent } from '../edit-holdingcompany/edit-holdingcompany.component';\r\nimport { DeleteHoldingcompanyComponent } from '../delete-holdingcompany/delete-holdingcompany.component';\r\n\r\nexport interface CompanyData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\n@Component({\r\n  selector: 'app-view-holdingcompany',\r\n  templateUrl: './view-holdingcompany.component.html',\r\n  styleUrls: ['./view-holdingcompany.component.scss']\r\n})\r\n\r\nexport class ViewHoldingcompanyComponent implements OnInit {\r\n  holdingCompanyData:CompanyData;\r\n  holdingCompanyObj={code:'',name:'',cityName:'',address:'',stateName:'',countryName:'',zipCode:'',   \r\n                    phoneNumber:''};\r\n\r\n  constructor(    public dialogRef: MatDialogRef<ViewHoldingcompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: CompanyData,private webService:WebService,private toast:ToastService,public dialog: MatDialog\r\n    ) {\r\n      this.holdingCompanyData = _holdingCompanyData;\r\n      this.getHoldingCompanyData(_holdingCompanyData.holdingCompanyID);\r\n\r\n     }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  editCompany(): void {\r\n\r\n      const dialogRef = this.dialog.open(EditHoldingcompanyComponent, {\r\n        panelClass: ['viewmore-dialog-container'],\r\n        disableClose: true ,\r\n        \r\n        //minHeight: '800px',    \r\n        data: {holdingCompanyName: this.holdingCompanyData.holdingCompanyName, holdingCompanyID: this.holdingCompanyData.holdingCompanyID}\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result.data==1){\r\n        \r\n          this.getHoldingCompanyData(this.holdingCompanyData.holdingCompanyID);\r\n          this.toast.success(\"Updated Successfully\");\r\n          // this.getCompanyGroupList(this.holdingCompanyID);\r\n        }\r\n      \r\n        // this.holdingCompanyName= result.data.holdingCompanyName;\r\n        // this.holdingCompanyID=result.data.holdingCompanyID;\r\n      });\r\n   \r\n   \r\n  }\r\n  getHoldingCompanyData(holdingCompanyID){\r\n    this.webService.commonMethod('holdingcompany/get/'+holdingCompanyID,null,'GET',null)\r\n    .subscribe(data=>{\r\n      if(data.succeeded){\r\n        this.holdingCompanyObj=data.data;\r\n       \r\n      }\r\n      else{\r\n        this.toast.error(data.errors);\r\n      }\r\n      \r\n      \r\n     \r\n      //this.isProgressing = false;\r\n    });\r\n  }\r\n  delete():void{\r\n    const dialogRef = this.dialog.open(DeleteHoldingcompanyComponent, {\r\n      //panelClass: ['viewmore-dialog-container'],\r\n      disableClose: true ,\r\n      \r\n      //minHeight: '800px',    \r\n      data: {holdingCompanyName: this.holdingCompanyData.holdingCompanyName, holdingCompanyID: this.holdingCompanyData.holdingCompanyID}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result.data==1){\r\n        //this.dialogRef.close( { event: 'close', data: this.holdingCompanyData });\r\n        this.dialogRef.close( { event: 'close', data:\"D\" });\r\n        \r\n        // this.getCompanyGroupList(this.holdingCompanyID);\r\n      }\r\n      else{\r\n     \r\n      }\r\n     \r\n     \r\n    });\r\n   \r\n  }\r\n  close(): void {\r\n   \r\n    this.dialogRef.close( { event: 'close', data: this.holdingCompanyData });\r\n  }\r\n}\r\n","\r\n<h2 mat-dialog-title>\r\n    <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\r\n<div fxFlex=\"75%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Holding Company</div>\r\n<div fxFlex=\"25%\" fxFlex.xs=\"100%\" class=\"headerAction\">\r\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\" class=\"editcontainer\">\r\n        <div fxFlex=\"100%\">\r\n            <i class=\"fas fa-pencil-alt themecolor fxcursor_pointer\" (click)=\"editCompany()\"></i>\r\n        </div>\r\n        <div fxFlex=\"100%\" class=\"headeredittext fxcursor_pointer\" (click)=\"editCompany()\">\r\n            Edit\r\n        </div>\r\n     \r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100%\">\r\n            <i class=\"far fa-trash-alt themecolor fxcursor_pointer\" (click)=\"delete()\"></i>\r\n        </div>\r\n        <div fxFlex=\"100%\" class=\"headerdeletetext fxcursor_pointer\" (click)=\"delete()\">\r\n            Delete\r\n        </div>\r\n      \r\n    </div>\r\n    \r\n   </div>\r\n    </div>\r\n   \r\n</h2>\r\n<mat-dialog-content  class=\"mat-typography\">\r\n\r\n    <div>\r\n      <div class=\"content-0\">\r\n        \r\n       \r\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n              <div fxFlex=\"100%\" class=\"labeltext\">\r\n                  Code\r\n              </div>\r\n              <div fxFlex=\"100%\">\r\n              {{holdingCompanyObj.code}}\r\n            </div>\r\n           \r\n            </div>\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100%\" class=\"labeltext\">\r\n                    Name\r\n                </div>\r\n                <div fxFlex=\"100%\">\r\n                    {{holdingCompanyObj.name}}\r\n              </div>\r\n             \r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100%\" class=\"labeltext\">\r\n                    Address\r\n                </div>\r\n                <div fxFlex=\"100%\">\r\n                    {{holdingCompanyObj.address}}\r\n              </div>\r\n             \r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"content\">\r\n        \r\n       \r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100%\" class=\"labeltext\">\r\n                    Country\r\n                </div>\r\n                <div fxFlex=\"100%\">\r\n                    {{holdingCompanyObj.countryName}}\r\n              </div>\r\n             \r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                  <div fxFlex=\"100%\" class=\"labeltext\">\r\n                      State\r\n                  </div>\r\n                  <div fxFlex=\"100%\">\r\n                    {{holdingCompanyObj.stateName}}\r\n                </div>\r\n               \r\n                </div>\r\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                  <div fxFlex=\"100%\" class=\"labeltext\">\r\n                      City\r\n                  </div>\r\n                  <div fxFlex=\"100%\">\r\n                    {{holdingCompanyObj.cityName}}\r\n                </div>\r\n               \r\n                </div>\r\n                <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100%\" class=\"labeltext\">\r\n                        Zip/Pin\r\n                    </div>\r\n                    <div fxFlex=\"100%\">\r\n                        {{holdingCompanyObj.zipCode}}\r\n                  </div>\r\n                 \r\n                  </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"content\">\r\n        \r\n       \r\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100%\" class=\"labeltext\">\r\n                        Phone Number\r\n                    </div>\r\n                    <div fxFlex=\"100%\">\r\n                        {{holdingCompanyObj.phoneNumber}}\r\n                  </div>\r\n                 \r\n                  </div>\r\n                 \r\n                </div>\r\n            </div>\r\n      </div>\r\n      </mat-dialog-content>","import { Component, OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { TRANSLATE } from 'src/app/shared/constant/translate';\r\nimport { AddHoldingcompanyComponent } from 'src/app/pages/holdingcompany/add/add-holdingcompany.component';\r\nimport { AddGroupComponent } from 'src/app/pages/group/add-group/add-group.component';\r\nimport { HierarchyComponent } from 'src/app/pages/hierarchy/hierarchy.component';\r\nimport { AddSubGroupComponent } from 'src/app/pages/group/add-sub-group/add-sub-group.component';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AddPropertyComponent } from './add-property/add-property.component';\r\nimport { ViewHoldingcompanyComponent } from 'src/app/pages/holdingcompany/view-holdingcompany/view-holdingcompany.component';\r\nimport { ViewGroupComponent } from 'src/app/pages/group/view-group/view-group.component';\r\nimport { ViewSubGroupComponent } from 'src/app/pages/group/view-sub-group/view-sub-group.component';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ViewPropertyComponent } from './view-property/view-property.component';\r\n\r\nexport interface HoldingCompanyOption {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\nexport interface GroupData {\r\n  groupID: string;\r\n  groupName: string;\r\n}\r\n@Component({\r\n  selector: 'app-property',\r\n  templateUrl: './property.component.html',\r\n  styleUrls: ['./property.component.scss']\r\n})\r\nexport class PropertyComponent implements OnInit {\r\n  searchText;\r\n  searchEnable=false;\r\n  radioParentGroup: any;\r\n  radioChildGroup: any;\r\n  companyAutoCompleteControl = new FormControl();\r\n  holdingCompanyOptions: HoldingCompanyOption[] = [{\r\n    holdingCompanyID: '1', holdingCompanyName: \"Sarovar Hotels 1\"\r\n  }\r\n  ];\r\n  groupData: GroupData[];\r\n  propertyData: any[];\r\n  filteredOptions: Observable<HoldingCompanyOption[]>;\r\n\r\n  panelOpenState = false;\r\n  groupID: string;\r\n  groupName: string;\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n  public hasProperty: boolean = false;\r\n  public isProgressing: boolean = true;\r\n  public isAddHodlingCompany: boolean = false;\r\n  public loaderMessage: string = \"Loading...\";\r\n  TRANSLATE: any = TRANSLATE['en'];\r\n  SelectedHoldingCompany: any;\r\n  companyGroupList: any;\r\n  public breadCrumb: string[] = [];\r\n\r\n  public defaultGroupCode: string = \"40531\";\r\n  public pmsCustCode: number = 20007;\r\n  public GroupList: any = [];\r\n  public PropertyList: any = [];\r\n  parentGroupChange(evt: any, group: any) {\r\n    var target = evt.target;\r\n    this.groupID = evt.value;\r\n    this.groupName = group.name;\r\n\r\n   \r\n    this.propertyData = [];\r\n    this.getPropertyList(this.groupID);\r\n    this.searchText='';\r\n    \r\n\r\n  }\r\n  showSearch(){\r\n    this.searchEnable=!this.searchEnable;\r\n  }\r\n  clearCompany(){\r\n    this.propertyData=[];\r\n    this.companyGroupList=[];\r\n    this.holdingCompanyID='';\r\n    this.holdingCompanyName='';\r\n\r\n    this.SelectedHoldingCompany=null;\r\n \r\n\r\n  }\r\n  childGroupChange(evt: any, group: any, parentGroup: any) {\r\n    var target = evt.target;\r\n    this.groupID = evt.value;\r\n\r\n\r\n\r\n    this.propertyData = [];\r\n    this.getPropertyList(this.groupID);\r\n    this.searchText='';\r\n    this.groupName = group.name;\r\n\r\n  }\r\n  addHoldingCompnay(): void {\r\n    const dialogRef = this.dialog.open(AddHoldingcompanyComponent, {\r\n      panelClass: 'custom-dialog-container',\r\n\r\n      data: { holdingCompanyName: null, holdingCompanyID: null },\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     \r\n      if (result.data.holdingCompanyID > 0) {\r\n        this.toast.success(\"Successfully Added\");\r\n        this.holdingCompanyName = result.data.holdingCompanyName;\r\n        this.holdingCompanyID = result.data.holdingCompanyID;\r\n        this.getHoldingCompanyList();\r\n        this.getCompanyGroupList(this.holdingCompanyID);\r\n        this.getPropertyListByCompany(this.holdingCompanyID);\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n  viewCompany(): void {\r\n    if (this.holdingCompanyID != \"\" && this.holdingCompanyID != null) {\r\n      const dialogRef = this.dialog.open(ViewHoldingcompanyComponent, {\r\n        panelClass: 'viewmore-dialog-container',\r\n        disableClose: true,\r\n\r\n        data: { holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result.data == \"D\") {\r\n          this.getCompanyGroupList(this.holdingCompanyID);\r\n          this.holdingCompanyID = '';\r\n          this.holdingCompanyName = '';\r\n          this.getHoldingCompanyList();\r\n\r\n        }\r\n\r\n      });\r\n    } else {\r\n      this.toast.error(\"please select holding company\");\r\n\r\n    }\r\n\r\n  }\r\n  addGroup(): void {\r\n    if (this.holdingCompanyID != \"\" && this.holdingCompanyID != null) {\r\n      const dialogRef = this.dialog.open(AddGroupComponent, {\r\n        panelClass: 'custom-dialog-container',\r\n\r\n\r\n        data: { holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result.data) {\r\n          this.getCompanyGroupList(this.holdingCompanyID);\r\n        }\r\n\r\n        this.holdingCompanyName = result.data.holdingCompanyName;\r\n        this.holdingCompanyID = result.data.holdingCompanyID;\r\n      });\r\n    } else {\r\n      this.toast.error(\"please select holding company\");\r\n\r\n    }\r\n\r\n  }\r\n  viewGroup(group): void {\r\n    if (this.holdingCompanyID != \"\" && this.holdingCompanyID != null) {\r\n      if(this.radioParentGroup==group.groupID){\r\n        const dialogRef = this.dialog.open(ViewGroupComponent, {\r\n          panelClass: 'viewmore-dialog-container',\r\n          disableClose: true,\r\n          //minHeight: '800px',    \r\n          data: { groupName: group.name, groupID: group.groupID }\r\n        });\r\n  \r\n        dialogRef.afterClosed().subscribe(result => {\r\n          this.getCompanyGroupList(this.holdingCompanyID);\r\n          if (result.data == \"D\") {\r\n            this.getHoldingCompanyList();\r\n          }\r\n        \r\n  \r\n        });\r\n      }else{\r\n        this.toast.error(\"please select the Group to view details\");\r\n      }\r\n      \r\n    } else {\r\n      this.toast.error(\"please select holding company\");\r\n\r\n    }\r\n\r\n  }\r\n  viewSubGroup(group: any, parentGroup: any, subGroupIndex: string): void {\r\n\r\n    if (this.holdingCompanyID != \"\" && this.holdingCompanyID != null) {\r\n      if(this.radioParentGroup==group.groupID){\r\n      const dialogRef = this.dialog.open(ViewSubGroupComponent, {\r\n        panelClass: 'viewmore-dialog-container',\r\n        disableClose: true,\r\n\r\n        data: {\r\n          groupName: group.name, groupID: group.groupID, parentGroupName: parentGroup.name, parentGroupID: parentGroup.groupID,\r\n          holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID, subGroupIndex: subGroupIndex\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.getCompanyGroupList(this.holdingCompanyID);\r\n        if (result.data == \"D\") {\r\n          this.getHoldingCompanyList();\r\n        }\r\n      });\r\n    }else{\r\n      this.toast.error(\"please select the Sub Group to view details\");\r\n    }\r\n    } else {\r\n      this.toast.error(\"please select holding company\");\r\n\r\n    }\r\n\r\n  }\r\n  showHirarchy(): void {\r\n    if (this.holdingCompanyID != \"\" && this.holdingCompanyID != null) {\r\n    const dialogRef = this.dialog.open(HierarchyComponent, {\r\n      panelClass: 'custom-dialog-container',\r\n      disableClose: true,\r\n      data: { holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      //this.holdingCompanyName = result;\r\n    });\r\n  } else {\r\n    this.toast.error(\"please select holding company\");\r\n\r\n  }\r\n  }\r\n  addSubGroup(group): void {\r\n    if(this.radioParentGroup==group.groupID){\r\n    const dialogRef = this.dialog.open(AddSubGroupComponent, {\r\n      panelClass: 'custom-dialog-container',\r\n\r\n      data: { groupName: group.name, groupID: group.groupID, holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result.data) {\r\n        this.getCompanyGroupList(this.holdingCompanyID);\r\n      }\r\n\r\n      this.holdingCompanyName = result.data.holdingCompanyName;\r\n      this.holdingCompanyID = result.data.holdingCompanyID;\r\n    });\r\n  }else{\r\n    this.toast.error(\"please select the  Group First\");\r\n  }\r\n  }\r\n\r\n\r\n  addProperty(): void {\r\n    if (this.groupID != \"\" && this.groupID != null) {\r\n      const dialogRef = this.dialog.open(AddPropertyComponent, {\r\n        panelClass: 'custom-dialog-container',\r\n        //minHeight: '800px',    \r\n        data: {\r\n          holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID, groupID: this.groupID,\r\n          groupName: this.groupName\r\n        },\r\n        autoFocus: false\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.getPropertyList(this.groupID);\r\n\r\n      });\r\n    }\r\n    else {\r\n      this.toast.error(\"please select a group\");\r\n    }\r\n  }\r\n\r\n\r\n  constructor(private webService: WebService, private toast: ToastService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.breadCrumb = [\"Admin\", \"Hotel Creation\"];\r\n    this.getHoldingCompanyList();\r\n    this.isProgressing=false;\r\n\r\n  }\r\n\r\n  getCompanyGroupList(holdingCompanyID) {\r\n    this.webService.commonMethod('group/getbycompany/' + holdingCompanyID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          var originalData = data.data;\r\n\r\n          var parentGroup = data.data.filter(x => x.parentGroupID == null);\r\n\r\n\r\n          this.companyGroupList = parentGroup.map(function (a) {\r\n            var childGroups = originalData.filter(x => x.parentGroupID == a.groupID);\r\n            if (childGroups != null && childGroups.length > 0) {\r\n              return { name: a.name, groupID: a.groupID, panelOpenState: false, hasChildGroup: true, childGroupList: childGroups };\r\n            } else {\r\n              return { name: a.name, groupID: a.groupID, panelOpenState: false, hasChildGroup: false, childGroupList: null };\r\n            }\r\n\r\n\r\n          });\r\n\r\n\r\n\r\n        } else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getPropertyListByCompany(holdingCompanyID) {\r\n    this.webService.commonMethod('property/GetByHoldingCompany/' + holdingCompanyID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.propertyData = data.data;\r\n        } else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getHoldingCompanyList() {\r\n    this.webService.commonMethod('holdingcompany/get?pageSize=1000', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          var holdingCompanyID = this.holdingCompanyID;\r\n          var holdingCompanyName = '';\r\n         \r\n          this.holdingCompanyOptions = data.data.map(function (a) {\r\n            if (holdingCompanyID == a.holdingCompanyID) {\r\n\r\n              holdingCompanyName = a.name;\r\n            }\r\n            return { holdingCompanyID: a.holdingCompanyID, holdingCompanyName: a.name }\r\n          }\r\n          );\r\n         \r\n          this.holdingCompanyName = holdingCompanyName;\r\n          this.filteredOptions = this.companyAutoCompleteControl.valueChanges\r\n            .pipe(\r\n              startWith<string | HoldingCompanyOption>(''),\r\n              map(value => typeof value === 'string' ? value : value?.holdingCompanyName),\r\n              map(holdingCompanyName => holdingCompanyName ? this._filter(holdingCompanyName) : this.holdingCompanyOptions.slice())\r\n            );\r\n\r\n          this.companyAutoCompleteControl.setValue({ holdingCompanyID: this.holdingCompanyID, holdingCompanyName: this.holdingCompanyName });\r\n\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n\r\n      });\r\n  }\r\n  displayFn(holdingCompanyOption?: HoldingCompanyOption): string | undefined {\r\n    return holdingCompanyOption ? holdingCompanyOption.holdingCompanyName : undefined;\r\n  }\r\n\r\n  private _filter(name: string): HoldingCompanyOption[] {\r\n    const filterValue = name.toLowerCase();\r\n\r\n    return this.holdingCompanyOptions.filter(option => option.holdingCompanyName.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n\r\n\r\n  OnCompanySelected(selectedCompany) {\r\n    this.holdingCompanyID = selectedCompany.holdingCompanyID;\r\n    this.holdingCompanyName = selectedCompany.holdingCompanyName;\r\n    this.getCompanyGroupList(selectedCompany.holdingCompanyID);\r\n    this.getPropertyListByCompany(selectedCompany.holdingCompanyID);\r\n    this.searchEnable=false;\r\n    this.searchText=\"\";\r\n    this.groupID = \"\";\r\n    this.groupName = \"\";\r\n    this.propertyData = [];\r\n  }\r\n\r\n  hasChildGroup(group, groupLIst): boolean {\r\n\r\n    const result = groupLIst.find(({ parentGroupID }) => parentGroupID === group.groupID);\r\n    if (result) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  getPropertyList(groupID) {\r\n\r\n    this.webService.commonMethod('property/getbygroup/' + groupID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.propertyData = data.data;\r\n        }\r\n        else {\r\n          this.propertyData = [];\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n      });\r\n  }\r\n  viewProperty(property: any, propertyIndex: string): void {\r\n\r\n    if (this.groupID != \"\" && this.groupID != null) {\r\n      const dialogRef = this.dialog.open(ViewPropertyComponent, {\r\n        panelClass: 'viewmore-dialog-container',\r\n        disableClose: true,\r\n        //minHeight: '800px',    \r\n        data: {\r\n          groupName: this.groupName, groupID: this.groupID,\r\n          holdingCompanyName: this.holdingCompanyName, holdingCompanyID: this.holdingCompanyID, propertyIndex: propertyIndex,\r\n          propertyName: property.name, propertyID: property.propertyID\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.getCompanyGroupList(this.holdingCompanyID);\r\n        this.getPropertyList(this.groupID);\r\n        if (result.data == \"D\") {\r\n\r\n\r\n          this.getHoldingCompanyList();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      });\r\n    } else {\r\n      this.toast.error(\"please select the Holding company & Group\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<app-loader *ngIf=\"isProgressing\" [msg]=\"loaderMessage\"></app-loader>\r\n\r\n\r\n<div>\r\n    <h1 class=\"page_heading margin-padding-none\">{{TRANSLATE.GEM.Hotel_Title}}</h1>\r\n    <app-breadcrumb [breadCrumbList]=\"breadCrumb\"></app-breadcrumb>\r\n</div>\r\n<!-- numbersOnly -->\r\n<div class=\"content\">\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\">\r\n      \r\n      <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n      \r\n           <mat-card>\r\n      \r\n              <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxLayout=\"row\"  fxLayout.lt-sm=\"column\"   fxLayoutGap=\"15px\">\r\n                  <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                        <mat-label>Hodling Company</mat-label>\r\n                        <input type=\"text\"\r\n                        placeholder=\"Holding Company\"\r\n                        aria-label=\"Number\"\r\n                        matInput\r\n                        [formControl]=\"companyAutoCompleteControl\"\r\n                        [matAutocomplete]=\"auto\" [(ngModel)]=\"SelectedHoldingCompany\">\r\n         \r\n                       \r\n                        <span class=\"fas fa-times-circle clearspanicon themecolor fxcursor_pointer\" (click)=\"clearCompany()\" *ngIf=\"holdingCompanyID !='' && holdingCompanyID !=null\"></span>\r\n                        <span class=\"fas fa-search searchspanicon themecolor\"></span>\r\n                        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                          <mat-option  (click)=\"OnCompanySelected(SelectedHoldingCompany)\" *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                            {{option.holdingCompanyName}}\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"75%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\" fxFlex.sm=\"50%\">\r\n                    <div fxFlex=\"7%\" fxFlex.sm=\"33%\" fxFlex.xs=\"33%\" (click)=\"viewCompany()\">\r\n                        <i class=\"fas fa-ellipsis-h themecolor iconSize moreicon fxcursor_pointer\"></i><br/>\r\n                        <div class=\"themecolor moretext fxcursor_pointer\">More</div>\r\n                    </div>\r\n                    <div fxFlex=\"7%\" fxFlex.sm=\"33%\" fxFlex.xs=\"33%\" (click)=\"addHoldingCompnay()\">\r\n                        <i class=\"fas fa-plus themecolor  createicon\"></i><br/>\r\n                        <div class=\"themecolor createtext\">Create</div>\r\n                    </div>\r\n                    <div fxFlex=\"7%\" fxFlex.sm=\"33%\" fxFlex.xs=\"33%\" (click)=\"showHirarchy()\">\r\n                        <i class=\"fas fa-sitemap themecolor  createicon\"></i><br/>\r\n                        <div class=\"themecolor createtext\">Hierarchy</div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n       \r\n           \r\n        \r\n        \r\n          </mat-card>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n<div class=\"content\">\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"24px grid\">\r\n      <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" class=\"fxa_group\">\r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <mat-card-header class=\"titleBorder\">\r\n              <div fxFlex=\"100%\">\r\n                  <div fxFlex=\"90%\">\r\n                      Group\r\n                  </div>\r\n                  <div fxFlex=\"10%\">\r\n                      <i class=\"fas fa-plus themecolor  groupCreateIcon\" (click)=\"addGroup()\"></i><br/>\r\n            <div class=\"themecolor createtext\">Create</div>\r\n                  </div>\r\n              </div>\r\n          \r\n          \r\n          </mat-card-header>\r\n          <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"radioParentGroup\">\r\n            <div fxLayout=\"row wrap\" fxFlex=\"100%\" *ngIf=\"companyGroupList?.length > 0\"  class=\"fxa_group_container\" fxLayout.lt-sm=\"column\" >\r\n            \r\n              <ng-container *ngFor=\"let group of companyGroupList; let i=index\" >\r\n               \r\n              <div fxFlex=\"100%\"  class=\"fxa_group_item\" *ngIf=\"group.hasChildGroup\">\r\n                <mat-accordion >\r\n          \r\n                  <mat-expansion-panel hideToggle=\"true\" class=\"mat-elevation-z0\" (opened)=\"group.panelOpenState = true\"\r\n                                       (closed)=\"group.panelOpenState = false\">\r\n                    <mat-expansion-panel-header #panelH (click)=\"panelH._toggle()\">\r\n                      <mat-panel-title>\r\n                <div fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                  <div fxFlex=\"45%\" fxFlex.xs=\"100%\">\r\n                    <mat-radio-button value=\"{{group.groupID}}\"  (change)=\"parentGroupChange($event,group)\"><span style=\"font-size: 11px;opacity: 0.7\">Group {{i+1}}</span><br/><span style=\"font-size: 12px;\">{{group.name}}</span></mat-radio-button>\r\n                    </div>\r\n                    <div fxFlex=\"54%\" fxFlex.xs=\"100%\">\r\n                      <div fxFlex=\"22%\" fxFlex.xs=\"20%\">\r\n                        <i class=\"fas fa-ellipsis-h themecolor iconSize moreicon \" (click)=\"viewGroup(group)\"></i><br/>\r\n                        <div class=\"themecolor moretext\" (click)=\"viewGroup(group)\">More</div>\r\n                    </div>\r\n                    <div fxFlex=\"20%\">\r\n                      <i class=\"fas fa-plus themecolor  createicon\" (click)=\"addSubGroup(group)\"></i><br/>\r\n                              <div class=\"themecolor createtext\">Sub Group</div>\r\n                  </div>\r\n                  <div fxFlex=\"74%\" fxLayoutAlign=\"end\" (click)=\"panelH._toggle()\" >\r\n                    \r\n                    <i  *ngIf=\"!group.panelOpenState\" class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\r\n                    <i *ngIf=\"group.panelOpenState\" class=\"fas fa-angle-up themecolor iconSize moreicon\"></i>\r\n                </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n                \r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n            \r\n                <mat-radio-group aria-label=\"Select an option\"  class=\"subGroupRadio\" [(ngModel)]=\"radioParentGroup\"> \r\n                  <ng-container *ngFor=\"let childGroup of group.childGroupList; let b=index\" >\r\n                   \r\n            <div fxFlex=\"100%\" class=\"fxa_sub_group_item\" fxLayout=\"row wrap\" [class.subGroupSelected]=\"childGroup.groupID==radioParentGroup\"> \r\n              <div fxFlex=\"37%\" fxFlex.xs=\"78%\" style=\"margin-left: 5%;\" >\r\n                <mat-radio-button value=\"{{childGroup.groupID}}\"  (change)=\"childGroupChange($event,childGroup,group)\"><span style=\"font-size: 11px;opacity: 0.7\">Sub Group {{b+1}}</span><br/><span style=\"font-size: 12px;\">{{childGroup.name}}</span></mat-radio-button>\r\n                </div>\r\n                <div fxFlex=\"10%\" fxFlex.xs=\"12%\" >\r\n                  <i class=\"fas fa-ellipsis-h themecolor iconSize moreicon fxcursor_pointer\" (click)=\"viewSubGroup(childGroup,group,b)\"></i><br/>\r\n                  <div class=\"themecolor moretext fxcursor_pointer\" (click)=\"viewSubGroup(childGroup,group,b)\">More</div>\r\n              </div>\r\n            \r\n            </div>\r\n      \r\n          </ng-container>\r\n            </mat-radio-group>\r\n        \r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n              </div>\r\n              \r\n             \r\n              <div fxFlex=\"100%\" *ngIf=\"!group.hasChildGroup\"   fxLayout=\"row wrap\"  class=\"fxa_group_item\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"42%\" fxFlex.xs=\"100%\">\r\n                <mat-radio-button value=\"{{group.groupID}}\" (change)=\"parentGroupChange($event,group)\"><span style=\"font-size: 11px;opacity: 0.7\">Group {{i+1}}</span><br/><span style=\"font-size: 12px;\">{{group.name}}</span></mat-radio-button>\r\n                </div>\r\n                <div fxFlex=\"57%\" fxFlex.xs=\"100%\">\r\n                  <div fxFlex=\"20%\" >\r\n                    <i class=\"fas fa-ellipsis-h themecolor iconSize moreicon fxcursor_pointer\" (click)=\"viewGroup(group)\"></i><br/>\r\n                    <div class=\"themecolor moretext fxcursor_pointer\" (click)=\"viewGroup(group)\">More</div>\r\n                </div>\r\n                <div fxFlex=\"20%\" >\r\n                  <i class=\"fas fa-plus themecolor  createicon\" (click)=\"addSubGroup(group)\"></i><br/>\r\n                          <div class=\"themecolor createtext\">Sub Group</div>\r\n              </div>\r\n                </div>\r\n              \r\n              </div>\r\n              </ng-container>\r\n              \r\n            </div>\r\n          </mat-radio-group>\r\n    \r\n          <img mat-card-image class=\"fxam_imgHeight\" *ngIf=\"companyGroupList?.length < 1\" src=\"./assets/image/group.png\">\r\n      \r\n    \r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" class=\"fxa_property\"  >\r\n          <mat-card class=\"mat-elevation-z4\" fxLayout=\"column\">\r\n            <div fxFlex=\"100%\" >\r\n              <mat-card-header class=\"titleBorder\"> \r\n                <div fxFlex=\"100%\">\r\n                    <div fxFlex=\"40%\" fxFlex.xs=\"50%\">\r\n                        Property\r\n                    </div>\r\n                    <div fxFlex=\"50%\" fxFlex.xs=\"30%\" fxLayoutAlign=\"end start\" fxLayoutGap=\"10px\">\r\n                      <div fxFlex=\"80%\">\r\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\" *ngIf=\"searchEnable && propertyData?.length > 1\" style=\"margin-top: -15px;\"> \r\n                            <mat-label></mat-label>\r\n                            <input  matInput #input placeholder=\"Search by name\" [(ngModel)]=\"searchText\">\r\n                            <!-- <mat-error\r\n                            *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\r\n                            Phone Number is <strong>required</strong>\r\n                          </mat-error> -->\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"20%\" >\r\n                     \r\n                      <i class=\"fas fa-search themecolor  groupCreateIcon\" (click)=\"showSearch()\" *ngIf=\"propertyData?.length > 1\" ></i><br/>\r\n            <div class=\"themecolor createtext\" *ngIf=\"propertyData?.length > 1\" (click)=\"showSearch()\">Search</div>\r\n                  </div>\r\n                    </div>\r\n                    <div fxFlex=\"10%\" fxFlex.xs=\"20%\">\r\n                        <i class=\"fas fa-plus themecolor  groupCreateIcon\" (click)=\"addProperty()\"></i><br/>\r\n              <div class=\"themecolor createtext\">Create</div>\r\n                    </div>\r\n                </div>\r\n              </mat-card-header>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" fxFlex=\"100%\" class=\"fxa_group_container\" fxLayout.lt-sm=\"column\"  >\r\n              <ng-container *ngFor=\"let property of propertyData | filter:searchText; let i=index\" >\r\n            <div fxFlex=\"100%\" fxLayout=\"row wrap\"  class=\"fxa_group_item\" fxLayout.lt-sm=\"column\">\r\n\r\n              <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n              <span style=\"font-size: 11px;opacity: 0.7\">Property {{i+1}}</span><br/><span style=\"font-size: 12px;\">{{property.name}}</span>\r\n              </div>\r\n              <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\r\n                <div fxFlex=\"60%\" fxFlex.xs=\"30%\">\r\n                  <span style=\"font-size: 11px;opacity: 0.7\">Code</span><br/><span style=\"font-size: 12px;\">{{property.code}}</span>\r\n              </div>\r\n                <div fxFlex=\"40%\" fxFlex.xs=\"30%\">\r\n                  <i class=\"fas fa-ellipsis-h themecolor iconSize moreicon fxcursor_pointer\" (click)=\"viewProperty(property,i)\"></i><br/>\r\n                  <div class=\"themecolor moretext fxcursor_pointer\" (click)=\"viewProperty(property,i)\">More</div>\r\n              </div>\r\n              </div>\r\n            \r\n             \r\n            \r\n            </div>\r\n          </ng-container>\r\n       \r\n            <img  height=\"100%\" class=\"fxam_imgHeight\" *ngIf=\"propertyData?.length < 1\" src=\"./assets/image/property.png\">\r\n          </div>\r\n        \r\n          </mat-card>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  <!-- <mat-card>\r\n    <div fxLayout=\"row wrap\" fxFlex=\"100%\"  fxLayoutAlign=\"end end\" fxLayoutGap=\"3% grid\">\r\n        \r\n        \r\n        <div fxFlex=\"10%\" fxFlex.xs=\"50%\">\r\n            <button  mat-button  class=\"border btnProperty\">Back</button>\r\n        </div>\r\n        <div fxFlex=\"10%\" fxFlex.xs=\"50%\">\r\n            <button  mat-button class=\"button btnProperty\">Save</button>\r\n        </div>\r\n       \r\n      \r\n    </div>\r\n  </mat-card> -->\r\n\r\n  \r\n\r\n","import { StarRatingColor } from 'src/app/shared/star-rating/star-rating.component';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nimport { DeletePropertyComponent } from '../delete-property/delete-property.component';\nimport { EditPropertyComponent } from '../edit-property/edit-property.component';\n\nimport { MatIconRegistry } from '@angular/material/icon/icon-registry';\n\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport  *  as  dayList  from  'src/app/shared/data/day.json';\nexport interface PropertyData {\n  propertyID: string;\n  propertyName: string;\n  holdingCompanyID:string;\n  holdingCompanyName:string;\n  groupID:string;\n  groupName:string;\n  propertyIndex:number;\n}\n@Component({\n  selector: 'app-view-property',\n  templateUrl: './view-property.component.html',\n  styleUrls: ['./view-property.component.scss']\n})\nexport class ViewPropertyComponent implements OnInit {\n  rating: number = 4;\n  starCount: number = 5;\n  starColor: StarRatingColor = StarRatingColor.primary;\n  starColorP: StarRatingColor = StarRatingColor.primary;\n  starColorW: StarRatingColor = StarRatingColor.warn;\n\n  \n  propertyData:PropertyData;\n  dayListArr= [];\n  \n  propertyObj={code:'',name:'',cityName:'',address:'',stateName:'',countryName:'',zipCode:'',   \n                    phoneNumber:'',website:'',currencyCode:'',hotelTypeName:'',checkInTime:'',checkOutTime:'',otherCurrenciesArr:[],hotelType:'',weekDays:'',weekEnds:'',\n                    macAddressesArr:[],starRating:0,networkIPsArr:[]};\n\n  constructor(    public dialogRef: MatDialogRef<ViewPropertyComponent>,\n    @Inject(MAT_DIALOG_DATA) public _propertyData: PropertyData, private fb: FormBuilder,private webService:WebService,private toast:ToastService,public dialog: MatDialog\n    ) {\n      this.propertyData = _propertyData;\n      this.dayListArr= (dayList  as  any).default;\n      this.getPropertyData(_propertyData.propertyID);\n\n     }\n\n  ngOnInit(): void {\n  }\n  editProperty(): void {\n\n      const dialogRef = this.dialog.open(EditPropertyComponent, {\n        panelClass: ['viewmore-dialog-container'],\n        disableClose: true ,\n        \n        //minHeight: '800px',    \n        data: {propertyName: this.propertyData.propertyName, propertyID: this.propertyData.propertyID,\n        holdingCompanyName:this.propertyData.holdingCompanyName,holdingCompanyID:this.propertyData.holdingCompanyID,\n        groupID:this.propertyData.groupID, groupName:this.propertyData.groupName,propertyIndex:this.propertyData.propertyIndex\n        }\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        if(result.data==1){\n        \n          this.getPropertyData(this.propertyData.propertyID);\n          this.toast.success(\"Updated Successfully\");\n          // this.getCompanyGroupList(this.holdingCompanyID);\n        }\n    \n        // this.holdingCompanyName= result.data.holdingCompanyName;\n        // this.holdingCompanyID=result.data.holdingCompanyID;\n      });\n   \n   \n  }\n  getDayNameById(id:string):any{\n\n    return this.dayListArr.filter(x => x.dayID == id);\n  }\n  getPropertyData(propertyID){\n    console.log(this.dayListArr);\n    this.webService.commonMethod('property/get/'+propertyID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n      \n     \n        if(data.data.weekEnds){\n          console.log(this.dayListArr);\n          var weekEndArr = data.data.weekEnds.split(',');\n          \n          var WeekEndVal='';\n          \n          var i=0;\n         \n         //var WeekDayArr=this.dayListArr;\n         const WeekDayArr  = Object.assign([], this.dayListArr);\n          // console.log(WeekDayArr);\n          for(let weekEnd of  weekEndArr)\n          {\n           \n            if(i!=0){\n              WeekEndVal=WeekEndVal+', '+this.getDayNameById(weekEnd)[0].name;\n            }else{\n              WeekEndVal=this.getDayNameById(weekEnd)[0].name;\n            }\n            \n\n           \n            \n            i++;\n           \n          }\n        \n        \n          \n   \n          data.data.weekEnds=WeekEndVal;\n          //\n\n        }\n        if(data.data.weekDays){\n          var WeekDayVal='';\n          var weekDayArr = data.data.weekDays.split(',');\n          \n       \n          var i=0;\n         \n        \n          for(let weekDay of  weekDayArr)\n          {\n           \n            if(i!=0){\n              WeekDayVal=WeekDayVal+', '+this.getDayNameById(weekDay)[0].name;\n            }else{\n              WeekDayVal=this.getDayNameById(weekDay)[0].name;\n            }\n            \n\n           \n            \n            i++;\n           \n          }\n        \n        \n          \n   \n      \n          data.data.weekDays=WeekDayVal;\n\n        }\n      \n        this.propertyObj=data.data;\n        if(data.data.networkIP){\n          this.propertyObj.networkIPsArr=data.data.networkIP.split(',');\n        }\n        if(data.data.macAddresses){\n          this.propertyObj.macAddressesArr=data.data.macAddresses.split(',');\n        }\n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n      \n      //this.isProgressing = false;\n    });\n  }\n  delete():void{\n    const dialogRef = this.dialog.open(DeletePropertyComponent, {\n      //panelClass: ['viewmore-dialog-container'],\n      disableClose: true ,\n      \n      //minHeight: '800px',    \n      data: {propertyName: this.propertyData.propertyName, propertyID: this.propertyData.propertyID}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result.data==1){\n        //this.dialogRef.close( { event: 'close', data: this.holdingCompanyData });\n        this.dialogRef.close( { event: 'close', data:\"D\" });\n        \n        // this.getCompanyGroupList(this.holdingCompanyID);\n      }\n      else{\n      \n      }\n     \n     \n    });\n   \n  }\n  close(): void {\n   \n    this.dialogRef.close( { event: 'close', data: this.propertyData });\n  }\n}\n","\n<h2 mat-dialog-title>\n    <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\n<div fxFlex=\"75%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Property</div>\n<div fxFlex=\"25%\" fxFlex.xs=\"100%\" class=\"headerAction\">\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\" class=\"editcontainer\">\n        <div fxFlex=\"100%\">\n            <i class=\"fas fa-pencil-alt themecolor fxcursor_pointer\" (click)=\"editProperty()\"></i>\n        </div>\n        <div fxFlex=\"100%\" class=\"headeredittext fxcursor_pointer\" (click)=\"editProperty()\">\n            Edit\n        </div>\n     \n    </div>\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100%\">\n            <i class=\"far fa-trash-alt themecolor fxcursor_pointer\" (click)=\"delete()\"></i>\n        </div>\n        <div fxFlex=\"100%\" class=\"headerdeletetext fxcursor_pointer\" (click)=\"delete()\">\n            Delete\n        </div>\n      \n    </div>\n    \n   </div>\n    </div>\n   \n</h2>\n<mat-dialog-content  class=\"mat-typography\">\n\n    <div>\n        <div class=\"content-0\"  >\n            <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"5px\" >\n                <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                  Holding Company\n                \n                  </div>\n                  <div fxFlex=\"25%\">\n                      {{propertyData.holdingCompanyName}}\n                    </div>\n                  \n                  </div>\n                  <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"5px\" >\n                      <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                          Group\n                         \n                           </div>\n                  <div fxFlex=\"25%\" >\n                    {{propertyData.groupName}}\n                    </div>\n                  \n                </div>\n      </div>\n      <div class=\"content-0\">\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n            <div fxFlex=\"80%\" fxFlex.xs=\"70%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n                Property {{propertyData.propertyIndex+1}}            \n              </div>\n              <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\n                  \n                <i  class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\n                \n               \n            </div>\n              \n            </div>\n      </div>\n      <div class=\"content\">\n        \n       \n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n              <div fxFlex=\"100%\" class=\"labeltext\">\n                  Code\n              </div>\n              <div fxFlex=\"100%\">\n              {{propertyObj.code}}\n            </div>\n           \n            </div>\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Name\n                </div>\n                <div fxFlex=\"100%\">\n                    {{propertyObj.name}}\n              </div>\n             \n              </div>\n              <div fxFlex=\"48%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Address\n                </div>\n                <div fxFlex=\"100%\">\n                    {{propertyObj.address}}\n              </div>\n             \n              </div>\n          </div>\n      </div>\n      <div class=\"content\">\n        \n       \n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Country\n                </div>\n                <div fxFlex=\"100%\">\n                    {{propertyObj.countryName}}\n              </div>\n             \n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                  <div fxFlex=\"100%\" class=\"labeltext\">\n                      State\n                  </div>\n                  <div fxFlex=\"100%\">\n                    {{propertyObj.stateName}}\n                </div>\n               \n                </div>\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                  <div fxFlex=\"100%\" class=\"labeltext\">\n                      City\n                  </div>\n                  <div fxFlex=\"100%\">\n                    {{propertyObj.cityName}}\n                </div>\n               \n                </div>\n                <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Piz/Zip\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{propertyObj.zipCode}}\n                  </div>\n                 \n                  </div>\n            </div>\n        </div>\n        <div class=\"content\">\n        \n       \n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Phone Number\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{propertyObj.phoneNumber}}\n                  </div>\n                 \n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Hotel Type\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{propertyObj.hotelTypeName}}\n                  </div>\n                 \n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                        <div fxFlex=\"100%\" class=\"labeltext\">\n                            Check-in Time\n                        </div>\n                        <div fxFlex=\"100%\">\n                            <div fxFlex=\"20%\"><i class=\"fas fa-clock\"></i></div>\n                            <div fxFlex=\"80%\">\n                            {{propertyObj.checkInTime}}\n                            </div>\n                      </div>\n                     \n                      </div>\n                      <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                        <div fxFlex=\"100%\" class=\"labeltext\">\n                           Check-Out Time\n                        </div>\n                        <div fxFlex=\"100%\">\n                            <div fxFlex=\"20%\"><i class=\"fas fa-clock\"></i></div>\n                            <div fxFlex=\"80%\">\n                            {{propertyObj.checkOutTime}}\n                            </div>\n                      </div>\n                     \n                      </div>\n                 \n                  </div>\n                  <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Website\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{propertyObj.website}}\n                  </div>\n                 \n                  </div>\n                 \n                </div>\n            </div>\n            <div class=\"content\">\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        WeekDays\n                    </div>\n                    <div fxFlex=\"100%\" style=\"word-wrap: break-word;\">\n                        {{propertyObj.weekDays}}\n                        \n                  </div>\n                 \n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                      <div fxFlex=\"100%\" class=\"labeltext\">\n                          WeekEnds\n                      </div>\n                      <div fxFlex=\"100%\" style=\"word-wrap: break-word;\">\n                          {{propertyObj.weekEnds}}\n                   \n                    </div>\n                   \n                    </div>\n                    <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                      <div fxFlex=\"100%\" class=\"labeltext\">\n                          Currency\n                      </div>\n                      <div fxFlex=\"100%\">\n                        {{propertyObj.currencyCode}}\n                    </div>\n                   \n                    </div>\n                    <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                        <div fxFlex=\"100%\" class=\"labeltext\">\n                           Other Currency\n                        </div>\n                        <div fxFlex=\"100%\">\n                            <ng-container *ngFor=\"let currency of propertyObj.otherCurrenciesArr; let ix=index\" >\n                                <ng-container *ngIf=\"ix==0\">\n                                    {{currency.currencyCode}}\n                                </ng-container>\n                                <ng-container *ngIf=\"ix!=0\">\n                                    , {{currency.currencyCode}}\n                                </ng-container>\n                                </ng-container>\n                      </div>\n                     \n                      </div>\n                </div>\n            </div>\n            <div class=\"content\">\n                <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"0px\" class=\"view-property-chip\">\n                    \n                        <div fxFlex=\"100%\" class=\"labeltext\">\n                            Property Network IP\n                        </div>\n                        <div fxFlex=\"100%\">\n                            <mat-chip-list #chipList aria-label=\"IP selection\">\n                                <mat-chip *ngFor=\"let netWorkIP of propertyObj.networkIPsArr\" [selectable]=\"false\"\n                                         [removable]=\"true\" >\n                                  {{netWorkIP}}\n                                  <mat-icon matChipRemove *ngIf=\"true\">cancel</mat-icon>\n                                </mat-chip>\n                                \n                              </mat-chip-list>\n                          \n                            \n                      </div>\n                     \n                     \n                   \n                      \n                   \n                    </div>\n                </div>\n              \n                <div class=\"content\">\n                    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"view-property-chip\">\n                        \n                            <div fxFlex=\"100%\" class=\"labeltext\">\n                               Network Mac ID\n                            </div>\n                            <div fxFlex=\"100%\">\n                                <mat-chip-list #chipList aria-label=\"IP selection\">\n                                    <mat-chip *ngFor=\"let macAddress of propertyObj.macAddressesArr\" [selectable]=\"false\"\n                                             [removable]=\"true\" >\n                                      {{macAddress}}\n                                      <mat-icon matChipRemove *ngIf=\"true\">cancel</mat-icon>\n                                    </mat-chip>\n                                    \n                                  </mat-chip-list>\n                            \n                                \n                          </div>\n                         \n                         \n                       \n                          \n                       \n                        </div>\n                    </div>\n                    <div class=\"content\">\n                        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_starRating fx_disable_focus\">\n                            \n                                <div fxFlex=\"100%\" class=\"labeltext\">\n                                    Ratings\n                                </div>\n                                <div fxFlex=\"100%\">\n                                    <mat-star-rating [rating]=\"propertyObj.starRating\"  [starCount]=\"starCount\" [color]=\"starColor\" ></mat-star-rating>\n\n                                  \n                                    \n                              </div>\n                             \n                             \n                           \n                              \n                           \n                            </div>\n                        </div>\n      </div>\n      </mat-dialog-content>","import { Injectable } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class CustomValidationService {\r\n\r\n  constructor() { }\r\n\r\n  // Number Validation\r\n  customAlphabet(formControl: FormControl) {\r\n    let REGEXP = /^[a-zA-Z ]*$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customAlphabet: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customMobileNumberValidation(formControl: FormControl) {\r\n    let REGEXP = /^((\\\\+91-?)|0)?[0-9]{10}$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customMobileNumberValidation: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Custom Email Validation\r\n  customEmail(formControl: FormControl) {\r\n    if (formControl.value) {\r\n      let REGEXP = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[a-z]{2,4}$/i;\r\n\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customEmail: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  customEmaiValidation(formControl: FormControl) {\r\n    let REGEXP = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customMobileNumberValidation: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Number Validation\r\n  customNumber(formControl: FormControl) {\r\n    let REGEXP = /^\\d+$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customNumber: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Alphanumaric Validations\r\n  customAlphanumaric(formControl: FormControl) {\r\n    let REGEXP = /^[a-zA-Z0-9 ]*$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customAlphanumaric: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Number only validation\r\n  customNumberOnly(formControl: FormControl) {\r\n    let REGEXP = /^[0-9]+$/;\r\n\r\n    if (!isNaN(formControl.value)) {\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customNumberOnly: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // Number only validation only for display sequence\r\n  customNumberFor(formControl: FormControl) {\r\n    if (!formControl.value) {\r\n      return null;\r\n    }\r\n    else {\r\n      let REGEXP = /^[0-9]+$/;\r\n\r\n      if (!isNaN(formControl.value)) {\r\n        return REGEXP.test(formControl.value) ? null : {\r\n          customNumberFor: {\r\n            valid: false\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Alpha Numeric Validations\r\n  customAlphaNumeric(formControl: FormControl) {\r\n    let REGEXP = /^[a-zA-Z0-9]*$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customAlphaNumeric: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Space Validations\r\n  customSpace(formControl: FormControl) {\r\n    let REGEXP = /\\w/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customSpace: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customSpaceValidation(formControl: FormControl) {\r\n    return typeof formControl.value == 'string' && formControl.value.indexOf(\" \") == -1 ? null : {\r\n      customSpaceValidation: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customGSTINvalidation(formControl: FormControl) {\r\n    let REGEXP = /^([0][1-9]|[1-2][0-9]|[3][0-5])([a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9a-zA-Z]{1}[zZ]{1}[0-9a-zA-Z]{1})+$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customGSTINvalidation: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customMinLength(formControl: FormControl) {\r\n    if (formControl.value != '' && formControl.value != null && formControl.value != undefined) {\r\n      return formControl.value && formControl.value.trim().length > 0 ? null : {\r\n        customMinLength: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  customNameMinLength(formControl: FormControl) {\r\n    if (formControl.value != '' && formControl.value != null && formControl.value != undefined) {\r\n      return formControl.value && formControl.value.trim().length > 1 ? null : {\r\n        customNameMinLength: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  customEmailValidation(formControl: FormControl) {\r\n    let str = formControl.value;\r\n    if (typeof str == 'string') {\r\n      let x = str.split('.');\r\n      return ((x[x.length - 1]) != 'web') ? null : {\r\n        customEmailValidation: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  emailValidation(formControl: FormControl) {\r\n    let REGEXP = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customGSTINvalidation: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  customMinLengthForMkt(formControl: FormControl) {\r\n    return formControl.value && formControl.value.trim().length > 0 ? null : {\r\n      customMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  exchangeRateSearchMinLength(formControl: FormControl) {\r\n    return formControl.value && formControl.value.trim().length >= 1 ? null : {\r\n      exchangeRateSearchMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  revenueSacHsnMaxLength(formControl: FormControl) {\r\n    return formControl.value && formControl.value.trim().length <= 20 ? null : {\r\n      revenueSacHsnMaxLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customMinLengthSingle(formControl: FormControl) {\r\n    return formControl.value && formControl.value.trim().length > 0 ? null : {\r\n      customMinLengthSingle: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Alpha Numeric with Space Validations\r\n  customAlphaNumericWithSpace(formControl: FormControl) {\r\n    let REGEXP = /^[a-zA-Z0-9\\-\\s]+$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customAlphaNumericWithSpace: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Alpha Numeric with Special char Validations\r\n  customAlphaNumericWithSpecialCharacter(formControl: FormControl) {\r\n    let REGEXP = /^[-@./#&+\\w\\s]*$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customAlphaNumericWithSpecialCharacter: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Decimal Number only validation\r\n  customDecimalNumber(formControl: FormControl) {\r\n    let REGEXP = /^[0-9.]+$/;\r\n\r\n    if (formControl.value && formControl.value != '.') {\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customDecimalNumber: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Decimal Number only validation\r\n  onlyZeroNotAllowedForDecimal(formControl: FormControl) {\r\n    return formControl.value !== \"\" && parseFloat(formControl.value) == 0 ? {\r\n      onlyZeroNotAllowedForDecimal: {\r\n        valid: true\r\n      }\r\n    } : null;\r\n  }\r\n\r\n  // Decimal Number only validation\r\n  customMinNumber(formControl: FormControl) {\r\n    let REGEXP = /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/\r\n\r\n    if (formControl.value) {\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customDecimalNumber: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Decimal Number only validation\r\n  maxLengthDecimalValidation(formControl: FormControl) {\r\n    if (formControl.value) {\r\n      if (formControl.value.isInteger) {\r\n        return formControl.value && formControl.value.trim().length <= 10 ? null : {\r\n          maxLengthDecimalValidation: {\r\n            valid: false\r\n          }\r\n        }\r\n      } else {\r\n        let splitedValue = formControl.value.toString().split('.');\r\n        if (splitedValue[0]) {\r\n          return splitedValue[0] && splitedValue[0].trim().length <= 10 ? null : {\r\n            maxLengthDecimalValidation: {\r\n              valid: false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Decimal Number only validation\r\n  maxLengthPercentageValidation(formControl: FormControl) {\r\n    if (formControl.value) {\r\n      if (formControl.value.isInteger) {\r\n        return formControl.value && formControl.value.trim().length <= 2 ? null : {\r\n          maxLengthPercentageValidation: {\r\n            valid: false\r\n          }\r\n        }\r\n      } else {\r\n        let splitedValue = formControl.value.toString().split('.');\r\n        if (splitedValue[0]) {\r\n          return splitedValue[0] && splitedValue[0].trim().length <= 2 ? null : {\r\n            maxLengthPercentageValidation: {\r\n              valid: false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Decimal Number with only 2 Decimals only validation\r\n  customDecimalLimitNumber(formControl: FormControl) {\r\n    let REGEXP = /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/\r\n\r\n    if (formControl.value) {\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customDecimalLimitNumber: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Decimal Number only validation\r\n  customPercentageNumber(formControl: FormControl) {\r\n    let REGEXP = /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/\r\n    if (formControl.value && formControl.value != '.') {\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customPercentageNumber: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Url Validations - No http validation Only - string +  dot(.) + string - (Last string 2 to 7 char only)\r\n  customUrlValidation(formControl: FormControl) {\r\n    let REGEXP = /^[A-Za-z0-9_]+\\.[A-Za-z]{2,7}$/;\r\n\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customUrlValidation: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  //Address Validation\r\n  customAddress(formControl: FormControl) {\r\n    let REGEXP = /^[a-zA-Z0-9\\s,'-]*$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customAddress: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  //Zip/PostalCode Validation\r\n  customZip(formControl: FormControl) {\r\n    let REGEXP = /^[0-9\\s-]*$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customZip: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  //Phone Validation\r\n  customPhone(formControl: FormControl) {\r\n    let REGEXP = /^[0-9-]*$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customPhone: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  //URL Validation\r\n  customUrl(formControl: FormControl) {\r\n    let REGEXP = /^[0-9-]*$/;\r\n    return REGEXP.test(formControl.value) ? null : {\r\n      customUrl: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customDisplaySequenceValidation(formControl: FormControl) {\r\n    return formControl.value !== \"\" && formControl.value.length > 8 ? { customDisplaySequenceValidation: { valid: false } } : null;\r\n  }\r\n\r\n  customNumberOnlyForDisplaySequence(formControl: FormControl) {\r\n    let REGEXP = /^[0-9]*$/;\r\n\r\n    if (formControl.value !== \"\" && parseInt(formControl.value) != NaN) {\r\n      return REGEXP.test(formControl.value) ? null : {\r\n        customNumberOnlyForDisplaySequence: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  onlyZeroNotAllowed(formControl: FormControl) {\r\n    return formControl.value !== \"\" && parseInt(formControl.value) == 0 ? { onlyZeroNotAllowed: { valid: true } } : null;\r\n  }\r\n\r\n  //URL Validation\r\n  salesOfficeValidate(formControl: FormControl) {\r\n    let arrayLength = formControl.value.length;\r\n    if (arrayLength) {\r\n      let REGEXP = /^[0-9]*$/;\r\n      return REGEXP.test(arrayLength) ? null : {\r\n        salesOfficeValidate: {\r\n          valid: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  customSalesExecutiveNameMinLength(formControl: FormControl) {\r\n    return formControl.value.trim().length > 1 ? null : {\r\n      customSalesExecutiveNameMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n  customMarketSegmentNameMinLength(formControl: FormControl) {\r\n    return formControl.value.trim().length > 1 ? null : {\r\n      customMarketSegmentNameMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customBusinessSourceNameMinLength(formControl: FormControl) {\r\n    return formControl.value.trim().length > 1 ? null : {\r\n      customBusinessSourceNameMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customPreferenceNameMinLength(formControl: FormControl) {\r\n    return formControl.value.trim().length > 1 ? null : {\r\n      customPreferenceNameMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  customMembershipTypeNameMinLength(formControl: FormControl) {\r\n    return formControl.value.trim().length > 1 ? null : {\r\n      customMembershipTypeNameMinLength: {\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  spaceValidation(formControl: FormControl) {\r\n    return formControl.value.trim().length > 0 ? null : { spaceValidation: { valid: false } }\r\n  }\r\n\r\n  multiSelectValidation(fromControl: FormControl) {\r\n    return fromControl.value.length == 0 ? { multiSelectValidation: { valid: false } } : null;\r\n  }\r\n  rateValidation(formControl: FormControl) {\r\n    if (formControl.value) {\r\n      if (formControl.value == '.') {\r\n        return { rateValidation: { valid: false } }\r\n      }\r\n      else if (Number(formControl.value) == 0) {\r\n        return { rateValidation: { valid: false } }\r\n      }\r\n\r\n    }\r\n    return null;\r\n  }\r\n  maxRateValidation(formControl: FormControl) {\r\n    if (formControl.value && typeof formControl.value == 'string') {\r\n      let x = formControl.value.split('.');\r\n      if (x[0].length > 10) {\r\n        return { maxRateValidation: { valid: false } }\r\n      }\r\n    }\r\n  }\r\n  maxRateLengthValidation(formControl: FormControl) {\r\n    if (formControl.value && typeof formControl.value == 'string') {\r\n      let x = formControl.value.split('.');\r\n      if (x[0].length > 3) {\r\n        return { maxRateValidation: { valid: false } }\r\n      }\r\n    }\r\n  }\r\n\r\n  taxSlabValueValidation(formControl: FormControl) {\r\n    if (formControl.value) {\r\n      if (formControl.value == '.') {\r\n        return { rateValidation: { valid: false } }\r\n      }\r\n      else if (Number(formControl.value) < 0) {\r\n        return { rateValidation: { valid: false } }\r\n      }\r\n\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { CreateUserComponent } from '../create-user/create-user.component';\r\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\n@Component({\r\n  selector: 'app-link-product',\r\n  templateUrl: './link-product.component.html',\r\n  styleUrls: ['./link-product.component.scss']\r\n})\r\nexport class LinkProductComponent implements OnInit {\r\n  PanelOpenState=true;\r\n  formGroup: FormGroup;\r\n  DataArray = [];\r\n  groupList=[];\r\n  propertyList=[];\r\n  productList=[];\r\n\r\n  linkPropertyForm: FormGroup = this.formBuilder.group({\r\n    defaultGroupName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    defaultPropertyName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    \r\n\r\n\r\n  });\r\n\r\n  constructor(public dialogRef: MatDialogRef<CreateUserComponent>,private fb: FormBuilder,private webService: WebService, private toast: ToastService,private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.getCompanyGroupList(35);\r\n\r\n\r\n  }\r\n \r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close({ event: 'close', data: null });\r\n  }\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\ngetCompanyGroupList(holdingCompanyID) {\r\n  this.webService.commonMethod('group/getbycompany/' + holdingCompanyID, null, 'GET', null)\r\n    .subscribe(data => {\r\n      if (data.succeeded) {\r\n         this.groupList= data.data;\r\n      } else {\r\n        this.toast.error(data.errors);\r\n      }\r\n\r\n    });\r\n}\r\ngetPropertyList(groupID) {\r\n\r\n  this.webService.commonMethod('property/getbygroup/' + groupID, null, 'GET', null)\r\n    .subscribe(data => {\r\n      if (data.succeeded) {\r\n      this.propertyList = data.data;\r\n      }\r\n      else {\r\n        //this.propertyData = [];\r\n        this.toast.error(data.errors);\r\n      }\r\n\r\n\r\n    });\r\n}\r\nonSubmit(form){\r\n  console.log(form);\r\n}\r\n}\r\n","<app-single-property ></app-single-property>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nexport interface CompanyData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\n@Component({\r\n  selector: 'app-delete-holdingcompany',\r\n  templateUrl: './delete-holdingcompany.component.html',\r\n  styleUrls: ['./delete-holdingcompany.component.scss']\r\n})\r\nexport class DeleteHoldingcompanyComponent implements OnInit {\r\n  holdingCompanyData: CompanyData;\r\n  constructor(public dialogRef: MatDialogRef<DeleteHoldingcompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: CompanyData, private webService: WebService, private toast: ToastService) {\r\n\r\n    this.holdingCompanyData = _holdingCompanyData;\r\n  }\r\n  onConfirmClick(): void {\r\n    var postData = {\r\n      \"HoldingCompanyID\": this.holdingCompanyData.holdingCompanyID,\r\n      \"DeletedBy\": \"Sirojan\",\r\n\r\n    };\r\n\r\n    this.webService.commonMethod('holdingcompany/delete/' + this.holdingCompanyData.holdingCompanyID, postData, 'DELETE', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          if (data.data == 1) {\r\n\r\n            this.dialogRef.close({ event: 'close', data: 1 });\r\n            this.toast.success(\"Holding Company Succesfully Removed\");\r\n\r\n          }\r\n          else if (data.data == 0) {\r\n            this.toast.error(\"Please Remove the Child first\");\r\n            this.dialogRef.close({ event: 'close', data: 0 });\r\n          }\r\n\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n\r\n      });\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<p>\r\n\t\tAre you sure you want to delete <b>{{holdingCompanyData.holdingCompanyName}}</b> ?\r\n\t</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n\t<button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\" tabindex=\"1\">Yes</button>\r\n\t<button mat-raised-button mat-dialog-close tabindex=\"-1\">No</button>\r\n</mat-dialog-actions>\r\n","export const TRANSLATE = {\r\n  \"en\": {\r\n    \"GEM\": {\r\n      \"FRONT_OFFICE\": \"Front Office 1\",\r\n      \"GEM_MENU\": \"IDS Product Suite\",\r\n      \"ACCOUNTING_DATE\": \"Accounting Date\",\r\n      \"STATUS_T\": \"Status\",\r\n      \"LOG_OUT\": \"Logout\",\r\n      \"FLAT\": \"Flat\",\r\n      \"Admin\":\"Admin\",\r\n      \"Hotel_Title\":\"Hotel Creation\",\r\n      \"DB_CON_Title\":\"DB Connection Access\"\r\n    }\r\n  },\r\n  \"fr\": {\r\n    \"GEM\": {\r\n      \"FRONT_OFFICE\": \"Front Office 2\",\r\n      \"GEM_MENU\": \"IDS Product Suite\",\r\n      \"ACCOUNTING_DATE\": \"Accounting Date\",\r\n      \"STATUS_T\": \"Status\",\r\n      \"LOG_OUT\": \"Logout\",\r\n      \"FLAT\": \"Flat\",\r\n      \"Admin\":\"Admin\",\r\n      \"Hotel_Title\":\"Hotel Creation\",\r\n      \"DB_CON_Title\":\"DB Connection Access\"\r\n    }\r\n  },\r\n  \"ar\": {\r\n    \"GEM\": {\r\n      \"FRONT_OFFICE\": \"Front Office 3\",\r\n      \"GEM_MENU\": \"IDS Product Suite\",\r\n      \"ACCOUNTING_DATE\": \"Accounting Date\",\r\n      \"STATUS_T\": \"Status\",\r\n      \"LOG_OUT\": \"Logout\",\r\n      \"FLAT\": \"Flat\",\r\n      \"Admin\":\"Admin\",\r\n      \"DB_CON_Title\":\"DB Connection Access\"\r\n    }\r\n  }\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.scss']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  @Input('msg') msg?:string = \"Loading...\";\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"loader-outer\">\r\n    <div class=\"loader-content\">\r\n        <div class=\"lds-spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n        <p>{{msg}}</p>\r\n    </div>\r\n\r\n</div>","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ConfigurationMicroService {\r\n\r\n  private URL: any = {\r\n    // for dev\r\n    fx1adminapi: \"https://fortuneclouddevapi.azurewebsites.net/v1/configuration\",\r\n    fxauth : \"https://qafxauthentication.azurewebsites.net/api\",\r\n    fxadminapi:\"https://fxadminnewqaapi.azurewebsites.net/api/v1\"\r\n  };\r\n\r\n  constructor() {\r\n    this.setURL();\r\n  }\r\n\r\n  setURL() {\r\n    let host = window.location.host;\r\n    if (host.includes(\"localhost\")) {   \r\n      host = 'productsdev.idsnext.com';\r\n      //host = 'products.idsnext.com';     \r\n    }\r\n   if (host == \"products.idsnext.com\") {\r\n      this.URL = {\r\n        //Production\r\n        fx1adminapi: \"https://fortunecloudapi.idsnext.com/v1/configuration\",\r\n        fxauth : \"https://qafxauthentication.azurewebsites.net/api\"\r\n      \r\n      };\r\n    } \r\n  }\r\n\r\n  /**\r\n   * @return URL\r\n   */\r\n  getURL(): string {\r\n    return this.URL;\r\n  }\r\n  getConfigURL(): string {\r\n    return this.URL.getConfigURL;\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nexport interface GroupData {\n  groupID: string;\n  groupName: string;\n}\n@Component({\n  selector: 'app-delete-group',\n  templateUrl: './delete-group.component.html',\n  styleUrls: ['./delete-group.component.scss']\n})\nexport class DeleteGroupComponent implements OnInit {\n\n  groupData:GroupData;\n  constructor(public dialogRef: MatDialogRef<DeleteGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public _groupData: GroupData,private webService:WebService,private toast:ToastService) { \n\n      this.groupData = _groupData;\n    }\n    onConfirmClick():void{\n      var postData={\n        \"GroupID\":this.groupData.groupID,\n             \n        \"DeletedBy\":\"Sirojan\",\n        // \"CreatedDateTime\":\"2012-04-23\",\n        // \"ModifiedDateTime\":\"2012-04-23\"\n        };\n     \n      this.webService.commonMethod('group/delete/'+this.groupData.groupID,postData,'DELETE',null)\n      .subscribe(data=>{\n        if(data.succeeded){\n          if(data.data==1){\n          \n            this.dialogRef.close( { event: 'close', data: 1 });\n            this.toast.success(\"Group Succesfully Removed\");\n  \n          }\n          else if(data.data==0){\n            this.toast.error(\"Please Remove the Child elements\");\n            this.dialogRef.close( { event: 'close', data: 0 });\n          }\n          //this.holdingCompanyObj=data.data;\n         \n        }\n        else{\n          this.toast.error(data.errors);\n        }\n        \n        \n        \n        //this.isProgressing = false;\n      });\n    }\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n\t<p>\n\t\tAre you sure you want to delete <b>{{groupData.groupName}}</b> ?\n\t</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n\t<button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\" tabindex=\"1\">Yes</button>\n\t<button mat-raised-button mat-dialog-close tabindex=\"-1\">No</button>\n</mat-dialog-actions>\n\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { getgroups } from 'process';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\n\r\nexport interface DialogData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n  groupID: string;\r\n  groupName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-sub-group',\r\n  templateUrl: './add-sub-group.component.html',\r\n  styleUrls: ['./add-sub-group.component.scss']\r\n})\r\n\r\nexport class AddSubGroupComponent  {\r\n  panelOpenState = false;\r\n  defaultGroupCode: any = \"aaa\";\r\n  public GroupList: any = [];\r\n  orders = [];\r\n  DataArray = [];\r\n  countryList = [];\r\n  cityList = [];\r\n  stateList = [];\r\n  country: any = 0;\r\n  city: any = 0;\r\n  state: any = 0;\r\n  formGroup: FormGroup;\r\n  holdingCompanyData: DialogData;\r\n  value = this.fb.group({\r\n\r\n  });\r\n\r\n\r\n  ngOnInit() {\r\n    this.validate();\r\n\r\n\r\n\r\n  }\r\n  public validate(): void {\r\n    this.formGroup = this.fb.group({\r\n      'formArray1': this.fb.array([\r\n        this.initX(true)\r\n      ])\r\n    });\r\n   \r\n  }\r\n  get f() { return this.formGroup.controls; }\r\n\r\n  public initX(panelState): FormGroup {\r\n\r\n    this.DataArray.push({\r\n      countryList: this.countryList,\r\n      stateList: [],\r\n      cityList: [],\r\n      PanelOpenState: panelState,\r\n      groupState:0,\r\n      groupCity:0\r\n\r\n    })\r\n    \r\n    //alert(\"calling...\");\r\n    return this.fb.group({\r\n\r\n      groupName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupCode: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      groupState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      groupCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      groupPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n\r\n      countryList: this.fb.array(this.countryList),\r\n      stateList: this.fb.array([]),\r\n      cityList: this.fb.array([]),\r\n\r\n\r\n\r\n\r\n\r\n    });\r\n  }\r\n  resetForm() {\r\n    this.formGroup.reset();\r\n    var i=0;\r\n    for (let control of this.formGroup.get('formArray1')['controls']) {\r\n      control.controls[\"groupCountry\"].setValue(0);\r\n      control.controls[\"groupState\"].setValue(0);\r\n      control.controls[\"groupCity\"].setValue(0);\r\n      this.DataArray[i].stateList=[];\r\n      this.DataArray[i].cityList=[];\r\n      \r\n      i++;\r\n    }\r\n   \r\n   \r\n  }\r\n  public addX(): void {\r\n    const control = <FormArray>this.f.formArray1;\r\n    control.push(this.initX(false));\r\n  }\r\n\r\n\r\n\r\n  removeX(index) {\r\n    const control = <FormArray>this.f.formArray1;\r\n    control.removeAt(index);\r\n    // const form = this.form.get('groups') as FormArray\r\n    // form.removeAt(index);\r\n  }\r\n\r\n  trackByFn(index: any, item: any) {\r\n    return index;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.formGroup.valid) {\r\n      var groups = [];\r\n      for (let control of this.formGroup.get('formArray1')['controls']) {\r\n        var groupData = {\r\n          \"HoldingCompanyID\": this.holdingCompanyData.holdingCompanyID,\r\n          \"Name\": control.controls[\"groupName\"].value,\r\n          \"Code\": control.controls[\"groupCode\"].value,\r\n          \"CityID\": control.controls[\"groupCity\"].value,\r\n          \"StateId\": control.controls[\"groupState\"].value,\r\n          \"CountryId\": control.controls[\"groupCountry\"].value,\r\n          \"ZipCode\": control.controls[\"groupPinZip\"].value,\r\n          \"PhoneNumber\": control.controls[\"groupPhone\"].value,\r\n          \"ParentGroupID\":this.holdingCompanyData.groupID,\r\n          \"Address\": control.controls[\"groupAddress\"].value,\r\n          \"CreatedBy\": \"Sirojan\",\r\n          \"IsActive\": true,\r\n          \"ModifiedBy\": \"Sirojan\",\r\n\r\n        }\r\n        groups.push(groupData);\r\n        ;\r\n\r\n\r\n      }\r\n     \r\n      this.webService.commonMethod('group/post', { \"Groups\": groups }, 'POST', null)\r\n        .subscribe(data => {\r\n          if (data.succeeded) {\r\n            \r\n            // //this.countryList=data.data;\r\n            // this.holdingCompanyData.holdingCompanyID=data.data.holdingCompanyID;\r\n            // this.holdingCompanyData.holdingCompanyName=data.data.name;\r\n            this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n          }\r\n          else {\r\n            this.toast.error(data.errors);\r\n          }\r\n\r\n\r\n         \r\n          //this.isProgressing = false;\r\n        });\r\n      // ...\r\n\r\n     \r\n    }\r\n    else {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddSubGroupComponent >,\r\n    @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: DialogData, private fb: FormBuilder, private webService: WebService, private toast: ToastService) {\r\n    this.getCountryList();\r\n    this.holdingCompanyData = _holdingCompanyData;\r\n  }\r\n\r\n  getCityList(stateID, i) {\r\n\r\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          // var arrayControl = this.formGroup.get('formArray1') as FormArray;\r\n          // var item = arrayControl.at(i);\r\n          // item.value.stateList=state;\r\n          // item.value.cityList=data.data;\r\n          this.DataArray[i].cityList = data.data;\r\n         \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n       \r\n        //this.isProgressing = false;\r\n      });\r\n  }\r\n\r\n  getCountryList() {\r\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.DataArray[0].countryList = data.data;\r\n          this.countryList = data.data;          \r\n        \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n        \r\n        //this.isProgressing = false;\r\n      });\r\n  }\r\n  getStateList(countryID, i) {\r\n    var arrayControl = this.formGroup.get('formArray1') as FormArray;\r\n    var item = arrayControl.at(i);\r\n    \r\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          var arrayControl = this.formGroup.get('formArray1') as FormArray;\r\n          var item = arrayControl.at(i);\r\n          \r\n  \r\n          this.DataArray[i].stateList = data.data;\r\n          this.DataArray[i].cityList=[];\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n          this.stateList = [];\r\n        }\r\n      \r\n      \r\n      });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n\r\n\r\n<form [formGroup]=\"formGroup\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <h2 mat-dialog-title>Create Sub Group</h2>\r\n  <mat-dialog-content  class=\"mat-typography\">\r\n    <div>\r\n      <div class=\"content\"  >\r\n        <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"15px\" >\r\n            <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\r\n              Holding Company\r\n            \r\n              </div>\r\n              <div fxFlex=\"25%\">\r\n                {{holdingCompanyData.holdingCompanyName}}\r\n                </div>\r\n              \r\n              </div>\r\n              <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"15px\" >\r\n                  <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\r\n                      Group\r\n                     \r\n                       </div>\r\n              <div fxFlex=\"25%\" >\r\n                {{holdingCompanyData.groupName}}\r\n                </div>\r\n              \r\n            </div>\r\n  </div>\r\n      <div formArrayName=\"formArray1\" *ngFor=\"let group of f.formArray1['controls']; let ix=index\" [attr.data-index]=\"i\">\r\n        <mat-accordion formGroupName=\"{{ix}}\">\r\n     \r\n          <mat-expansion-panel [expanded]=\"DataArray[ix].PanelOpenState\"  hideToggle=\"true\" class=\"mat-elevation-z0\"  (opened)=\"DataArray[ix].PanelOpenState = true\"\r\n                               (closed)=\"DataArray[ix].PanelOpenState = false\" >\r\n                             \r\n            <mat-expansion-panel-header #panelH (click)=\"panelH._toggle()\">\r\n              <mat-panel-title>\r\n        <div class=\"content\" (click)=\"panelH._toggle()\">\r\n         \r\n          <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\r\n              <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\r\n                Sub Group {{ix+1}}           \r\n                </div>\r\n                <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\">\r\n                    \r\n                \r\n                  <i  *ngIf=\"!DataArray[ix].PanelOpenState\" class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\r\n                  <i *ngIf=\"DataArray[ix].PanelOpenState\" class=\"fas fa-angle-up themecolor iconSize moreicon\"></i>\r\n              </div>\r\n                \r\n              </div>\r\n        </div>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"content-0\">\r\n        \r\n       \r\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n           \r\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                  <mat-label>Code</mat-label>\r\n                  <input matInput  placeholder=\"Code\" formControlName=\"groupCode\" maxlength=\"10\">\r\n                  <mat-error\r\n                  *ngIf=\"group['controls'].groupCode.hasError('required')\">\r\n                  Code is <strong>required</strong>\r\n                </mat-error>\r\n               \r\n               \r\n              </mat-form-field>\r\n       \r\n            </div>\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                  <mat-label>Name</mat-label>\r\n                  <input matInput #input placeholder=\"Name\" formControlName=\"groupName\" maxlength=\"100\">\r\n                  <mat-error\r\n                  *ngIf=\"group['controls'].groupName.hasError('required')\">\r\n                  Group Name is <strong>required</strong>\r\n                </mat-error>\r\n                  \r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"48%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                  <mat-label>Address</mat-label>\r\n                  <input matInput #input placeholder=\"Address\" formControlName=\"groupAddress\" maxlength=\"100\">\r\n                  <mat-error\r\n                  *ngIf=\"group['controls'].groupAddress.hasError('required')\">\r\n                  Address is <strong>required</strong>\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"content\">\r\n          <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                  <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\r\n                      <mat-label>Country</mat-label>\r\n                      <mat-select placeholder=\"Select Country\"  (selectionChange)=\"getStateList($event.value,ix)\" formControlName=\"groupCountry\">\r\n                       \r\n                        <mat-option *ngFor=\"let country of DataArray[ix].countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\r\n                      </mat-select>\r\n                      <mat-error\r\n                      *ngIf=\"group['controls'].groupCountry.hasError('min')\">\r\n                      Country is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                \r\n                </div>\r\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                  <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                      <mat-label>State</mat-label>\r\n                      <mat-select placeholder=\"Select State\"   (selectionChange)=\"getCityList($event.value,ix)\" formControlName=\"groupState\">\r\n                      \r\n                        <mat-option *ngFor=\"let state of DataArray[ix].stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\r\n                      </mat-select>               \r\n                      <mat-error\r\n                      *ngIf=\"group['controls'].groupState.hasError('min')\">\r\n                      State is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                \r\n                </div>\r\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                  <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                      <mat-label>City</mat-label>\r\n                      <mat-select  placeholder=\"Select City\" formControlName=\"groupCity\">                       \r\n                        <mat-option *ngFor=\"let city of DataArray[ix].cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\r\n                      </mat-select>\r\n                      <mat-error\r\n                      *ngIf=\"group['controls'].groupCity.hasError('min')\">\r\n                      City is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                  <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                      <mat-label>Pin/Zip</mat-label>\r\n                      <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"groupPinZip\" maxlength=\"10\">\r\n                      <mat-error\r\n                      *ngIf=\"group['controls'].groupPinZip.hasError('required')\">\r\n                      PinZip is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n  </div>\r\n  <div class=\"content\">\r\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n          \r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                  <mat-label>Phone Number</mat-label>\r\n                  <input matInput #input placeholder=\"Phone Number\" formControlName=\"groupPhone\" numbersOnly maxlength=\"20\">\r\n                  <mat-error\r\n                  *ngIf=\"group['controls'].groupPhone.hasError('required')\">\r\n                  Phone is <strong>required</strong>\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"74%\"  fxFlex.xs=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end end\" >\r\n              <button  mat-button type=\"button\"  class=\"border btnProperty btnAddMoreGroup themecolor\" (click)=\"removeX(i)\"><i class=\"fas fa-minus\"></i>Remove Sub Group</button>\r\n              </div>\r\n          </div>\r\n  </div>\r\n  </mat-expansion-panel>\r\n  </mat-accordion>\r\n  </div> \r\n  <div class=\"content\">\r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end end\" >\r\n      <button  mat-button type=\"button\"  class=\"border btnProperty btnAddMoreGroup themecolor\" [autofocus]=\"false\" (click)=\"addX()\"><i class=\"fas fa-plus\"></i>Add Sub Group</button>\r\n      </div>\r\n      </div>\r\n  \r\n  </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n      <button   type=\"button\" mat-button  class=\"border btnProperty\" (click)=\"onNoClick()\">Back</button>\r\n      <button type=\"button\" mat-button  class=\"border btnProperty\" (click)=\"resetForm()\">Reset</button>\r\n      <button type=\"submit\" mat-button class=\"button btnProperty\" >Save</button>\r\n   \r\n  </mat-dialog-actions>\r\n  </form>\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ConfigurationMicroService } from '../services/configuration-micro.service';\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\n\r\nimport { forkJoin } from 'rxjs';\r\nimport { map,retry } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WebService {\r\n  optoken: any = \"\";\r\n  \r\n  constructor(private http: HttpClient, private API_URL: ConfigurationMicroService,\r\n    private localStorageService: LocalStorageService) {\r\n    \r\n  }\r\n  private URL = this.API_URL.getURL();\r\n  private default_url_type = 'fxadminapi';\r\n\r\n  commonMethod(url: string, data: any, method?: string, url_type?: string): any {\r\n    method = method ? method : 'POST';\r\n    url_type = url_type ? url_type : this.default_url_type;\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n      'Authorization': 'bearer ' + this.optoken\r\n    })\r\n    let endPoint = this.URL[url_type] + \"/\" + url;\r\n    if (method == 'POST')\r\n      return this.http.post(endPoint, data, { headers });\r\n    else if (method == 'GET')\r\n      return this.http.get(endPoint,{ headers });\r\n    else if (method == 'PUT')\r\n      return this.http.put(endPoint, data, { headers });\r\n    else if (method == 'DELETE') {\r\n      const options = {\r\n        headers: headers,\r\n        body: data\r\n      };\r\n      return this.http.delete(endPoint, options);\r\n    }\r\n  }\r\n\r\n\r\n  UploadDocument(url: string, data: any) {\r\n    let url_type: string = \"Config\";\r\n    let headers = {\r\n      headers: new HttpHeaders({\r\n        'enctype': 'multipart/form-data',\r\n        'Authorization': 'bearer ' + this.optoken\r\n      })\r\n    };\r\n    return this.http.post(this.URL[url_type] + '/' + url, data, headers);\r\n\r\n  } \r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nexport interface GroupData {\n  groupID: string;\n  groupName: string;\n}\n@Component({\n  selector: 'app-edit-group',\n  templateUrl: './edit-group.component.html',\n  styleUrls: ['./edit-group.component.scss']\n})\nexport class EditGroupComponent implements OnInit {\n  editGroupForm: FormGroup = this.formBuilder.group({\n    groupName: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupCode: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n    groupState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n    groupCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n    groupPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\n    groupPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\n  \n});\ngroupData:GroupData;\ncountry:any=0;\n  city:any=0;\n  state:any=0;\npublic cityList: any = [];\npublic stateList: any = [];\npublic countryList: any = [];\n  constructor( public dialogRef: MatDialogRef<EditGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public _groupData: GroupData,private webService:WebService,private toast:ToastService,private formBuilder: FormBuilder) \n    {\n      this.groupData = _groupData;\n      this.getgroupData(_groupData.groupID);\n\n      this.getCountryList();\n     }\n\n  ngOnInit(): void {\n  }\n  close(): void {\n   \n    this.dialogRef.close( { event: 'close', data: null });\n  }\n  getCityList(stateID:string){\n    this.webService.commonMethod('city/get/'+stateID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.cityList=data.data;\n      \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n    \n      //this.isProgressing = false;\n    });\n  }\n\n  getCountryList(){\n    this.webService.commonMethod('country/get?pageSize=100',null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.countryList=data.data;\n       \n        \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n   \n      //this.isProgressing = false;\n    });\n  }\n  getStateList(countryID:string){\n    this.cityList=[];\n    this.webService.commonMethod('state/get/'+countryID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.stateList=data.data;\n       \n          \n        \n      }\n      else{\n        this.toast.error(data.errors);\n        this.stateList=[];\n      }\n      \n      \n   \n      //this.isProgressing = false;\n    });\n  }\n  getgroupData(groupID){\n    this.webService.commonMethod('group/get/'+groupID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n      \n        this.editGroupForm.get('groupCode').setValue(data.data.code);\n        this.editGroupForm.get('groupName').setValue(data.data.name);\n        this.editGroupForm.get('groupAddress').setValue(data.data.address);\n        this.editGroupForm.get('groupCountry').setValue(data.data.countryId);\n      \n        this.editGroupForm.get('groupState').setValue(data.data.stateId);\n    \n        this.editGroupForm.get('groupCity').setValue(data.data.cityId);\n        this.getStateList(data.data.countryId);\n        this.getCityList(data.data.stateId);\n        this.editGroupForm.get('groupPinZip').setValue(data.data.zipCode);\n        this.editGroupForm.get('groupPhone').setValue(data.data.phoneNumber);\n        //this.groupObj=data.data;\n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n     \n      //this.isProgressing = false;\n    });\n  }\n  submitForm():void{\n    if (this.editGroupForm.valid) {\n      var postData={\n        \"groupID\":this.groupData.groupID,\n        \"Name\":this.editGroupForm.controls['groupName'].value,\n        \"Code\":this.editGroupForm.controls['groupCode'].value,\n        \"CityId\":this.editGroupForm.controls['groupCity'].value,\n        \"StateId\":this.editGroupForm.controls['groupState'].value,\n        \"CountryId\":this.editGroupForm.controls['groupCountry'].value,\n        \"ZipCode\":this.editGroupForm.controls['groupPinZip'].value,\n        \"PhoneNumber\":this.editGroupForm.controls['groupPhone'].value,\n        \"Address\":this.editGroupForm.controls['groupAddress'].value,            \n        \"ModifiedBy\":\"Sirojan\",\n        // \"CreatedDateTime\":\"2012-04-23\",\n        // \"ModifiedDateTime\":\"2012-04-23\"\n        }\n        this.webService.commonMethod('group/put/'+this.groupData.groupID,postData,'PUT',null)\n        .subscribe(data=>{\n          if(data.succeeded){\n            if(data.data==0){\n              this.toast.error(\"Code Must be unique\");\n            }\n            else if(data.data=1){\n              this.dialogRef.close( { event: 'close', data: 1 });\n            }\n            //this.countryList=data.data;\n            //this.groupData.groupID=data.data.groupID;\n            //this.groupData.groupName=data.data.name;\n           \n          }\n          else{\n          \n            this.toast.error(data.errors);\n          }\n          \n          \n        \n          \n        });\n    } else {\n     return;\n    }\n  \n  }\n\n}\n","<form [formGroup]=\"editGroupForm\" (submit)=\"submitForm()\">\n    <h2 mat-dialog-title>\n        <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\n    <div fxFlex=\"70%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Group</div>\n    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"headerAction\">\n        <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"cancelcontainer\">\n            <div fxFlex=\"100%\">\n                <i class=\"fas fa-times themecolor cancelicon\" (click)=\"close()\" ></i>\n            </div>\n            <div fxFlex=\"100%\" class=\"headercanceltext\" (click)=\"close()\">\n                Cancel\n            </div>\n         \n        </div>\n        <div fxFlex=\"33%\"  fxLayout=\"row wrap\">\n            <div fxFlex=\"100%\">\n               <i class=\"far fa-check-circle themecolor saveicon\" (click)=\"submitForm()\"></i>\n            </div>\n            <div fxFlex=\"100%\" class=\"headersavetext\" (click)=\"submitForm()\">\n               Save\n            </div>\n          \n        </div>\n        <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"disablecontainer\">\n            <div fxFlex=\"100%\">\n                <i class=\"far fa-trash-alt  deleteicon\"></i>\n            </div>\n            <div fxFlex=\"100%\" class=\"e_headerdeletetext\">\n                Delete\n            </div>\n          \n        </div>\n        \n       </div>\n        </div>\n       \n    </h2>\n    \n    \n        <mat-dialog-content  class=\"mat-typography\">\n        \n          <div>\n            <div class=\"content-0\">\n              \n             \n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Code</mat-label>\n                        <input matInput  placeholder=\"Code\" formControlName=\"groupCode\" readonly maxlength=\"10\">\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupCode').hasError('required')\">\n                        Code is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Name</mat-label>\n                        <input matInput #input placeholder=\"Name\" formControlName=\"groupName\" maxlength=\"100\">\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupName').hasError('required')\">\n                        Name is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"48%\" fxFlex.xs=\"100%\" >\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Address</mat-label>\n                        <input matInput #input placeholder=\"Address\" formControlName=\"groupAddress\" maxlength=\"100\">\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupAddress').hasError('required')\">\n                        Address is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n            </div>\n            <div class=\"content\">\n                <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\">\n                    <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n                        <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\n                            <mat-label>Country</mat-label>\n                            <mat-select placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value)\" formControlName=\"groupCountry\">\n                                \n                              <mat-option *ngFor=\"let country of countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\n                            \n                          </mat-select>\n        \n                          <mat-error\n                          *ngIf=\"editGroupForm.get('groupCountry').hasError('min')\">\n                          Country is <strong>required</strong>\n                        </mat-error>\n                    \n                  \n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>State</mat-label>\n                            <mat-select placeholder=\"Select State\" (selectionChange)=\"getCityList($event.value)\" formControlName=\"groupState\">\n                            \n                                <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\n                            </mat-select>\n                                  <mat-error\n                          *ngIf=\"editGroupForm.get('groupState').hasError('min')\">\n                          State is <strong>required</strong>\n                        </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>City</mat-label>\n                            <mat-select placeholder=\"Select City\" formControlName=\"groupCity\">                             \n                                <mat-option *ngFor=\"let city of cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\n                            </mat-select>\n                            <mat-error\n                            *ngIf=\"editGroupForm.get('groupCity').hasError('min')\">\n                            City is <strong>required</strong>\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>Pin/Zip</mat-label>\n                            <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"groupPinZip\">\n                            <mat-error\n                            *ngIf=\"editGroupForm.get('groupPinZip').hasError('required')\">\n                            PinZip is <strong>required</strong>\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                    </div>\n        </div>\n        <div class=\"content\">\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                \n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Phone Number</mat-label>\n                        <input matInput #input placeholder=\"Phone Number\" formControlName=\"groupPhone\"  numbersOnly>\n                        <mat-error\n                        *ngIf=\"editGroupForm.get('groupPhone').hasError('required')\">\n                        Phone Number is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n        </div>\n        \n          \n        \n        </div>\n        \n        </mat-dialog-content>\n    </form>\n    ","import { Component, OnInit } from '@angular/core';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-sample',\r\n  templateUrl: './sample.component.html',\r\n  styleUrls: ['./sample.component.scss']\r\n})\r\nexport class SampleComponent implements OnInit {\r\n  \r\n  public isProgressing: boolean = true;\r\n  public loaderMessage: string = \"Loading...\";\r\n\r\n\r\n  public breadCrumb: string[] = [];\r\n\r\n  public defaultGroupCode: string = \"40531\";\r\n  public pmsCustCode: number = 20007;\r\n  public GroupList: any = [];\r\n  public PropertyList: any= [];\r\n\r\n\r\n\r\n  \r\n\r\n  constructor(private webService:WebService,private toast:ToastService) { }\r\n\r\n  ngOnInit() {\r\n    this.breadCrumb = [\"Admin\", \"User Configuration\"];\r\n    this.GetPropertyAndGroup();\r\n\r\n    this.getAPIlist();\r\n  }\r\n  GetPropertyAndGroup() {\r\n    let serverResponse = {\"Response\":\"Success\",\"Code\":\"FCS00001\",\"Description\":\"Property And Group List\",\"Data\":[{\"propertyGroupID\":40531,\"propertyGroupCode\":40531,\"propertyGroupName\":\"FXFD QA Group\",\"propertyList\":[{\"propertyID\":40529,\"pmsCustCode\":20007,\"propertyName\":\"FXFD QA1 Property\",\"hotelConnStr\":\"Server=;Database=;User ID=;Password=;Trusted_Connection=False\",\"pmsVendor\":\"FX1\",\"crsApplicable\":false,\"isGSTApplicable\":false,\"isInterfaceApplicable\":false}]}]};\r\n    for (let a of serverResponse.Data) {\r\n      this.GroupList.push({\r\n        \"GroupName\": a.propertyGroupName,\r\n        \"GroupCode\": \"\" + a.propertyGroupCode,\r\n        \"GroupID\": a.propertyGroupID\r\n      })\r\n      for (let b of a.propertyList) {\r\n     \r\n          this.PropertyList.push({\r\n            \"propertyID\": b.propertyID,\r\n            \"pmsCustCode\": b.pmsCustCode,\r\n            \"propertyName\": b.propertyName,\r\n            \"isGSTApplicable\": b.isGSTApplicable,\r\n            \"isInterfaceApplicable\": b.isInterfaceApplicable,\r\n            \"pmsVendor\": b.pmsVendor\r\n          })\r\n        }\r\n      }    \r\n    \r\n  }\r\n\r\n\r\n  getAPIlist(){\r\n    this.webService.commonMethod('PropertyAndGroup/list-by-login',{\"LoginID\":\"nitish.kumar@idsnext.com\"},'POST','fxauth')\r\n    .subscribe(data=>{\r\n   \r\n      this.isProgressing = false;\r\n    });\r\n  }\r\n\r\n  \r\n\r\n\r\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];","<app-loader *ngIf=\"isProgressing\" [msg]=\"loaderMessage\"></app-loader>\r\n\r\n\r\n<div>\r\n    <h1 class=\"page_heading margin-padding-none\">List - User</h1>\r\n    <app-breadcrumb [breadCrumbList]=\"breadCrumb\"></app-breadcrumb>\r\n</div>\r\n<mat-card>\r\n    <div class=\"container no_padding\">\r\n        <div class=\"col-md-3\">\r\n            <mat-form-field>\r\n                <mat-label>Group</mat-label>\r\n                <mat-select [(ngModel)]=\"defaultGroupCode\">\r\n                    <mat-option *ngFor=\"let grop of GroupList\" [value]=\"grop.GroupCode\">{{grop.GroupName}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <mat-form-field>\r\n                <mat-label>Property</mat-label>\r\n                <mat-select [(ngModel)]=\"pmsCustCode\">\r\n                    <mat-option *ngFor=\"let prop of PropertyList\" [value]=\"prop.pmsCustCode\">{{prop.propertyName}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n</mat-card>\r\n\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\r\n            </mat-checkbox>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n            </mat-checkbox>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n        <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\r\n    </tr>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<!-- numbersOnly -->\r\n<mat-card>\r\n    <div class=\"container no_padding\">\r\n        <form class=\"example-form\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"Favorite food\" value=\"\" numbersOnly>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n                <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n            </mat-form-field>\r\n        </form>\r\n    </div>\r\n</mat-card>\r\n\r\n<mat-card>\r\n    <div class=\"container no_padding\">\r\n        <p><button mat-button class=\"button\">Save</button></p>\r\n        <p><button mat-button class=\"border\">Cancel</button></p>\r\n    </div>\r\n</mat-card>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { getgroups } from 'process';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\n\r\nexport interface DialogData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-group',\r\n  templateUrl: './add-group.component.html',\r\n  styleUrls: ['./add-group.component.scss']\r\n})\r\n\r\nexport class AddGroupComponent {\r\n  panelOpenState = false;\r\n  defaultGroupCode: any = \"aaa\";\r\n  public GroupList: any = [];\r\n  orders = [];\r\n  DataArray = [];\r\n  countryList = [];\r\n  cityList = [];\r\n  stateList = [];\r\n  country: any = 0;\r\n  city: any = 0;\r\n  state: any = 0;\r\n  formGroup: FormGroup;\r\n  holdingCompanyData: DialogData;\r\n  value = this.fb.group({\r\n\r\n  });\r\n\r\n\r\n  ngOnInit() {\r\n    this.validate();\r\n\r\n\r\n\r\n  }\r\n  public validate(): void {\r\n    this.formGroup = this.fb.group({\r\n      'formArray1': this.fb.array([\r\n        this.initX(true)\r\n      ])\r\n    });\r\n   \r\n  }\r\n  get f() { return this.formGroup.controls; }\r\n\r\n  public initX(panelState): FormGroup {\r\n\r\n    this.DataArray.push({\r\n      countryList: this.countryList,\r\n      stateList: [],\r\n      cityList: [],\r\n      PanelOpenState: panelState,\r\n      groupState:0,\r\n      groupCity:0,\r\n      groupCountry:0,\r\n\r\n    })\r\n \r\n    return this.fb.group({\r\n\r\n      groupName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupCode: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      groupState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      groupCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      groupPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      groupPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n\r\n      countryList: this.fb.array(this.countryList),\r\n      stateList: this.fb.array([]),\r\n      cityList: this.fb.array([]),\r\n\r\n\r\n\r\n\r\n\r\n    });\r\n  }\r\n\r\n  public addX(): void {\r\n    const control = <FormArray>this.f.formArray1;\r\n    control.push(this.initX(false));\r\n  }\r\n\r\n\r\n\r\n  removeX(index) {\r\n    const control = <FormArray>this.f.formArray1;\r\n    control.removeAt(index);\r\n\r\n  }\r\n  resetForm() {\r\n    this.formGroup.reset();\r\n    var i=0;\r\n    for (let control of this.formGroup.get('formArray1')['controls']) {\r\n      control.controls[\"groupCountry\"].setValue(0);\r\n      control.controls[\"groupState\"].setValue(0);\r\n      control.controls[\"groupCity\"].setValue(0);\r\n      this.DataArray[i].stateList=[];\r\n      this.DataArray[i].cityList=[];\r\n      \r\n      i++;\r\n    }\r\n   \r\n   \r\n  }\r\n  trackByFn(index: any, item: any) {\r\n    return index;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.formGroup.valid) {\r\n      var groups = [];\r\n      for (let control of this.formGroup.get('formArray1')['controls']) {\r\n        var groupData = {\r\n          \"HoldingCompanyID\": this.holdingCompanyData.holdingCompanyID,\r\n          \"Name\": control.controls[\"groupName\"].value,\r\n          \"Code\": control.controls[\"groupCode\"].value,\r\n          \"CityID\": control.controls[\"groupCity\"].value,\r\n          \"StateId\": control.controls[\"groupState\"].value,\r\n          \"CountryId\": control.controls[\"groupCountry\"].value,\r\n          \"ZipCode\": control.controls[\"groupPinZip\"].value,\r\n          \"PhoneNumber\": control.controls[\"groupPhone\"].value,\r\n          \"Address\": control.controls[\"groupAddress\"].value,\r\n          \"CreatedBy\": \"Sirojan\",\r\n          \"IsActive\": true,\r\n          \"ModifiedBy\": \"Sirojan\",\r\n\r\n        }\r\n        groups.push(groupData);\r\n        ;\r\n\r\n\r\n      }\r\n    \r\n      this.webService.commonMethod('group/post', { \"Groups\": groups }, 'POST', null)\r\n        .subscribe(data => {\r\n          if (data.succeeded) {\r\n\r\n            this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n          }\r\n          else {\r\n            this.toast.error(data.errors);\r\n          }\r\n        });\r\n      \r\n    }\r\n    else {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddGroupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: DialogData, private fb: FormBuilder, private webService: WebService, private toast: ToastService) {\r\n    this.getCountryList();\r\n    this.holdingCompanyData = _holdingCompanyData;\r\n  }\r\n\r\n  getCityList(stateID, i) {\r\n\r\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n     \r\n          this.DataArray[i].cityList = data.data;\r\n         \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n      \r\n      \r\n      });\r\n  }\r\n\r\n  getCountryList() {\r\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.DataArray[0].countryList = data.data;\r\n          this.countryList = data.data;\r\n         \r\n      \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getStateList(countryID, i) {\r\n    var arrayControl = this.formGroup.get('formArray1') as FormArray;\r\n    var item = arrayControl.at(i);\r\n \r\n  \r\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          var arrayControl = this.formGroup.get('formArray1') as FormArray;\r\n          var item = arrayControl.at(i);\r\n          \r\n          //this.formGroup.get('formArray1')['controls'][i][\"groupState\"]=0;\r\n          this.DataArray[i].stateList = data.data;\r\n          this.DataArray[i].cityList=[];\r\n         // item.value.groupState = 0;\r\n         \r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n          this.stateList = [];\r\n        }\r\n\r\n\r\n   \r\n      \r\n      });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n\r\n\r\n<form [formGroup]=\"formGroup\" novalidate (ngSubmit)=\"onSubmit()\">\r\n<h2 mat-dialog-title>Create Group</h2>\r\n<mat-dialog-content  class=\"mat-typography\">\r\n  <div>\r\n    <div class=\"content\" style=\"margin-bottom: 5px;\">\r\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\r\n          <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" style=\"font-size: 12px;opacity:0.7\">\r\n            Holding Company\r\n          \r\n            </div>\r\n            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n              {{holdingCompanyData.holdingCompanyName}}\r\n            </div>\r\n            \r\n          </div>\r\n</div>\r\n    <div formArrayName=\"formArray1\" *ngFor=\"let group of f.formArray1['controls']; let ix=index\" [attr.data-index]=\"i\">\r\n      <mat-accordion formGroupName=\"{{ix}}\">\r\n   \r\n        <mat-expansion-panel [expanded]=\"DataArray[ix].PanelOpenState\"  hideToggle=\"true\" class=\"mat-elevation-z0\"  (opened)=\"DataArray[ix].PanelOpenState = true\"\r\n                             (closed)=\"DataArray[ix].PanelOpenState = false\" >\r\n                           \r\n          <mat-expansion-panel-header #panelH (click)=\"panelH._toggle()\">\r\n            <mat-panel-title>\r\n      <div class=\"content\" (click)=\"panelH._toggle()\">\r\n       \r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\r\n            <div fxFlex=\"80%\" fxFlex.xs=\"70%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\r\n                Group {{ix+1}}           \r\n              </div>\r\n              <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\">\r\n                  \r\n              \r\n                <i  *ngIf=\"!DataArray[ix].PanelOpenState\" class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\r\n                <i *ngIf=\"DataArray[ix].PanelOpenState\" class=\"fas fa-angle-up themecolor iconSize moreicon\"></i>\r\n            </div>\r\n              \r\n            </div>\r\n      </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <div class=\"content-0\">\r\n      \r\n     \r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n         \r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Code</mat-label>\r\n                <input matInput  placeholder=\"Code\" formControlName=\"groupCode\" maxlength=\"10\">\r\n                <mat-error\r\n                *ngIf=\"group['controls'].groupCode.hasError('required')\">\r\n                Code is <strong>required</strong>\r\n              </mat-error>\r\n             \r\n             \r\n            </mat-form-field>\r\n     \r\n          </div>\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Name</mat-label>\r\n                <input matInput #input placeholder=\"Name\" formControlName=\"groupName\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"group['controls'].groupName.hasError('required')\">\r\n                Group Name is <strong>required</strong>\r\n              </mat-error>\r\n                \r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"48%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Address</mat-label>\r\n                <input matInput #input placeholder=\"Address\" formControlName=\"groupAddress\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"group['controls'].groupAddress.hasError('required')\">\r\n                Address is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"content\">\r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\r\n                    <mat-label>Country</mat-label>\r\n                    <mat-select   placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value,ix)\" formControlName=\"groupCountry\">\r\n                     \r\n                      <mat-option *ngFor=\"let country of DataArray[ix].countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                    *ngIf=\"group['controls'].groupCountry.hasError('min')\">\r\n                    Country is <strong>required</strong>\r\n                  </mat-error>\r\n                 \r\n                </mat-form-field>\r\n              \r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>State</mat-label>\r\n                    <mat-select  placeholder=\"Select State\"   (selectionChange)=\"getCityList($event.value,ix)\" formControlName=\"groupState\">\r\n                    \r\n                      <mat-option *ngFor=\"let state of DataArray[ix].stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\r\n                    </mat-select>               \r\n                    <mat-error\r\n                    *ngIf=\"group['controls'].groupState.hasError('min')\">\r\n                    State is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              \r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>City</mat-label>\r\n                    <mat-select   placeholder=\"Select City\" formControlName=\"groupCity\">\r\n                     \r\n                      <mat-option *ngFor=\"let city of DataArray[ix].cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                    *ngIf=\"group['controls'].groupCity.hasError('min')\">\r\n                    City is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Pin/Zip</mat-label>\r\n                    <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"groupPinZip\" maxlength=\"20\">\r\n                    <mat-error\r\n                    *ngIf=\"group['controls'].groupPinZip.hasError('required')\">\r\n                    PinZip is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n</div>\r\n<div class=\"content\">\r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n        \r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Phone Number</mat-label>\r\n                <input matInput #input[numbersOnly] placeholder=\"Phone Number\" formControlName=\"groupPhone\" numbersOnly maxlength=\"20\">\r\n                <mat-error\r\n                *ngIf=\"group['controls'].groupPhone.hasError('required')\">\r\n                Phone is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"74%\"  fxFlex.xs=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end end\" >\r\n            <button   mat-button type=\"button\"  class=\"border btnProperty btnAddMoreGroup themecolor\" (click)=\"removeX(i)\"><i class=\"fas fa-minus\"></i>Remove Group</button>\r\n            </div>\r\n        </div>\r\n</div>\r\n</mat-expansion-panel>\r\n</mat-accordion>\r\n</div> \r\n<div class=\"content\">\r\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end end\" >\r\n    <button  mat-button type=\"button\"  class=\"border btnProperty btnAddMoreGroup themecolor\" [autofocus]=\"false\" (click)=\"addX()\"><i class=\"fas fa-plus\"></i>Add Group</button>\r\n    </div>\r\n    </div>\r\n\r\n</div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button   type=\"button\" mat-button  class=\"border btnProperty\" (click)=\"onNoClick()\">Back</button>\r\n    <button type=\"button\" mat-button  class=\"border btnProperty\" (click)=\"resetForm()\">Reset</button>\r\n    <button type=\"submit\" mat-button class=\"button btnProperty\" >Save</button>\r\n \r\n</mat-dialog-actions>\r\n</form>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LocalStorageService } from './shared/services/local-storage.service';\r\nimport { CommonService } from './shared/services/common.service';\r\nimport { WebService } from './shared/services/web.service';\r\nimport { TRANSLATE } from './shared/constant/translate';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: []\r\n})\r\n\r\nexport class AppComponent {\r\n \r\n  isProgressing: boolean = true;\r\n  accountingDate: string = \"1st Dec 2020\";\r\n  accountingStatus: string = \"Pending\";\r\n  // title = 'customreportApp';\r\n  lang = 'en';\r\n  TRANSLATE: any = TRANSLATE['ar'];\r\n  propertyName: string = \"TAJ Vivantha\";\r\n  propertyAddress: string = \"Bangalore\";\r\n  Pmscust = 20007;\r\n  \r\n  sidemenuList: any = [\r\n    \r\n    {\r\n      \"name\": \"User\",\r\n      \"id\": 2,\r\n      \"icon\": \"fas fa-users\",\r\n      \"url\": 'user'\r\n    },\r\n    {\r\n      \"name\":\"Database\",\r\n      \"id\":3,\r\n      \"icon\":\"fas fa-database\",\r\n      \"url\":'database'\r\n    },\r\n    {\r\n      \"name\":\"Property\",\r\n      \"id\":3,\r\n      \"icon\":\"fas fa-hotel\",\r\n      \"url\":'property'\r\n    }\r\n  ];\r\n  constructor(\r\n    public router: Router,\r\n    private localStorageService: LocalStorageService,\r\n    private commonService: CommonService,\r\n    public _webServices: WebService\r\n  ) {\r\n\r\n  }\r\n\r\n  \r\n\r\n  navigatePage(routeURL: string) {    \r\n    this.router.navigate(['/', routeURL]);\r\n  }\r\n\r\n  backToHome() {\r\n    window.location.href = \"https://\" + window.location.host + \"/#/home\";\r\n  }\r\n  logout(): void {\r\n    // Clears all local storages\r\n    if (document.location.origin.includes('localhost'))\r\n      return;\r\n    this.localStorageService.clearAllLocalStorages();\r\n    window.location.href = document.location.origin + '/#/logout';\r\n  }\r\n}\r\n","<header id=\"header\" class=\"header-main\">\r\n  <img src=\"./assets/image/fxlogo.jpg\" style=\"width: 150px;outline:0\" (click)=\"backToHome()\">\r\n\r\n  <div class=\"text-heading\">\r\n      <h1 class=\"page_heading\">\r\n       \r\n      </h1><br> \r\n  </div>\r\n \r\n\r\n\r\n  <div class=\"logout\">\r\n      <button mat-button [matMenuTriggerFor]=\"beforeMenu\">\r\n          <img class=\"avatar\" src=\"./assets/image/gravatar.1.jpg\">\r\n          <i class=\"fa fa-chevron-down\"></i>\r\n      </button>\r\n      <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\r\n          <button mat-menu-item (click)=\"logout()\">{{TRANSLATE.GEM.LOG_OUT}}</button>\r\n      </mat-menu>\r\n  </div>\r\n</header>\r\n<div class=\"sidebar\" id=\"mySidenav\">\r\n  <nav class=\"main-menu\" id=\"sideMenuBar\">\r\n      <ul>\r\n          <li>\r\n              <a>\r\n                  <span class=\"menu-span\"><i class=\"fas fa-random shuffle_icon\"></i></span>\r\n                  <!-- <span class=\"fa fa-bars menu-span\"></span> -->\r\n                  <span class=\"nav-text\">\r\n                      <h3>{{TRANSLATE.GEM.GEM_MENU}}</h3>\r\n                  </span>\r\n              </a>\r\n          </li>\r\n          <li *ngFor=\"let m of sidemenuList\">\r\n              <a (click)=\"navigatePage(m.url)\">\r\n                  <span class=\"{{m.icon}} menu-span\"></span>\r\n                  <span class=\"nav-text\">\r\n                      {{m.name}}\r\n                  </span>\r\n              </a>\r\n          </li>\r\n      </ul>\r\n  </nav>\r\n\r\n</div>\r\n<div class=\"main-container\" id=\"main_container\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nimport { EditGroupComponent } from '../edit-group/edit-group.component';\nimport { DeleteGroupComponent } from '../delete-group/delete-group.component';\nexport interface GroupData {\n  groupID: string;\n  groupName: string;\n}\n@Component({\n  selector: 'app-view-group',\n  templateUrl: './view-group.component.html',\n  styleUrls: ['./view-group.component.scss']\n})\nexport class ViewGroupComponent implements OnInit {\n\n  groupData:GroupData;\n  groupObj={code:'',name:'',cityName:'',address:'',stateName:'',countryName:'',zipCode:'',   \n                    phoneNumber:''};\n\n  constructor(    public dialogRef: MatDialogRef<ViewGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public _groupData: GroupData,private webService:WebService,private toast:ToastService,public dialog: MatDialog\n    ) {\n      this.groupData = _groupData;\n      this.getGroupData(_groupData.groupID);\n\n     }\n\n  ngOnInit(): void {\n  }\n  editGroup(): void {\n\n      const dialogRef = this.dialog.open(EditGroupComponent, {\n        panelClass: ['viewmore-dialog-container'],\n        disableClose: true ,\n        \n        //minHeight: '800px',    \n        data: {groupName: this.groupData.groupName, groupID: this.groupData.groupID}\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        if(result.data==1){\n        \n          this.getGroupData(this.groupData.groupID);\n          this.toast.success(\"Updated Successfully\");\n          // this.getCompanyGroupList(this.holdingCompanyID);\n        }\n   \n        // this.holdingCompanyName= result.data.holdingCompanyName;\n        // this.holdingCompanyID=result.data.holdingCompanyID;\n      });\n   \n   \n  }\n  getGroupData(groupID){\n    this.webService.commonMethod('group/get/'+groupID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.groupObj=data.data;\n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n    \n      //this.isProgressing = false;\n    });\n  }\n  delete():void{\n    const dialogRef = this.dialog.open(DeleteGroupComponent, {\n      //panelClass: ['viewmore-dialog-container'],\n      disableClose: true ,\n      \n      //minHeight: '800px',    \n      data: {groupName: this.groupData.groupName, groupID: this.groupData.groupID}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result.data==1){\n        //this.dialogRef.close( { event: 'close', data: this.holdingCompanyData });\n        this.dialogRef.close( { event: 'close', data:\"D\" });\n        \n        // this.getCompanyGroupList(this.holdingCompanyID);\n      }\n      else{\n    \n      }\n     \n     \n    });\n   \n  }\n  close(): void {\n   \n    this.dialogRef.close( { event: 'close', data: this.groupData });\n  }\n\n}\n","\n<h2 mat-dialog-title>\n    <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\n<div fxFlex=\"75%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Group</div>\n<div fxFlex=\"25%\" fxFlex.xs=\"100%\" class=\"headerAction\">\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\" class=\"editcontainer\">\n        <div fxFlex=\"100%\">\n            <i class=\"fas fa-pencil-alt themecolor fxcursor_pointer\" (click)=\"editGroup()\"></i>\n        </div>\n        <div fxFlex=\"100%\" class=\"headeredittext fxcursor_pointer\" (click)=\"editGroup()\">\n            Edit\n        </div>\n     \n    </div>\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100%\">\n            <i class=\"far fa-trash-alt themecolor fxcursor_pointer\" (click)=\"delete()\"></i>\n        </div>\n        <div fxFlex=\"100%\" class=\"headerdeletetext fxcursor_pointer\" (click)=\"delete()\">\n            Delete\n        </div>\n      \n    </div>\n    \n   </div>\n    </div>\n   \n</h2>\n<mat-dialog-content  class=\"mat-typography\">\n\n    <div>\n      <div class=\"content-0\">\n        \n       \n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n              <div fxFlex=\"100%\" class=\"labeltext\">\n                  Code\n              </div>\n              <div fxFlex=\"100%\">\n              {{groupObj.code}}\n            </div>\n           \n            </div>\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Name\n                </div>\n                <div fxFlex=\"100%\">\n                    {{groupObj.name}}\n              </div>\n             \n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Address\n                </div>\n                <div fxFlex=\"100%\">\n                    {{groupObj.address}}\n              </div>\n             \n              </div>\n          </div>\n      </div>\n      <div class=\"content\">\n        \n       \n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Country\n                </div>\n                <div fxFlex=\"100%\">\n                    {{groupObj.countryName}}\n              </div>\n             \n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                  <div fxFlex=\"100%\" class=\"labeltext\">\n                      State\n                  </div>\n                  <div fxFlex=\"100%\">\n                    {{groupObj.stateName}}\n                </div>\n               \n                </div>\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                  <div fxFlex=\"100%\" class=\"labeltext\">\n                      City\n                  </div>\n                  <div fxFlex=\"100%\">\n                    {{groupObj.cityName}}\n                </div>\n               \n                </div>\n                <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Piz/Zip\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{groupObj.zipCode}}\n                  </div>\n                 \n                  </div>\n            </div>\n        </div>\n        <div class=\"content\">\n        \n       \n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Phone Number\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{groupObj.phoneNumber}}\n                  </div>\n                 \n                  </div>\n                 \n                </div>\n            </div>\n      </div>\n      </mat-dialog-content>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatTime'\r\n})\r\nexport class FormatTimePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    value = value.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [value];\r\n    if (value.length > 1) { // If value format correct\r\n      value = value.slice(1);  // Remove full string match value\r\n      value[5] = +value[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n      value[0] = +value[0] % 12 || 12; // Adjust hours\r\n      if(value[0].toString().length == 1){ // Adjust 0, if single digit\r\n        value[0] = '0' + value[0];\r\n      }\r\n    }\r\n    return value.join('');\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatIconRegistry } from '@angular/material/icon/icon-registry';\nimport  *  as  gender  from  'src/app/shared/data/gender.json';\nimport  *  as  title  from  'src/app/shared/data/title.json';\nimport  *  as  passwordExpiry  from  'src/app/shared/data/passwordexpiry.json';\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment} from 'moment';\nimport { WebService } from 'src/app/shared/services/web.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\nconst moment = _rollupMoment || _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'DD MMM YYYY,ddd',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\nexport interface DialogData {\n\n}\nexport interface NetworkIP {\n  name: string;\n}\nexport interface MacID {\n  name: string;\n}\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n  styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n  createUserForm: FormGroup = this.formBuilder.group({\n    holdingCompanyName: [, { validators: [Validators.required], updateOn: \"change\" }],\n    alias: [, { validators: [Validators.required], updateOn: \"change\" }],\n    title: [, { validators: [Validators.required], updateOn: \"change\" }],\n    lastName: [, { validators: [], updateOn: \"change\" }],\n    middleName: [, { validators: [], updateOn: \"change\" }],\n    firstName: [, { validators: [], updateOn: \"change\" }],\n    gender: [, { validators: [], updateOn: \"change\" }],\n    designation:[, { validators: [], updateOn: \"change\" }],\n    department:[, { validators: [], updateOn: \"change\" }],\n    userValidFrom:[, { validators: [], updateOn: \"change\" }],\n    userValidTo:[, { validators: [], updateOn: \"change\" }],\n    profilePicture:[, { validators: [], updateOn: \"change\" }],\n    userType:[, { validators: [], updateOn: \"change\" }],\n    loginID:[, { validators: [], updateOn: \"change\" }],\n    passwordExpiry:[, { validators: [], updateOn: \"change\" }],\n    propertyNetworkIP:[, { validators: [], updateOn: \"change\" }],\n    propertyMacID:[, { validators: [], updateOn: \"change\" }],\n    isAuthorizedLicense:[, { validators: [], updateOn: \"change\" }],\n    officeAddress:[, { validators: [], updateOn: \"change\" }],\n    officeCountry:[, { validators: [], updateOn: \"change\" }],\n    officeState:[, { validators: [], updateOn: \"change\" }],\n    officeCity:[, { validators: [], updateOn: \"change\" }],\n    officePostalCode:[, { validators: [], updateOn: \"change\" }],\n    officeMobileCountryCode:[, { validators: [], updateOn: \"change\" }],\n    officeMobileNumber:[, { validators: [], updateOn: \"change\" }],\n    officePhoneCountryCode:[, { validators: [], updateOn: \"change\" }],\n    officePhoneNo:[, { validators: [], updateOn: \"change\" }],\n    officeExtension:[, { validators: [], updateOn: \"change\" }],\n    officeEmail:[, { validators: [], updateOn: \"change\" }],\n    personalAddress:[, { validators: [], updateOn: \"change\" }],\n    personalCountry:[, { validators: [], updateOn: \"change\" }],\n    personalState:[, { validators: [], updateOn: \"change\" }],\n    personalCity:[, { validators: [], updateOn: \"change\" }],\n    personalPostalCode:[, { validators: [], updateOn: \"change\" }],\n    personalMobileCountryCode:[, { validators: [], updateOn: \"change\" }],\n    personalMobileNumber:[, { validators: [], updateOn: \"change\" }],\n    personalPhoneCountryCode:[, { validators: [], updateOn: \"change\" }],\n    personalPhoneNumber:[, { validators: [], updateOn: \"change\" }],\n    personalExtension:[, { validators: [], updateOn: \"change\" }],\n    userBirthDate:[, { validators: [], updateOn: \"change\" }],\n    remarks:[, { validators: [], updateOn: \"change\" }],\n   \n\n\n  });\n  public imagePath;\n  imgURL: any;\n  public message: string;\n \n \n\n  validFrom = new FormControl();\n  validTO = new FormControl();\n  birthDate = new FormControl();\n  linkProperty=false;\n  networkIPs=[];\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  macIDs=[];\n  holdingCompanyData: DialogData;\n  genderList= (gender  as  any).default;\n  titleList= (title  as  any).default;\n  passWorldExpiryList= (passwordExpiry  as  any).default;\n  public departmentList: any = [];\n  public userTypeList: any = [];\n  public designationList: any = [];\n  public personalStateList: any = [];\n  public offcialStateList: any = [];\n  public personalCityList: any = [];\n  public officialCityList: any = [];\n  public countryList: any = [];\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  constructor(public dialogRef: MatDialogRef<CreateUserComponent>,private formBuilder: FormBuilder,private webService:WebService,private toast: ToastService) {\n    this.getDepartmentList();\n    this.getUserTypeList();\n    this.getDesignationList();\n    this.getCountryList();\n       }\n\n  ngOnInit(): void {\n    \n  }\n  preview(files) {\n    if (files.length === 0)\n      return;\n \n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      this.message = \"Only images are supported.\";\n      return;\n    }\n \n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]); \n    reader.onload = (_event) => { \n      this.imgURL = reader.result; \n    }\n  }\n  onNoClick(): void {\n\n    this.dialogRef.close({ event: 'close', data: null });\n  }\n  addNetworkIP(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n   \n  \n    // Add our fruit\n    if ((value || '').trim()) {\n      this.networkIPs.push({ name: value.trim() });\n     \n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeNetworkIP(networkIP: NetworkIP): void {      \n    const index = this.networkIPs.indexOf(networkIP);\n    if (index >= 0) {\n      this.networkIPs.splice(index, 1);\n    }\n  }\n  addMacID(event: MatChipInputEvent): void {\n    \n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.macIDs.push({ name: value.trim() });\n      \n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeMacID(macID: MacID): void {\n\n    const index = this.macIDs.indexOf(macID);\n    if (index >= 0) {\n      this.macIDs.splice(index, 1);\n    }\n  }\n\n  submitFormtest(){\n    this.linkProperty=true;\n  }\n  submitForm(){\n    if (this.createUserForm.valid) {\n      var isLicense=false;\n\n      if(this.createUserForm.controls['isAuthorizedLicense'].value==\"1\"){\n        isLicense=true;\n      }\n      var MacIds =  this.macIDs.map(function(val) {\n        return val.name;\n      }).join(',');\n      var netWorkIPs =   this.networkIPs.map(function(val) {\n        return val.name;\n      }).join(',');\n\n      const postData = new FormData();\n// postData.append('HoldingCompanyID', data.title);\n// postData.append('description', data.description);\n// postData.append('image', data.image);\n      var userData = {\n        \"HoldingCompanyID\": parseInt(this.createUserForm.controls['holdingCompanyName'].value),\n        \"Alias\":this.createUserForm.controls['alias'].value,\n        \"TitleID\":this.createUserForm.controls['title'].value,\n        \"LastName\": this.createUserForm.controls['lastName'].value,\n        \"MiddleName\": this.createUserForm.controls['middleName'].value,\n        \"FirstName\": this.createUserForm.controls['firstName'].value,\n        \"GenderID\": this.createUserForm.controls['gender'].value,\n        \"DesignationID\": this.createUserForm.controls['designation'].value,\n        \"DepartmentID\": this.createUserForm.controls['department'].value,\n        \"ValidFrom\": this.createUserForm.controls['userValidFrom'].value,\n        \"ValidTo\": this.createUserForm.controls['userValidTo'].value,          \n        \"UserImageName\":this.createUserForm.controls['profilePicture'].value,\n        \"IsAuthorized\":isLicense,\n        \"UserTypeID\":this.createUserForm.controls['userType'].value,\n        \"LoginID\": this.createUserForm.controls['loginID'].value,\n        \"PasswordExpiryDays\":this.createUserForm.controls['passwordExpiry'].value,\n        \"OfficeAddress\":this.createUserForm.controls['officeAddress'].value,\n        \"OfficeCountryID\":this.createUserForm.controls['officeCountry'].value,\n        \"OfficeCityID\":this.createUserForm.controls['officeCity'].value,\n        \"OfficeStateID\":this.createUserForm.controls['officeState'].value,\n        \"OfficeZipCode\":this.createUserForm.controls['officePostalCode'].value,\n        \"OfficePhoneCountryCode\":this.createUserForm.controls['officePhoneCountryCode'].value,\n        \"OfficePhone\":this.createUserForm.controls['officePhoneNo'].value,\n        \"OfficeMobileCountryCode\":this.createUserForm.controls['officeMobileCountryCode'].value,\n        \"OfficeMobile\":this.createUserForm.controls['officeMobileNumber'].value,\n        \"OfficeExtension\":this.createUserForm.controls['officeExtension'].value,\n        \"OfficeEmail\":this.createUserForm.controls['officeEmail'].value,\n        \"PersonalAddress\":this.createUserForm.controls['personalAddress'].value,\n        \"PersoanlCountryID\":this.createUserForm.controls['personalCountry'].value,\n        \"PersonalStateID\":this.createUserForm.controls['personalState'].value,\n        \"PersonalCityID\":this.createUserForm.controls['personalCity'].value,\n        \"PersonalZipCode\":this.createUserForm.controls['personalPostalCode'].value,\n        \"PersonalMobileCountryCode\":this.createUserForm.controls['personalMobileCountryCode'].value,\n        \"PersonalMobileNo\":this.createUserForm.controls['personalMobileNumber'].value,\n        \"PersonalExtension\":this.createUserForm.controls['personalExtension'].value,\n        \"PersonalPhoneCountryCode\":this.createUserForm.controls['personalPhoneCountryCode'].value,\n        \"PersonalPhoneNumber\":this.createUserForm.controls['personalPhoneNumber'].value,\n        \"BirthDate\":this.createUserForm.controls['userBirthDate'].value,\n        \"Remarks\":this.createUserForm.controls['remarks'].value,\n        // \"ImagePhysicalPath\":this.createUserForm.controls['holdingCompanyName'].value,\n        // \"ImageVirtualPath\":this.createUserForm.controls['holdingCompanyName'].value,\n        // \"FileName\":this.createUserForm.controls['holdingCompanyName'].value,\n        \"CreatedBy\":\"Sirojan\",\n        \"MacAddress\":MacIds,\n        \"IPAddress\":netWorkIPs\n       \n      }\n      this.webService.commonMethod('user/post', userData, 'POST', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          if (data.data == 0) {\n            this.toast.error(\"Some Error Occured\");\n          }\n          else {\n            this.toast.success(\"Data Saved Successfully\");\n            this.linkProperty=true;\n            // this.holdingCompanyData.holdingCompanyID = data.data;\n            // this.holdingCompanyData.holdingCompanyName = '';\n            //this.dialogRef.close({ event: 'close', data: null});\n\n          }\n\n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n\n\n\n      });\n    }\n\n  }\n  getDepartmentList() {\n    this.webService.commonMethod('department/get?pageSize=100', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          \n          this.departmentList = data.data;\n          //this.DataArray[0].countryList = data.data;\n      \n        }\n        else {\n          //this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getUserTypeList() {\n    this.webService.commonMethod('userType/get?pageSize=100', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          \n          this.userTypeList = data.data;\n          //this.DataArray[0].countryList = data.data;\n      \n        }\n        else {\n          //this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getDesignationList() {\n    this.webService.commonMethod('designation/get?pageSize=100', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          \n          this.designationList = data.data;\n          //this.DataArray[0].countryList = data.data;\n      \n        }\n        else {\n          //this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getCityList(stateID:any,type:any) {\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          if(type==\"p\"){\n            this.personalCityList=data.data;\n            \n          }else{\n            this.officialCityList=data.data;\n         \n          }\n        \n\n\n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n\n\n      });\n  }\n\n  getCountryList() {\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          this.countryList = data.data;\n\n\n        }\n        else {\n          this.toast.error(data.errors);\n        }\n      });\n  }\n  getStateList(countryID:any,type:any) {\n\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          if(type==\"p\"){\n            this.personalStateList=data.data;\n            this.personalCityList=[];\n          }else{\n            this.offcialStateList=data.data;\n            this.officialCityList=[];\n          }\n      \n\n        }\n        else {\n          this.toast.error(data.errors);\n          if(type==\"p\"){\n            this.personalStateList=[];\n           \n          }else{\n            this.offcialStateList=[];\n         \n          }\n      \n        }\n\n\n      });\n  }\n\n}\n","\n\n\n\n<h2 mat-dialog-title>Create User</h2>\n<app-link-product *ngIf=\"linkProperty\"></app-link-product>\n\n  <form [formGroup]=\"createUserForm\" *ngIf=\"!linkProperty\">\n<mat-dialog-content  class=\"mat-typography\">\n\n  <div>\n    <div class=\"content\">\n      <div fxFlex=\"100%\" fxLayoutAlign=\"center center\">\n        <ul style=\"margin-top: 0px;\">\n          <li class=\"active\"><div>1</div><div class=\"steptext\">User Details</div></li>\n          <li><div>2</div><div class=\"steptext\">Link Property / Product</div></li>\n        \n        </ul>  \n      </div>\n    </div>\n    <div class=\"content\">\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n          <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n              Basic           \n            </div>\n            <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\n                \n        \n             \n          </div>\n            \n          </div>\n    </div>\n    <div class=\"content-0\">\n      \n     \n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n     \n          <div fxFlex=\"49%\" fxFlex.xs=\"100%\" >\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>Search Holding company/ Group/ Property</mat-label>\n              <input type=\"text\"\n              placeholder=\"Holding Company\"\n              aria-label=\"Number\" formControlName=\"holdingCompanyName\"\n              matInput              \n             >\n             <mat-error\n             *ngIf=\"createUserForm.get('holdingCompanyName').hasError('required')\">\n             Code is <strong>required</strong>\n           </mat-error>\n            \n              <span class=\"fas fa-search searchspanicon themecolor\"></span>\n          \n          </mat-form-field>\n          </div>\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>Alias</mat-label>\n                <input matInput  placeholder=\"Code\" formControlName=\"alias\" >\n           \n            </mat-form-field>\n          </div>\n          <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\n            <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\n              <mat-label>Title</mat-label>\n              <mat-select placeholder=\"Select Title\" formControlName=\"title\">\n                <mat-option *ngFor=\"let title of titleList\" [value]=\"title.titleID\">{{title.name}}</mat-option>            \n            </mat-select>\n            <mat-error\n            *ngIf=\"createUserForm.get('title').hasError('required')\">\n            Title is <strong>required</strong>\n          </mat-error>\n            </mat-form-field>\n\n          </div>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\">\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>Last Name</mat-label>\n                <input matInput #input placeholder=\"Last Name\" formControlName=\"lastName\">\n                <mat-error\n                *ngIf=\"createUserForm.get('lastName').hasError('required')\">\n                Last Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                  <mat-label>Middle Name</mat-label>\n                  <input matInput #input placeholder=\"Middle Name\" formControlName=\"middleName\">\n                  <!-- <mat-error\n                  *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n                  PinZip is <strong>required</strong>\n                </mat-error> -->\n              </mat-form-field>\n             \n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                  <mat-label>First Name</mat-label>\n                  <input matInput #input placeholder=\"First Name\" formControlName=\"firstName\">\n                  <!-- <mat-error\n                  *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n                  PinZip is <strong>required</strong>\n                </mat-error> -->\n              </mat-form-field>\n              </div>\n              <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                  <mat-label>Gender</mat-label>\n                  <mat-select placeholder=\"Select Gender\" formControlName=\"gender\">\n                    <mat-option *ngFor=\"let gender of genderList\" [value]=\"gender.genderID\">{{gender.name}}</mat-option>\n                      <!-- <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option> -->\n                  </mat-select>\n                        <mat-error\n                *ngIf=\"createUserForm.get('gender').hasError('min')\">\n                Gender is <strong>required</strong>\n              </mat-error>\n              </mat-form-field>\n              </div>\n            </div>\n</div>\n<div class=\"content\">\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\">\n      <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n          <mat-label>Designation</mat-label>\n          <mat-select placeholder=\"Select User\" formControlName=\"designation\" >\n            <mat-option *ngFor=\"let designation of designationList\" [value]=\"designation.designationID\">{{designation.name}}</mat-option>\n            <!-- <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option> -->\n        </mat-select>\n         \n          <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n          PinZip is <strong>required</strong>\n        </mat-error> -->\n      </mat-form-field>\n        </div>\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n            <mat-label>Department</mat-label>\n            <mat-select placeholder=\"Select Department\" formControlName=\"department\">\n             \n                <mat-option *ngFor=\"let department of departmentList\" [value]=\"department.departmentID\">{{department.name}}</mat-option>\n            </mat-select>\n                  <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyState').hasError('min')\">\n          State is <strong>required</strong>\n        </mat-error> -->\n        </mat-form-field>\n       \n        </div>\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" FxLayout=\"row wrap\" class=\"fx_disable_focus\">         \n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\" > \n              <mat-label>Valid From</mat-label>\n          \n              <mat-datepicker-toggle matSuffix [for]=\"validfrompicker\" class=\"user_datepicker\"></mat-datepicker-toggle>\n                <input matInput #input placeholder=\"Valid From\" [matDatepicker]=\"validfrompicker\"  formControlName=\"userValidFrom\">\n              \n                <mat-datepicker #validfrompicker></mat-datepicker>\n              \n             \n         \n              <!-- <mat-error\n              *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\n              CheckIn  is <strong>required</strong>\n              </mat-error> -->\n              \n          </mat-form-field>\n        \n        </div>\n        <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n            <mat-label>Valid To</mat-label>\n            <mat-datepicker-toggle matSuffix [for]=\"validtopicker\" class=\"user_datepicker\"></mat-datepicker-toggle>\n            <input matInput #input placeholder=\"Valid To\" [matDatepicker]=\"validtopicker\"  formControlName=\"userValidTo\">\n          \n            <mat-datepicker #validtopicker></mat-datepicker>\n            <!-- <mat-error\n            *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\n            CheckIn  is <strong>required</strong>\n            </mat-error> -->\n            \n        </mat-form-field>\n        </div>\n      </div>\n</div>\n<div class=\"content\">\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n            <div fxFlex=\"100%\" class=\"lable_txt\">\n              Profile Picture\n            </div>\n            <div fxFlex=\"100%\" class=\"lable_txt\">\n              <input #file type=\"file\" accept='image/*' (change)=\"preview(file.files)\" formControlName=\"profilePicture\" />\n            </div>\n            <div fxFlex=\"100%\">\n  \n<img [src]=\"imgURL\"  *ngIf=\"imgURL\" class=\"profile_pic\" >\n              <img src=\"./assets/image/avatar.jpg\" *ngIf=\"!imgURL\" class=\"profile_pic\" />\n            </div>\n            <div fxFlex=\"100%\" class=\"lable_txt\">\n              Max File Size is 1 MB. Use JPG or PNG\n            </div>\n          \n            \n          </div>\n          <div fxFlex=\"73%\" fxFlex.xs=\"100%\"  fxLayout=\"row wrap\">\n            <div fxFlex=\"100%\" fxLayoutGap=\"15px\" >\n            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>User</mat-label>\n                <mat-select placeholder=\"Select User\" formControlName=\"userType\" >\n                  <mat-option *ngFor=\"let userType of userTypeList\" [value]=\"userType.userTypeID\">{{userType.name}}</mat-option>\n                  <!-- <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option> -->\n              </mat-select>\n                <!-- <mat-error\n                *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n                Phone Number is <strong>required</strong>\n              </mat-error> -->\n            </mat-form-field>\n            </div>\n            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                  <mat-label>Login ID</mat-label>\n                  <input matInput #input placeholder=\"Login ID\" formControlName=\"loginID\">\n                  <!-- <mat-error\n                  *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n                  Phone Number is <strong>required</strong>\n                </mat-error> -->\n              </mat-form-field>\n            </div>\n            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>Password Expiry</mat-label>\n                <mat-select placeholder=\"Password Expiry\" formControlName=\"passwordExpiry\">\n                  <mat-option *ngFor=\"let passwordExpiry of passWorldExpiryList\" [value]=\"passwordExpiry.passWordExpiryVal\">{{passwordExpiry.name}}</mat-option>\n                  <!-- <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option> -->\n              </mat-select>\n                <!-- <mat-error\n                *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n                Phone Number is <strong>required</strong>\n              </mat-error> -->\n            </mat-form-field>\n            </div>\n          </div>\n       \n         \n        <div fxFlex=\"100%\">\n          <mat-form-field class=\"network-ip-chip-list user-chip\" floatLabel=\"always\">\n            <mat-label>Property Network IP</mat-label>\n            <mat-chip-list #chipList aria-label=\"IP selection\">\n              <mat-chip *ngFor=\"let netWorkIP of networkIPs\" [selectable]=\"selectable\"\n                       [removable]=\"removable\" (removed)=\"removeNetworkIP(netWorkIP)\" >\n                {{netWorkIP.name}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n              </mat-chip>\n              <input  placeholder=\"Network IP\"\n                     [matChipInputFor]=\"chipList\"\n                     [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                     [matChipInputAddOnBlur]=\"addOnBlur\"\n                     (matChipInputTokenEnd)=\"addNetworkIP($event)\" formControlName=\"propertyNetworkIP\">\n            </mat-chip-list>\n            <mat-error>Atleast 1 ip need to be added</mat-error>\n          </mat-form-field>\n          </div>\n        </div>\n         \n      </div>\n</div>\n<div class=\"content-0\">\n      \n     \n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n   \n        <div fxFlex=\"73%\" fxFlex.xs=\"100%\" >\n         \n          <mat-form-field class=\"network-ip-chip-list user-chip\" floatLabel=\"always\">\n            <mat-label>Network Mac ID</mat-label>\n            <mat-chip-list #macIdList aria-label=\"IP selection\">\n              <mat-chip *ngFor=\"let macID of macIDs\" [selectable]=\"selectable\"\n                       [removable]=\"removable\" (removed)=\"removeMacID(macID)\">\n                {{macID.name}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n              </mat-chip>\n              <input  placeholder=\"Mac ID\"\n                     [matChipInputFor]=\"macIdList\"\n                     [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                     [matChipInputAddOnBlur]=\"addOnBlur\"\n                     (matChipInputTokenEnd)=\"addMacID($event)\" formControlName=\"propertyMacID\">\n            </mat-chip-list>\n          \n          </mat-form-field>\n\n          \n           \n        \n        \n        </div>\n \n        <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"column wrap\" fxLayoutGap=\"15px\">\n          <div FxFlex=\"100%\" style=\"font-size: 12px;opacity: 0.5;\">\n            Authorized For License\n          </div>\n          <div FxFlex=\"100%\">\n            <mat-radio-group aria-label=\"Select an option\" formControlName=\"isAuthorizedLicense\">\n              <mat-radio-button value=\"1\">Yes</mat-radio-button>\n              <mat-radio-button value=\"0\">No</mat-radio-button>\n            </mat-radio-group>\n          </div>\n       \n      \n        </div>\n      </div>\n  </div>\n  <div class=\"content\">\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n        <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n            Official Contact           \n          </div>\n          <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\n              \n      \n           \n        </div>\n          \n        </div>\n  </div>\n  <div class=\"content\">\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n        \n          <div fxFlex=\"48%\" fxFlex.xs=\"100%\">\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>Address</mat-label>\n                <textarea matInput rows=\"4\"  placeholder=\"Address\" style=\"margin-top:9px;\" formControlName=\"officeAddress\"></textarea>\n                <!-- <mat-error\n                *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n                Phone Number is <strong>required</strong>\n              </mat-error> -->\n            </mat-form-field>\n          </div>\n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\"  fxLayout=\"row wrap\">\n            <div fxFlex=\"100%\" fxLayoutGap=\"15px\" >\n            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>Country</mat-label>\n                <mat-select placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value,'O')\" formControlName=\"officeCountry\">\n                     \n                  <mat-option *ngFor=\"let country of countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\n                </mat-select>\n            \n                <!-- <mat-error\n                *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n                Phone Number is <strong>required</strong>\n              </mat-error> -->\n            </mat-form-field>\n            </div>\n           \n            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>State</mat-label>\n                <mat-select placeholder=\"Select State\" (selectionChange)=\"getCityList($event.value,'O')\" formControlName=\"officeState\">\n                     \n                  <mat-option *ngFor=\"let state of offcialStateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\n                </mat-select>\n                <!-- <mat-error\n                *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n                Phone Number is <strong>required</strong>\n              </mat-error> -->\n            </mat-form-field>\n            </div>\n          </div>\n       \n         \n        <div fxFlex=\"100%\" fxLayoutGap=\"15px\">\n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>City</mat-label>\n              <mat-select placeholder=\"Select State\"  formControlName=\"officeCity\">\n                     \n                <mat-option *ngFor=\"let city of officialCityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\n              </mat-select>\n              <!-- <mat-error\n              *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n              Phone Number is <strong>required</strong>\n            </mat-error> -->\n          </mat-form-field>\n          </div>\n         \n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>Zip / Postal Code</mat-label>\n              <input matInput #input placeholder=\"Phone Number\" formControlName=\"officePostalCode\"> \n              <!-- <mat-error\n              *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n              Phone Number is <strong>required</strong>\n            </mat-error> -->\n          </mat-form-field>\n          </div>\n          </div>\n        </div>\n         \n      </div>\n</div>\n<div class=\"content\">\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\"  class=\"form-input-row\">\n      <div fxFlex=\"24%\" fxFlex.xs=\"100%\" style=\"margin-right: 15px !important;\">\n        <mat-form-field [style.width.%]=\"20\" floatLabel=\"always\"> \n          <mat-label>Mobile</mat-label>\n          <mat-select placeholder=\"Select Code\"  formControlName=\"officeMobileCountryCode\">\n                     \n            <mat-option *ngFor=\"let country of countryList\" [value]=\"country.isdCode\">{{country.isdCode}}</mat-option>\n          </mat-select>\n          \n          <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n          PinZip is <strong>required</strong>\n        </mat-error> -->\n      </mat-form-field>\n      <mat-form-field [style.width.%]=\"75\" floatLabel=\"always\" style=\"margin-left:10px;\"> \n        <mat-label></mat-label>\n  \n        <input matInput #input placeholder=\"Mobile\" formControlName=\"officeMobileNumber\">\n        <!-- <mat-error\n        *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n        PinZip is <strong>required</strong>\n      </mat-error> -->\n    </mat-form-field>\n        </div>\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n          <mat-form-field [style.width.%]=\"20\" floatLabel=\"always\"> \n            <mat-label>Phone</mat-label>\n            <mat-select placeholder=\"Select Code\"  formControlName=\"officePhoneCountryCode\">\n                     \n              <mat-option *ngFor=\"let country of countryList\" [value]=\"country.isdCode\">{{country.isdCode}}</mat-option>\n            </mat-select>\n            \n            <!-- <mat-error\n            *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n            PinZip is <strong>required</strong>\n          </mat-error> -->\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"75\" floatLabel=\"always\" style=\"margin-left:10px;\"> \n          <mat-label></mat-label>\n    \n          <input matInput #input placeholder=\"Phone NO\" formControlName=\"officePhoneNo\"> \n          <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n          PinZip is <strong>required</strong>\n        </mat-error> -->\n      </mat-form-field>\n       \n        </div>\n        <div fxFlex=\"25%\" fxFlex.xs=\"100%\" style=\"margin-right:10px;\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n            <mat-label>Extension</mat-label>\n            <input matInput #input placeholder=\"Extension\" formControlName=\"officeExtension\">\n            <!-- <mat-error\n            *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n            PinZip is <strong>required</strong>\n          </mat-error> -->\n        </mat-form-field>\n        </div>\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n            <mat-label>Email</mat-label>\n            <input matInput #input placeholder=\"Email\" formControlName=\"officeEmail\"> \n                  <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyState').hasError('min')\">\n          State is <strong>required</strong>\n        </mat-error> -->\n        </mat-form-field>\n        </div>\n      </div>\n</div>\n<div class=\"content\">\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n      <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n          Personal Contact           \n        </div>\n        <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\n            \n    \n         \n      </div>\n        \n      </div>\n</div>\n<div class=\"content\">\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n      \n        <div fxFlex=\"48%\" fxFlex.xs=\"100%\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>Address</mat-label>\n              <textarea matInput rows=\"4\"  placeholder=\"Address\" style=\"margin-top:9px;\" formControlName=\"personalAddress\"></textarea>\n              <!-- <mat-error\n              *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n              Phone Number is <strong>required</strong>\n            </mat-error> -->\n          </mat-form-field>\n        </div>\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\"  fxLayout=\"row wrap\">\n          <div fxFlex=\"100%\" fxLayoutGap=\"15px\" >\n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>Country</mat-label>\n              <mat-select placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value,'p')\" formControlName=\"personalCountry\">\n                     \n                <mat-option *ngFor=\"let country of countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\n              </mat-select>\n          \n              <!-- <mat-error\n              *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n              Phone Number is <strong>required</strong>\n            </mat-error> -->\n          </mat-form-field>\n          </div>\n         \n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>State</mat-label>\n              <mat-select placeholder=\"Select State\" (selectionChange)=\"getCityList($event.value,'p')\" formControlName=\"personalState\">\n                     \n                <mat-option *ngFor=\"let state of personalStateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\n              </mat-select>\n              <!-- <mat-error\n              *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n              Phone Number is <strong>required</strong>\n            </mat-error> -->\n          </mat-form-field>\n          </div>\n        </div>\n     \n       \n      <div fxFlex=\"100%\" fxLayoutGap=\"15px\">\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n            <mat-label>City</mat-label>\n            <mat-select placeholder=\"Select State\"  formControlName=\"personalCity\">\n                     \n              <mat-option *ngFor=\"let city of personalCityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\n            </mat-select>\n            <!-- <mat-error\n            *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n            Phone Number is <strong>required</strong>\n          </mat-error> -->\n        </mat-form-field>\n        </div>\n       \n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n            <mat-label>Zip / Postal Code</mat-label>\n            <input matInput #input placeholder=\"Phone Number\" formControlName=\"personalPostalCode\">\n            <!-- <mat-error\n            *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n            Phone Number is <strong>required</strong>\n          </mat-error> -->\n        </mat-form-field>\n        </div>\n        </div>\n      </div>\n       \n    </div>\n</div>\n<div class=\"content\">\n<div fxFlex=\"100%\"  fxLayout=\"row wrap\"  class=\"form-input-row\">\n    <div fxFlex=\"24%\" fxFlex.xs=\"100%\" style=\"margin-right: 15px !important;\">\n      <mat-form-field [style.width.%]=\"20\" floatLabel=\"always\"> \n        <mat-label>Mobile</mat-label>\n          <mat-select placeholder=\"Select Code\"  formControlName=\"personalMobileCountryCode\">\n                     \n        <mat-option *ngFor=\"let country of countryList\" [value]=\"country.isdCode\">{{country.isdCode}}</mat-option>\n      </mat-select>\n        \n        <!-- <mat-error\n        *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n        PinZip is <strong>required</strong>\n      </mat-error> -->\n    </mat-form-field>\n    <mat-form-field [style.width.%]=\"75\" floatLabel=\"always\" style=\"margin-left:10px;\"> \n      <mat-label></mat-label>\n\n      <input matInput #input placeholder=\"Mobile\" formControlName=\"personalMobileNumber\">\n      <!-- <mat-error\n      *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n      PinZip is <strong>required</strong>\n    </mat-error> -->\n  </mat-form-field>\n      </div>\n      <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n        <mat-form-field [style.width.%]=\"20\" floatLabel=\"always\"> \n          <mat-label>Phone</mat-label>\n          <mat-select placeholder=\"Select Code\"  formControlName=\"personalPhoneCountryCode\">\n                     \n            <mat-option *ngFor=\"let country of countryList\" [value]=\"country.isdCode\">{{country.isdCode}}</mat-option>\n          </mat-select>\n            \n       \n          \n          <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n          PinZip is <strong>required</strong>\n        </mat-error> -->\n      </mat-form-field>\n      <mat-form-field [style.width.%]=\"75\" floatLabel=\"always\" style=\"margin-left:10px;\"> \n        <mat-label></mat-label>\n  \n        <input matInput #input placeholder=\"Phone NO\" formControlName=\"personalPhoneNumber\">\n        <!-- <mat-error\n        *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n        PinZip is <strong>required</strong>\n      </mat-error> -->\n    </mat-form-field>\n     \n      </div>\n      <div fxFlex=\"25%\" fxFlex.xs=\"100%\" style=\"margin-right:10px;\">\n        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n          <mat-label>Extension</mat-label>\n          <input matInput #input placeholder=\"Extension\" formControlName=\"personalExtension\">\n          <!-- <mat-error\n          *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\n          PinZip is <strong>required</strong>\n        </mat-error> -->\n      </mat-form-field>\n      </div>\n      <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n          <mat-label>Birth Date</mat-label>\n         \n          <mat-datepicker-toggle matSuffix [for]=\"birthDatepicker\" class=\"user_datepicker\"></mat-datepicker-toggle>\n          <input matInput #input placeholder=\"Birth Date\" [matDatepicker]=\"birthDatepicker\" formControlName=\"userBirthDate\" [formControl]=\"birthDate\">\n        \n          <mat-datepicker #birthDatepicker></mat-datepicker>\n          \n      </mat-form-field>\n      </div>\n    </div>\n</div>\n<div class=\"content\">\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n      \n        <div fxFlex=\"48%\" fxFlex.xs=\"100%\">\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n              <mat-label>Remarks</mat-label>\n              <textarea matInput rows=\"2\"  placeholder=\"Remarks\" formControlName=\"remarks\" ></textarea>\n              <!-- <mat-error\n              *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\n              Phone Number is <strong>required</strong>\n            </mat-error> -->\n          </mat-form-field>\n        </div>\n        </div>\n        </div>\n\n</div>\n\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button  mat-button type=\"button\" class=\"border btnProperty\" (click)=\"onNoClick()\">Back</button>\n    <button  mat-button class=\"button btnProperty\" type=\"submit\" (click)=\"submitFormtest()\">Save & Continue</button>\n    <button  mat-button class=\"button btnProperty\" type=\"submit\" (click)=\"submitForm()\">Save</button>\n \n</mat-dialog-actions>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nexport interface GroupData {\n  groupID: string;\n  groupName: string;\n}\n@Component({\n  selector: 'app-delete-sub-group',\n  templateUrl: './delete-sub-group.component.html',\n  styleUrls: ['./delete-sub-group.component.scss']\n})\nexport class DeleteSubGroupComponent implements OnInit {\n\n  groupData:GroupData;\n  constructor(public dialogRef: MatDialogRef<DeleteSubGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public _groupData: GroupData,private webService:WebService,private toast:ToastService) { \n\n      this.groupData = _groupData;\n    }\n    onConfirmClick():void{\n      var postData={\n        \"GroupID\":this.groupData.groupID,\n             \n        \"DeletedBy\":\"Sirojan\",\n        // \"CreatedDateTime\":\"2012-04-23\",\n        // \"ModifiedDateTime\":\"2012-04-23\"\n        };\n     \n      this.webService.commonMethod('group/delete/'+this.groupData.groupID,postData,'DELETE',null)\n      .subscribe(data=>{\n        if(data.succeeded){\n          if(data.data==1){\n          \n            this.dialogRef.close( { event: 'close', data: 1 });\n            this.toast.success(\"Group Succesfully Removed\");\n  \n          }\n          else if(data.data==0){\n            this.toast.error(\"Please Remove the Child elements\");\n            this.dialogRef.close( { event: 'close', data: 0 });\n          }\n          //this.holdingCompanyObj=data.data;\n         \n        }\n        else{\n          this.toast.error(data.errors);\n        }\n        \n        \n       \n        //this.isProgressing = false;\n      });\n    }\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n\t<p>\n\t\tAre you sure you want to delete <b>{{groupData.groupName}}</b> ?\n\t</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n\t<button mat-raised-button color=\"primary\" (click)=\"onConfirmClick()\" tabindex=\"1\">Yes</button>\n\t<button mat-raised-button mat-dialog-close tabindex=\"-1\">No</button>\n</mat-dialog-actions>\n\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nexport interface DialogData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-holdingcompany',\r\n  templateUrl: './add-holdingcompany.component.html',\r\n  styleUrls: ['./add-holdingcompany.component.scss']\r\n})\r\n\r\nexport class AddHoldingcompanyComponent {\r\n  addCompanyForm: FormGroup = this.formBuilder.group({\r\n    holdingCompanyName: [, { validators: [Validators.required,], updateOn: \"change\" }],\r\n    holdingCompanyCode: [, { validators: [Validators.required,Validators.maxLength(10)], updateOn: \"change\" }],\r\n    holdingCompanyAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    holdingCompanyCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n    holdingCompanyState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n    holdingCompanyCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n    holdingCompanyPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    holdingCompanyPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n\r\n\r\n  });\r\n\r\n\r\n  country: any = 0;\r\n  city: any = 0;\r\n  state: any = 0;\r\n  public cityList: any = [];\r\n  public stateList: any = [];\r\n  public countryList: any = [];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddHoldingcompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public holdingCompanyData: DialogData, private webService: WebService, private toast: ToastService, private formBuilder: FormBuilder) {\r\n\r\n    this.getCountryList();\r\n\r\n  }\r\n  submitForm(): void {\r\n    if (this.addCompanyForm.valid) {\r\n      var postData = {\r\n        \"Name\": this.addCompanyForm.controls['holdingCompanyName'].value,\r\n        \"Code\": this.addCompanyForm.controls['holdingCompanyCode'].value,\r\n        \"CityId\": this.addCompanyForm.controls['holdingCompanyCity'].value,\r\n        \"StateId\": this.addCompanyForm.controls['holdingCompanyState'].value,\r\n        \"CountryId\": this.addCompanyForm.controls['holdingCompanyCountry'].value,\r\n        \"ZipCode\": this.addCompanyForm.controls['holdingCompanyPinZip'].value,\r\n        \"PhoneNumber\": this.addCompanyForm.controls['holdingCompanyPhone'].value,\r\n        \"Address\": this.addCompanyForm.controls['holdingCompanyAddress'].value,\r\n        \"CreatedBy\": \"Sirojan\",\r\n        \"IsActive\": true,\r\n        \"ModifiedBy\": \"Sirojan\",\r\n\r\n      }\r\n      this.webService.commonMethod('holdingcompany/post', postData, 'POST', null)\r\n        .subscribe(data => {\r\n          if (data.succeeded) {\r\n            if (data.data == 0) {\r\n              this.toast.error(\"Code must be unique\");\r\n            }\r\n            else {\r\n              this.holdingCompanyData.holdingCompanyID = data.data;\r\n              this.holdingCompanyData.holdingCompanyName = '';\r\n              this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n\r\n            }\r\n\r\n          }\r\n          else {\r\n            this.toast.error(data.errors);\r\n          }\r\n\r\n\r\n\r\n\r\n        });\r\n    } else {\r\n      return;\r\n    }\r\n\r\n  }\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n  }\r\n  getCityList(stateID) {\r\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.cityList = data.data;\r\n\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n\r\n      });\r\n  }\r\n\r\n  getCountryList() {\r\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.countryList = data.data;\r\n\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n      });\r\n  }\r\n  getStateList(countryID) {\r\n\r\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.stateList = data.data;\r\n          this.cityList = [];\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n          this.stateList = [];\r\n        }\r\n\r\n\r\n      });\r\n  }\r\n  resetForm() {\r\n    this.addCompanyForm.reset();\r\n    this.stateList=[];\r\n    this.cityList=[];  \r\n  \r\n   \r\n   \r\n  }\r\n\r\n\r\n}\r\n","\r\n\r\n\r\n\r\n<h2 mat-dialog-title>Create Holding Company</h2>\r\n<form [formGroup]=\"addCompanyForm\" (submit)=\"submitForm()\">\r\n<mat-dialog-content  class=\"mat-typography\">\r\n\r\n  <div>\r\n    <div class=\"content-0\">\r\n      \r\n     \r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Code</mat-label>\r\n                <input matInput  placeholder=\"Code\" formControlName=\"holdingCompanyCode\"  maxlength=\"10\">\r\n                <mat-error\r\n                *ngIf=\"addCompanyForm.get('holdingCompanyCode').hasError('required')\">\r\n                Code is <strong>required</strong>\r\n              </mat-error>\r\n     \r\n         \r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Name</mat-label>\r\n                <input matInput #input placeholder=\"Name\" formControlName=\"holdingCompanyName\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"addCompanyForm.get('holdingCompanyName').hasError('required')\">\r\n                Name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"48%\" fxFlex.xs=\"100%\" >\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Address</mat-label>\r\n                <input matInput #input placeholder=\"Address\" formControlName=\"holdingCompanyAddress\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"addCompanyForm.get('holdingCompanyAddress').hasError('required')\">\r\n                Address is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"content\">\r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\">\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\r\n                <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\r\n                    <mat-label>Country</mat-label>\r\n                    <mat-select placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value)\" formControlName=\"holdingCompanyCountry\">\r\n                      \r\n                      <mat-option *ngFor=\"let country of countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\r\n                    \r\n                  </mat-select>\r\n\r\n                  <mat-error\r\n                  *ngIf=\"addCompanyForm.get('holdingCompanyCountry').hasError('min')\">\r\n                  Country is <strong>required</strong>\r\n                </mat-error>\r\n            \r\n          \r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>State</mat-label>\r\n                    <mat-select placeholder=\"Select State\" (selectionChange)=\"getCityList($event.value)\" formControlName=\"holdingCompanyState\">\r\n                     \r\n                        <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\r\n                    </mat-select>\r\n                          <mat-error\r\n                  *ngIf=\"addCompanyForm.get('holdingCompanyState').hasError('min')\">\r\n                  State is <strong>required</strong>\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>City</mat-label>\r\n                    <mat-select placeholder=\"Select City\" formControlName=\"holdingCompanyCity\">                      \r\n                        <mat-option *ngFor=\"let city of cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                    *ngIf=\"addCompanyForm.get('holdingCompanyCity').hasError('min')\">\r\n                    City is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Pin/Zip</mat-label>\r\n                    <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"holdingCompanyPinZip\" maxlength=\"20\">\r\n                    <mat-error\r\n                    *ngIf=\"addCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\r\n                    PinZip is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n</div>\r\n<div class=\"content\">\r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n        \r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Phone Number</mat-label>\r\n                <input matInput #input placeholder=\"Phone Number\" formControlName=\"holdingCompanyPhone\" numbersOnly maxlength=\"20\">\r\n                <mat-error\r\n                *ngIf=\"addCompanyForm.get('holdingCompanyPhone').hasError('required')\">\r\n                Phone Number is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n</div>\r\n\r\n  \r\n\r\n</div>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button  mat-button type=\"button\" class=\"border btnProperty\" (click)=\"onNoClick()\">Back</button>\r\n    <button  mat-button type=\"button\" class=\"border btnProperty\" (click)=\"resetForm()\">Reset</button>\r\n    <button  mat-button class=\"button btnProperty\" type=\"submit\" >Save</button>\r\n \r\n</mat-dialog-actions>\r\n</form>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CustomValidationService } from 'src/app/shared/services/custom-validation.service'\r\nimport { BreadcrumbComponent } from './common/breadcrumb/breadcrumb.component';\r\nimport { AuthGuardService } from './shared/services/auth-guard.service';\r\n\r\nimport { ConfigurationMicroService } from './shared/services/configuration-micro.service';\r\nimport { LocalStorageService } from './shared/services/local-storage.service';\r\n\r\nimport { CommonService } from './shared/services/common.service';\r\nimport { LoaderComponent } from './common/loader/loader.component';\r\nimport { FormatTimePipe } from './shared/pipe/format-time.pipe';\r\nimport { OnlyNumberDirective } from './shared/directives/only-number.directive';\r\nimport { FilterPipe } from './shared/pipe/filter.pipe';\r\n\r\nimport { TogglePipe } from './shared/pipe/toggle.pipe';\r\nimport { SampleComponent } from './pages/sample/sample.component';\r\nimport { DatabaseComponent } from './pages/database/database.component';\r\nimport { PropertyComponent } from './pages/property/property.component';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { AddHoldingcompanyComponent } from './pages/holdingcompany/add/add-holdingcompany.component';\r\nimport { AddGroupComponent } from './pages/group/add-group/add-group.component';\r\nimport { AddPropertyComponent } from './pages/property/add-property/add-property.component';\r\nimport { AddSubGroupComponent } from './pages/group/add-sub-group/add-sub-group.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { StarRatingModule } from 'angular-star-rating';\r\nimport { StarRatingComponent } from './shared/star-rating/star-rating.component';\r\nimport { NgxOrgChartModule } from 'ngx-org-chart';\r\nimport { HierarchyComponent } from './pages/hierarchy/hierarchy.component';\r\nimport { UserComponent } from './pages/user/user.component';\r\nimport { ViewHoldingcompanyComponent } from './pages/holdingcompany/view-holdingcompany/view-holdingcompany.component';\r\nimport { EditHoldingcompanyComponent } from './pages/holdingcompany/edit-holdingcompany/edit-holdingcompany.component';\r\nimport { DeleteHoldingcompanyComponent } from './pages/holdingcompany/delete-holdingcompany/delete-holdingcompany.component';\r\nimport { ViewGroupComponent } from './pages/group/view-group/view-group.component';\r\nimport { EditGroupComponent } from './pages/group/edit-group/edit-group.component';\r\nimport { DeleteGroupComponent } from './pages/group/delete-group/delete-group.component';\r\nimport { ViewSubGroupComponent } from './pages/group/view-sub-group/view-sub-group.component';\r\nimport { EditSubGroupComponent } from './pages/group/edit-sub-group/edit-sub-group.component';\r\nimport { DeleteSubGroupComponent } from './pages/group/delete-sub-group/delete-sub-group.component';\r\nimport { ViewPropertyComponent } from './pages/property/view-property/view-property.component';\r\nimport { EditPropertyComponent } from './pages/property/edit-property/edit-property.component';\r\nimport { DeletePropertyComponent } from './pages/property/delete-property/delete-property.component';\r\nimport { CreateUserComponent } from './pages/user/create-user/create-user.component';\r\nimport { MatPaginatorGotoComponent } from './shared/mat-paginator-goto/mat-paginator-goto.component';\r\nimport { LinkProductComponent } from './pages/user/link-product/link-product.component';\r\nimport { DbConnectionComponent } from './pages/user/db-connection/db-connection.component';\r\nimport { UserHierarchyComponent } from './pages/user/user-hierarchy/user-hierarchy.component';\r\nimport { SinglePropertyComponent } from './pages/user/single-property/single-property.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    BreadcrumbComponent,\r\n    LoaderComponent,\r\n    FormatTimePipe,\r\n    TogglePipe,\r\n    OnlyNumberDirective,\r\n    FilterPipe,\r\n    SampleComponent,\r\n    DatabaseComponent,\r\n    PropertyComponent,\r\n    AddHoldingcompanyComponent,\r\n    AddGroupComponent,\r\n    AddPropertyComponent,\r\n    AddPropertyComponent,\r\n    AddSubGroupComponent,\r\n    StarRatingComponent,\r\n    HierarchyComponent,\r\n    UserComponent,\r\n    ViewHoldingcompanyComponent,\r\n    EditHoldingcompanyComponent,\r\n    DeleteHoldingcompanyComponent,\r\n    ViewGroupComponent,\r\n    EditGroupComponent,\r\n    DeleteGroupComponent,\r\n    ViewSubGroupComponent,\r\n    EditSubGroupComponent,\r\n    DeleteSubGroupComponent,\r\n    ViewPropertyComponent,\r\n    EditPropertyComponent,\r\n    DeletePropertyComponent,\r\n    CreateUserComponent,\r\n    MatPaginatorGotoComponent,\r\n    LinkProductComponent,\r\n    DbConnectionComponent,\r\n    UserHierarchyComponent,\r\n    SinglePropertyComponent \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    MatExpansionModule,\r\n    MatChipsModule,\r\n    NgxMaterialTimepickerModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    StarRatingModule,\r\n    NgxOrgChartModule,\r\n    MatTreeModule \r\n  \r\n  ],\r\n  exports: [],\r\n  entryComponents:[],\r\n  bootstrap: [AppComponent],\r\n  providers: [CustomValidationService, MatDatepickerModule, ConfigurationMicroService, LocalStorageService, AuthGuardService, CommonService]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nimport { EditSubGroupComponent } from '../edit-sub-group/edit-sub-group.component';\nimport { DeleteSubGroupComponent } from '../delete-sub-group/delete-sub-group.component';\nexport interface GroupData {\n  groupID: string;\n  groupName: string;\n  parentGroupName:string;\n  parentGroupID:string;\n  holdingCompanyName:string;\n  holdingCompanyID:string;\n  subGroupIndex:string\n}\n@Component({\n  selector: 'app-view-sub-group',\n  templateUrl: './view-sub-group.component.html',\n  styleUrls: ['./view-sub-group.component.scss']\n})\nexport class ViewSubGroupComponent implements OnInit {\n\n  groupData:GroupData;\n  groupObj={code:'',name:'',cityName:'',address:'',stateName:'',countryName:'',zipCode:'',   \n                    phoneNumber:''};\n\n  constructor(    public dialogRef: MatDialogRef<ViewSubGroupComponent>,\n    @Inject(MAT_DIALOG_DATA) public _groupData: GroupData,private webService:WebService,private toast:ToastService,public dialog: MatDialog\n    ) {\n      this.groupData = _groupData;\n      this.getGroupData(_groupData.groupID);\n\n     }\n\n  ngOnInit(): void {\n  }\n  editGroup(): void {\n\n      const dialogRef = this.dialog.open(EditSubGroupComponent, {\n        panelClass: ['viewmore-dialog-container'],\n        disableClose: true ,\n        \n        //minHeight: '800px',    \n        data: {groupName: this.groupData.groupName, groupID: this.groupData.groupID,\n          holdingCompanyName:this.groupData.holdingCompanyName,holdingCompanyID:this.groupData.holdingCompanyID,\n          parentGroupName:this.groupData.parentGroupName,parentGroupID:this.groupData.parentGroupID,\n          subGroupIndex:this.groupData.subGroupIndex\n        \n        }\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        if(result.data==1){\n        \n          this.getGroupData(this.groupData.groupID);\n          this.toast.success(\"Updated Successfully\");\n          // this.getCompanyGroupList(this.holdingCompanyID);\n        }\n     \n        // this.holdingCompanyName= result.data.holdingCompanyName;\n        // this.holdingCompanyID=result.data.holdingCompanyID;\n      });\n   \n   \n  }\n  getGroupData(groupID){\n    this.webService.commonMethod('group/get/'+groupID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        this.groupObj=data.data;\n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n      \n      //this.isProgressing = false;\n    });\n  }\n  delete():void{\n    const dialogRef = this.dialog.open(DeleteSubGroupComponent, {\n      //panelClass: ['viewmore-dialog-container'],\n      disableClose: true ,\n      \n      //minHeight: '800px',    \n      data: {groupName: this.groupData.groupName, groupID: this.groupData.groupID}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result.data==1){\n        //this.dialogRef.close( { event: 'close', data: this.holdingCompanyData });\n        this.dialogRef.close( { event: 'close', data:\"D\" });\n        \n        // this.getCompanyGroupList(this.holdingCompanyID);\n      }\n      else{\n       \n      }\n     \n     \n    });\n   \n  }\n  close(): void {\n   \n    this.dialogRef.close( { event: 'close', data: this.groupData });\n  }\n\n}\n","\n<h2 mat-dialog-title>\n    <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\n<div fxFlex=\"75%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Sub Group</div>\n<div fxFlex=\"25%\" fxFlex.xs=\"100%\" class=\"headerAction\">\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\" class=\"editcontainer\">\n        <div fxFlex=\"100%\">\n            <i class=\"fas fa-pencil-alt themecolor fxcursor_pointer\" (click)=\"editGroup()\"></i>\n        </div>\n        <div fxFlex=\"100%\" class=\"headeredittext fxcursor_pointer\" (click)=\"editGroup()\">\n            Edit\n        </div>\n     \n    </div>\n    <div fxFlex=\"50%\" fxFlex.sm=\"40%\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100%\">\n            <i class=\"far fa-trash-alt themecolor fxcursor_pointer\" (click)=\"delete()\"></i>\n        </div>\n        <div fxFlex=\"100%\" class=\"headerdeletetext fxcursor_pointer\" (click)=\"delete()\">\n            Delete\n        </div>\n      \n    </div>\n    \n   </div>\n    </div>\n   \n</h2>\n<mat-dialog-content  class=\"mat-typography\">\n\n    <div>\n        <div class=\"content\"  >\n            <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"7px\" >\n                <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                  Holding Company\n                \n                  </div>\n                  <div fxFlex=\"25%\">\n                    {{groupData.holdingCompanyName}}\n                    </div>\n                  \n                  </div>\n                  <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"7px\" >\n                      <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                          Group\n                         \n                           </div>\n                  <div fxFlex=\"25%\" >\n                    {{groupData.parentGroupName}}\n                    </div>\n                  \n                </div>\n      </div>\n      <div class=\"content\">\n         \n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n            <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n              Sub Group {{groupData.subGroupIndex+1}}           \n              </div>\n             \n              \n            </div>\n      </div>\n      <div class=\"content-0\">\n        \n       \n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n              <div fxFlex=\"100%\" class=\"labeltext\">\n                  Code\n              </div>\n              <div fxFlex=\"100%\">\n              {{groupObj.code}}\n            </div>\n           \n            </div>\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Name\n                </div>\n                <div fxFlex=\"100%\">\n                    {{groupObj.name}}\n              </div>\n             \n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Address\n                </div>\n                <div fxFlex=\"100%\">\n                    {{groupObj.address}}\n              </div>\n             \n              </div>\n          </div>\n      </div>\n      <div class=\"content\">\n        \n       \n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\" class=\"labeltext\">\n                    Country\n                </div>\n                <div fxFlex=\"100%\">\n                    {{groupObj.countryName}}\n              </div>\n             \n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                  <div fxFlex=\"100%\" class=\"labeltext\">\n                      State\n                  </div>\n                  <div fxFlex=\"100%\">\n                    {{groupObj.stateName}}\n                </div>\n               \n                </div>\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                  <div fxFlex=\"100%\" class=\"labeltext\">\n                      City\n                  </div>\n                  <div fxFlex=\"100%\">\n                    {{groupObj.cityName}}\n                </div>\n               \n                </div>\n                <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Piz/Zip\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{groupObj.zipCode}}\n                  </div>\n                 \n                  </div>\n            </div>\n        </div>\n        <div class=\"content\">\n        \n       \n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\">\n                    <div fxFlex=\"100%\" class=\"labeltext\">\n                        Phone Number\n                    </div>\n                    <div fxFlex=\"100%\">\n                        {{groupObj.phoneNumber}}\n                  </div>\n                 \n                  </div>\n                 \n                </div>\n            </div>\n      </div>\n      </mat-dialog-content>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { MatIconRegistry } from '@angular/material/icon/icon-registry';\r\nimport { StarRatingColor } from '../../../shared/star-rating/star-rating.component';\r\nimport { OnInit } from '@angular/core';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport  *  as  day  from  'src/app/shared/data/day.json';\r\nexport interface DialogData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n  groupID:string;\r\n  groupName:string;\r\n}\r\n\r\nexport interface NetworkIP {\r\n  name: string;\r\n}\r\nexport interface MacID {\r\n  name: string;\r\n}\r\n@Component({\r\n  selector: 'app-add-property',\r\n  templateUrl: './add-property.component.html',\r\n  styleUrls: ['./add-property.component.scss']\r\n})\r\n\r\nexport class AddPropertyComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  \r\n  items = [];\r\n  rating: number = 4;\r\n  starCount: number = 5;\r\n  starColor: StarRatingColor = StarRatingColor.primary;\r\n  starColorP: StarRatingColor = StarRatingColor.primary;\r\n  starColorW: StarRatingColor = StarRatingColor.warn;\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  DataArray = [];\r\n  countryList = [];\r\n  currencyList=[];\r\n  dayList= (day  as  any).default;\r\n  hotelTypeList=[];\r\n  cityList = [];\r\n  stateList = [];\r\n  formGroup: FormGroup;\r\n  holdingCompanyData: DialogData;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n \r\n  value = this.fb.group({\r\n\r\n  });\r\n  public validate(): void {\r\n    this.formGroup = this.fb.group({\r\n      'formArray1': this.fb.array([\r\n        this.initX(true)\r\n      ])\r\n    });\r\n   \r\n  }\r\n  get f() { return this.formGroup.controls; }\r\n\r\n  public initX(panelState): FormGroup {\r\n\r\n    this.DataArray.push({\r\n      countryList: this.countryList,\r\n      stateList: [],\r\n      cityList: [],\r\n      PanelOpenState: panelState,\r\n      propertyState:0,\r\n      propertyCity:0,\r\n      propertyCountry:0,\r\n      dayList:this.dayList,\r\n      currencyList:this.currencyList,\r\n      propertyCurrency:0,\r\n      propertyOtherCurrency:0,\r\n      propertyWeekends:0,\r\n      propertyWeekDays:0,\r\n      propertyHotelType:0,\r\n      CheckInValid:true,\r\n      networkIPs:[],\r\n      \r\n      rating:0,\r\n      hotelTypeList:this.hotelTypeList,\r\n      macIDs:[]\r\n\r\n    })\r\n \r\n    return this.fb.group({\r\n\r\n      propertyName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyCode: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      propertyState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      propertyCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      propertyPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyHotelType: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      propertyCheckIn: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyCheckOut: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyWebsite: [, { validators: [Validators.required], updateOn: \"change\" }],      \r\n      propertyWeekends: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyCurrency: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n      propertyOtherCurrency: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      propertyNetworkIP: [, { validators: [], updateOn: \"change\" }],\r\n      propertyMacAddress: [, { validators: [], updateOn: \"change\" }],\r\n     \r\n    });\r\n  }\r\n  \r\n  public addX(): void {\r\n    const control = <FormArray>this.f.formArray1;\r\n    control.push(this.initX(false));\r\n  }\r\n\r\n  removeX(index) {\r\n    const control = <FormArray>this.f.formArray1;\r\n    control.removeAt(index);\r\n\r\n  }\r\n  addNetworkIP(event: MatChipInputEvent,i): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n  \r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.DataArray[i].networkIPs.push({ name: value.trim() });\r\n     \r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  removeNetworkIP(networkIP: NetworkIP,i): void {\r\n    \r\n    \r\n    const index = this.DataArray[i].networkIPs.indexOf(networkIP);\r\n\r\n    if (index >= 0) {\r\n      this.DataArray[i].networkIPs.splice(index, 1);\r\n    }\r\n  }\r\n  addMacID(event: MatChipInputEvent,i): void {\r\n    \r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.DataArray[i].macIDs.push({ name: value.trim() });\r\n      \r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  removeMacID(macID: MacID, i): void {\r\n\r\n    const index = this.DataArray[i].macIDs.indexOf(macID);\r\n    if (index >= 0) {\r\n      this.DataArray[i].macIDs.splice(index, 1);\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddPropertyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, private fb: FormBuilder,private webService:WebService,private toast: ToastService) {\r\n    this.holdingCompanyData=data;\r\n    this.getCountryList();\r\n    this.getCurrencyList();\r\n    this.getHotelTypeList();\r\n    //this.getDayList();\r\n  }\r\n  ngOnInit() {\r\n    this.validate();\r\n    \r\n  }\r\n  onRatingChanged(rating, i) {\r\n \r\n    this.DataArray[i].rating = rating;\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n  }\r\n  getCityList(stateID, i) {\r\n\r\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n     \r\n          this.DataArray[i].cityList = data.data;\r\n          this.DataArray[i].propertyCity=0;\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n \r\n      \r\n      });\r\n  }\r\n\r\n  getCountryList() {\r\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          \r\n          this.countryList = data.data;\r\n          this.DataArray[0].countryList = data.data;\r\n      \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getCurrencyList() {\r\n    this.webService.commonMethod('currency/get?pageSize=10000', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          \r\n          this.currencyList = data.data;\r\n          this.DataArray[0].currencyList = data.data;\r\n      \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getHotelTypeList() {\r\n    this.webService.commonMethod('hotelType/get?pageSize=10000', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          \r\n          this.hotelTypeList = data.data;\r\n          this.DataArray[0].hotelTypeList = data.data;\r\n      \r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getDayList() {\r\n    // this.webService.commonMethod('day/get?pageSize=10000', null, 'GET', null)\r\n    //   .subscribe(data => {\r\n    //     if (data.succeeded) {\r\n          \r\n    //       this.dayList = data.data;\r\n    //       this.DataArray[0].dayList = data.data;\r\n      \r\n    //     }\r\n    //     else {\r\n    //       this.toast.error(data.errors);\r\n    //     }\r\n\r\n    //   });\r\n  }\r\n  getStateList(countryID, i) {\r\n\r\n \r\n\r\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n    \r\n       \r\n          this.DataArray[i].stateList = data.data;\r\n         // item.value.groupState = 0;\r\n          this.DataArray[i].propertyState=0;\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n          this.stateList = [];\r\n        }\r\n\r\n\r\n   \r\n      \r\n      });\r\n  }\r\n  validateCheckTime(checkInTime,chekcOutTime):boolean{\r\n    var jdt1=Date.parse('20 Aug 2000 '+checkInTime);\r\n\t\tvar jdt2=Date.parse('20 Aug 2000 '+chekcOutTime);\r\n\t\t\r\n\t/*\tif(jdt1=='NaN')\r\n\t\t{\r\n\t\t\talert('invalid start time');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(jdt2=='NaN')\r\n\t\t{\r\n\t\t\talert('invalid end time');\r\n\t\t\treturn false;\r\n\t\t}*/\r\n\t  \tif (jdt1>jdt2)\r\n\t\t{\r\n\t\t return true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n  }\r\n  onSubmit() {\r\n   \r\n    if (this.formGroup.valid) {\r\n      var properties = [];\r\n      var i=0;\r\n      for (let control of this.formGroup.get('formArray1')['controls']) {\r\n        var otherCurrency=[];\r\n        for(let currency of control.controls[\"propertyOtherCurrency\"].value){\r\n          if(currency!=0){\r\n            otherCurrency.push({\"CurrencyID\":currency});\r\n          }        \r\n        }\r\n        var weekDayArr=[];\r\n      \r\n        var weekEndArr=[];\r\n        for(let weekEnd of control.controls[\"propertyWeekends\"].value){\r\n          if(weekEnd!=0){\r\n            weekEndArr.push({\"DayID\":weekEnd});\r\n          }        \r\n        }\r\n       \r\n        var macIDArr=[];\r\n        for(let macID of this.DataArray[i].macIDs){\r\n         \r\n          macIDArr.push({\"MacAddress\":macID.name});\r\n           \r\n        }\r\n        var netWorkIPArr=[];\r\n        for(let networkIP of this.DataArray[i].networkIPs){\r\n         \r\n          netWorkIPArr.push({\"IPAddress\":networkIP.name});\r\n           \r\n        }\r\n        if(!this.validateCheckTime(control.controls[\"propertyCheckIn\"].value,control.controls[\"propertyCheckOut\"].value)){\r\n          \r\n          this.toast.error(\"Checkout time must be less then CheckIn time\");\r\n          return false;\r\n        }\r\n        var groupData = {\r\n          \"GroupID\": parseInt(this.holdingCompanyData.groupID),\r\n          \"HoldingCompanyID\": parseInt(this.holdingCompanyData.holdingCompanyID),\r\n          \"Name\": control.controls[\"propertyName\"].value,\r\n          \"Code\": control.controls[\"propertyCode\"].value,\r\n          \"CityID\": control.controls[\"propertyCity\"].value,\r\n          \"StateId\": control.controls[\"propertyState\"].value,\r\n          \"CountryId\": control.controls[\"propertyCountry\"].value,\r\n          \"ZipCode\": control.controls[\"propertyPinZip\"].value,\r\n          \"PhoneNumber\": control.controls[\"propertyPhone\"].value,\r\n          \"Address\": control.controls[\"propertyAddress\"].value,\r\n          \"CreatedBy\": \"Sirojan\",          \r\n          \"CheckInTime\":this.convertTime(control.controls[\"propertyCheckIn\"].value),\r\n          \"CheckOutTime\":this.convertTime(control.controls[\"propertyCheckOut\"].value),\r\n          \"StarRating\":this.DataArray[i].rating,\r\n          \"Website\": control.controls[\"propertyWebsite\"].value,\r\n          \"CurrencyID\":control.controls[\"propertyCurrency\"].value,\r\n          \"HotelTypeID\":control.controls[\"propertyHotelType\"].value,\r\n          \"OtherCurrencies\":otherCurrency,\r\n          \"PropertyWeekDays\":weekDayArr,\r\n          \"PropertyWeekends\":weekEndArr,\r\n          \"MacAddresses\":macIDArr,\r\n          \"IPAddresses\":netWorkIPArr\r\n        }\r\n        properties.push(groupData);\r\n        \r\n        i++;\r\n\r\n\r\n      }\r\n\r\n      this.webService.commonMethod('property/post', { \"properties\": properties }, 'POST', null)\r\n        .subscribe(data => {\r\n          if (data.succeeded) {\r\n\r\n            this.dialogRef.close({ event: 'close', data: this.holdingCompanyData });\r\n          }\r\n          else {\r\n            this.toast.error(data.errors);\r\n          }\r\n        });\r\n      \r\n    }\r\n    else {\r\n      this.toast.error(\"form validation failed\");\r\n    }\r\n\r\n  }\r\n  convertTime(time:any): any{\r\n    if(time){\r\n      var time = time;\r\n      var hours = Number(time.match(/^(\\d+)/)[1]);\r\n      var minutes = Number(time.match(/:(\\d+)/)[1]);\r\n      var AMPM = time.match(/\\s(.*)$/)[1];\r\n      if(AMPM == \"PM\" && hours<12) hours = hours+12;\r\n      if(AMPM == \"AM\" && hours==12) hours = hours-12;\r\n      var sHours = hours.toString();\r\n      var sMinutes = minutes.toString();\r\n      if(hours<10) sHours = \"0\" + sHours;\r\n      if(minutes<10) sMinutes = \"0\" + sMinutes;\r\n  \r\n      return (sHours + \":\" + sMinutes);\r\n    }else{\r\n      return null;\r\n    }\r\n  \r\n\r\n  }\r\n  resetForm() {\r\n    this.formGroup.reset();\r\n    var i=0;\r\n    for (let control of this.formGroup.get('formArray1')['controls']) {\r\n      // control.controls[\"groupCountry\"].setValue(0);\r\n      // control.controls[\"groupState\"].setValue(0);\r\n      // control.controls[\"groupCity\"].setValue(0);\r\n      this.DataArray[i].stateList=[];\r\n      this.DataArray[i].cityList=[];\r\n      this.DataArray[i].networkIPs=[];\r\n      this.DataArray[i].macIDs=[];\r\n      this.DataArray[i].rating=0;\r\n      i++;\r\n    }\r\n   \r\n   \r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n<form [formGroup]=\"formGroup\" novalidate (ngSubmit)=\"onSubmit()\">\r\n<h2 mat-dialog-title>Create Property</h2>\r\n<mat-dialog-content  class=\"mat-typography\">\r\n  <div>\r\n    <div class=\"content\">\r\n      <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"15px\" >\r\n          <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\r\n            Holding Company\r\n          \r\n            </div>\r\n            <div fxFlex=\"25%\">\r\n                {{holdingCompanyData.holdingCompanyName}}\r\n              </div>\r\n            \r\n            </div>\r\n            <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"15px\" >\r\n                <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\r\n                    Group\r\n                   \r\n                     </div>\r\n            <div fxFlex=\"25%\" >\r\n              {{holdingCompanyData.groupName}}\r\n              </div>\r\n            \r\n          </div>\r\n</div>\r\n    <div formArrayName=\"formArray1\" *ngFor=\"let property of f.formArray1['controls']; let ix=index\" [attr.data-index]=\"i\">\r\n      <mat-accordion formGroupName=\"{{ix}}\">\r\n   \r\n        <mat-expansion-panel [expanded]=\"DataArray[ix].PanelOpenState\"  hideToggle=\"true\" class=\"mat-elevation-z0\"  (opened)=\"DataArray[ix].PanelOpenState = true\"\r\n                             (closed)=\"DataArray[ix].PanelOpenState = false\" >\r\n                           \r\n          <mat-expansion-panel-header #panelH (click)=\"panelH._toggle()\">\r\n            <mat-panel-title>\r\n      \r\n      <div class=\"content\" (click)=\"panelH._toggle()\">\r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\r\n            <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\r\n                Property {{ix+1}}            \r\n              </div>\r\n              <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\r\n                  \r\n                <i  *ngIf=\"!DataArray[ix].PanelOpenState\" class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\r\n                <i *ngIf=\"DataArray[ix].PanelOpenState\" class=\"fas fa-angle-up themecolor iconSize moreicon\"></i>\r\n               \r\n            </div>\r\n              \r\n            </div>\r\n      </div>\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n   \r\n      <div class=\"content-0\">\r\n      \r\n     \r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Code</mat-label>\r\n                <input matInput  placeholder=\"Code\" formControlName=\"propertyCode\" maxlength=\"10\">\r\n                <mat-error\r\n                *ngIf=\"property['controls'].propertyCode.hasError('required')\">\r\n                Code is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Name</mat-label>\r\n                <input matInput #input placeholder=\"Name\" formControlName=\"propertyName\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"property['controls'].propertyName.hasError('required')\">\r\n                Group Name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"48%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Address</mat-label>\r\n                <input matInput #input placeholder=\"Address\" formControlName=\"propertyAddress\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"property['controls'].propertyAddress.hasError('required')\">\r\n                Address is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"content\">\r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n              \r\n                <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\r\n                    <mat-label>Country</mat-label>\r\n                    <mat-select placeholder=\"Select Country\" (selectionChange)=\"getStateList($event.value,ix)\" formControlName=\"propertyCountry\">\r\n                     \r\n                      <mat-option *ngFor=\"let country of DataArray[ix].countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                    *ngIf=\"property['controls'].propertyCountry.hasError('min')\">\r\n                    Country is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>State</mat-label>\r\n                    <mat-select placeholder=\"Select State\"   (selectionChange)=\"getCityList($event.value,ix)\" formControlName=\"propertyState\">\r\n                     \r\n                      <mat-option *ngFor=\"let state of DataArray[ix].stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                    *ngIf=\"property['controls'].propertyState.hasError('min')\">\r\n                    State is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>City</mat-label>\r\n                    <mat-select placeholder=\"Select City\" formControlName=\"propertyCity\">\r\n                    \r\n                      <mat-option *ngFor=\"let city of DataArray[ix].cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                    *ngIf=\"property['controls'].propertyCity.hasError('min')\">\r\n                    City is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Pin/Zip</mat-label>\r\n                    <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"propertyPinZip\" maxlength=\"10\">\r\n                    <mat-error\r\n                    *ngIf=\"property['controls'].propertyPinZip.hasError('required')\">\r\n                    PinZip is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n</div>\r\n<div class=\"content\">\r\n    <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n        \r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Phone Number</mat-label>\r\n                <input matInput #input placeholder=\"Phone Number\" formControlName=\"propertyPhone\" numbersOnly maxlength=\"20\">\r\n                <mat-error\r\n                *ngIf=\"property['controls'].propertyPhone.hasError('required')\">\r\n                Phone is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Hotel Type</mat-label>\r\n                <mat-select placeholder=\"Select Hotel Type\" formControlName=\"propertyHotelType\">\r\n                  \r\n                  <mat-option *ngFor=\"let hotelType of DataArray[ix].hotelTypeList\" [value]=\"hotelType.hotelTypeID\">{{hotelType.name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error\r\n                *ngIf=\"property['controls'].propertyHotelType.hasError('min')\">\r\n                HotelType is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" fxLayout=\"row wrap\">\r\n      \r\n             \r\n                <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n                  <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Check in Time</mat-label>\r\n                    <div fxFlex=\"20%\"><i class=\"fas fa-clock\"></i></div>\r\n                    <div fxFlex=\"80%\">\r\n                      <input matInput #input placeholder=\"Check in\" [ngxTimepicker]=\"inpicker\"  formControlName=\"propertyCheckIn\">\r\n                 \r\n                      <ngx-material-timepicker #inpicker></ngx-material-timepicker>\r\n                   \r\n                    </div>\r\n                    <mat-error\r\n                    *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\r\n                    CheckIn  is <strong>required</strong>\r\n                  </mat-error>\r\n                    .\r\n                </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n               \r\n                  <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Check Out Time</mat-label>\r\n                    <div fxFlex=\"20%\"><i class=\"fas fa-clock\"></i></div>\r\n                    <div fxFlex=\"80%\">\r\n                      <input matInput #input placeholder=\"Check out\"   [ngxTimepicker]=\"outpicker\"  max=\"{{property['controls'].propertyCheckIn.value}}\"   formControlName=\"propertyCheckOut\">\r\n                     \r\n                      <ngx-material-timepicker #outpicker #max></ngx-material-timepicker>\r\n                     \r\n                    </div>\r\n                    <mat-error\r\n                      *ngIf=\"property['controls'].propertyCheckOut.hasError('required')\">\r\n                      CheckOut is <strong>required</strong>\r\n                    </mat-error>\r\n                    \r\n                </mat-form-field>\r\n                </div>   \r\n          </div>\r\n          <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n            <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                <mat-label>Website</mat-label>\r\n                <input matInput #input placeholder=\"Website\" formControlName=\"propertyWebsite\" maxlength=\"100\">\r\n                <mat-error\r\n                *ngIf=\"property['controls'].propertyWebsite.hasError('required')\">\r\n                Website is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n</div>\r\n<div class=\"content\">\r\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\r\n      \r\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n              <mat-label>Weekends</mat-label>\r\n              <mat-select   placeholder=\"Select WeekEnd\" formControlName=\"propertyWeekends\" multiple>\r\n              \r\n                <mat-option *ngFor=\"let day of DataArray[ix].dayList\" [value]=\"day.dayID\">{{day.name}}</mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n              *ngIf=\"property['controls'].propertyWeekends.hasError('required')\">\r\n              WeekEnd is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n              <mat-label>Currency</mat-label>\r\n              <mat-select placeholder=\"Select Currency\"  formControlName=\"propertyCurrency\">\r\n                \r\n                <mat-option *ngFor=\"let currency of DataArray[ix].currencyList\" [value]=\"currency.currencyID\">{{currency.currencyCode}}</mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n              *ngIf=\"property['controls'].propertyCurrency.hasError('min')\">\r\n              Currency is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\r\n          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n            <mat-label>Other Currency</mat-label>\r\n            <mat-select  formControlName=\"propertyOtherCurrency\" placeholder=\"Select Other Currency\" multiple>\r\n              \r\n              <mat-option *ngFor=\"let currency of DataArray[ix].currencyList\" [value]=\"currency.currencyID\">{{currency.currencyCode}}</mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"property['controls'].propertyOtherCurrency.hasError('required')\">\r\n           Other Currency is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n      </div>\r\n</div>\r\n<div class=\"content\">\r\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n    <mat-form-field class=\"network-ip-chip-list\" floatLabel=\"always\">\r\n      <mat-label>Property Network IP</mat-label>\r\n      <mat-chip-list #chipList aria-label=\"IP selection\">\r\n        <mat-chip *ngFor=\"let netWorkIP of DataArray[ix].networkIPs\" [selectable]=\"selectable\"\r\n                 [removable]=\"removable\" (removed)=\"removeNetworkIP(netWorkIP , ix)\" >\r\n          {{netWorkIP.name}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input formControlName=\"propertyNetworkIP\" placeholder=\"Network IP\"\r\n               [matChipInputFor]=\"chipList\"\r\n               [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n               [matChipInputAddOnBlur]=\"addOnBlur\"\r\n               (matChipInputTokenEnd)=\"addNetworkIP($event,ix)\" maxlength=\"100\">\r\n      </mat-chip-list>\r\n      <mat-error>Atleast 1 ip need to be added</mat-error>\r\n    </mat-form-field>\r\n    </div>\r\n    </div>\r\n    <div class=\"content\">\r\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n     \r\n        <mat-form-field class=\"network-ip-chip-list\" floatLabel=\"always\">\r\n          <mat-label>Network Mac ID</mat-label>\r\n          <mat-chip-list #macIdList aria-label=\"IP selection\">\r\n            <mat-chip *ngFor=\"let macID of DataArray[ix].macIDs\" [selectable]=\"selectable\"\r\n                     [removable]=\"removable\" (removed)=\"removeMacID(macID, ix)\">\r\n              {{macID.name}}\r\n              <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n            </mat-chip>\r\n            <input formControlName=\"propertyMacAddress\" placeholder=\"Mac ID\"\r\n                   [matChipInputFor]=\"macIdList\"\r\n                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                   [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                   (matChipInputTokenEnd)=\"addMacID($event,ix)\" maxlength=\"100\">\r\n          </mat-chip-list>\r\n        \r\n        </mat-form-field>\r\n        </div>\r\n        </div>\r\n        <div class=\"content\">\r\n        \r\n          <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_starRating\">\r\n            <div fxFlex=\"100%\">\r\n              Ratings\r\n            </div>\r\n            <div fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"40%\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\">\r\n            <mat-star-rating [rating]=\"DataArray[ix].rating\"  [starCount]=\"starCount\" [color]=\"starColor\" (ratingUpdated)=\"onRatingChanged($event , ix)\"></mat-star-rating>\r\n\r\n            <star-rating-comp [starType]=\"'svg'\" [rating]=\"4\"></star-rating-comp>\r\n          </div>\r\n          <div fxFlex=\"60%\"  fxFlex.xs=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end end\" >\r\n            <button  mat-button type=\"button\"  class=\"border btnProperty btnAddMoreGroup themecolor\" (click)=\"removeX(ix)\"><i class=\"fas fa-minus\"></i>Remove Property</button>\r\n            </div>\r\n          </div>\r\n\r\n         \r\n            </div>\r\n            </div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n \r\n</div>\r\n<div class=\"content\">\r\n  <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end end\" >\r\n    <button  mat-button type=\"button\" class=\"border btnProperty btnAddMoreGroup themecolor\" [autofocus]=\"false\" (click)=\"addX()\"><i class=\"fas fa-plus\"></i>Add Property</button>\r\n    </div>\r\n    </div>\r\n</div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button  mat-button type=\"button\" class=\"border btnProperty\" (click)=\"onNoClick()\">Back</button>\r\n    <button  mat-button type=\"button\"  class=\"border btnProperty\" (click)=\"resetForm()\">Reset</button>\r\n    <button type=\"submit\" mat-button class=\"button btnProperty\">Save</button>\r\n \r\n</mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n\r\n  constructor() { }\r\n  queryData: any = this.queryParam(window.top.location.href);\r\n  opAccountDate: any;\r\n  getLoginName() {\r\n    return this.getUserDetails().Username;\r\n  }\r\n\r\n  /**\r\n   * Sets Access Token\r\n   */\r\n  setAccessToken(data: string) {\r\n    localStorage.setItem('access_token', JSON.stringify(data));\r\n  }\r\n\r\n  /**\r\n   * Gets Access Token\r\n   */\r\n  getAccessToken() {\r\n    return JSON.parse(localStorage.getItem('access_token'));\r\n  }\r\n\r\n  /**\r\n   * Sets Login ID\r\n   */\r\n  setLoginId(data: string) {\r\n    localStorage.setItem('login_id', JSON.stringify(data));\r\n  }\r\n\r\n\r\n  setCookie(key: string, value: string) {\r\n    document.cookie = key + '=' + value + '; path=/;';\r\n  }\r\n  /**\r\n   * Gets Login ID\r\n   */\r\n  getLoginId() {\r\n    return JSON.parse(localStorage.getItem('login_id'));\r\n  }\r\n\r\n  /**\r\n   * Sets User Data to Local Storage\r\n   */\r\n  setUserDetails(json) {\r\n    localStorage.setItem('user_details', JSON.stringify(json));\r\n  }\r\n\r\n  /**\r\n   * Gets User Data from Local Storage\r\n   */\r\n  getUserDetails() {\r\n    return JSON.parse(localStorage.getItem('user_details'));\r\n  }\r\n  getAcrDetails() {\r\n    return JSON.parse(localStorage.getItem('ACR_Details'))\r\n  }\r\n  /**\r\n   * Sets User Data to Local Storage\r\n   */\r\n  setViewAppDashboard(data) {\r\n    localStorage.setItem('view_app_dashboard', data);\r\n  }\r\n\r\n  /**\r\n   * Gets User Data from Local Storage\r\n   */\r\n  getAppDashboard() {\r\n    return localStorage.getItem('view_app_dashboard');\r\n  }\r\n\r\n  hideAppDashboard() {\r\n    localStorage.removeItem('view_app_dashboard');\r\n  }\r\n  /**\r\n   * Gets UTC from Local Storage\r\n   */\r\n  getUTCOffset() {\r\n    return this.getUserDetails().UTCOffset;\r\n  }\r\n\r\n  /**\r\n   * Gets Login ID from Local Storage\r\n   */\r\n  getLoginID() {\r\n    return this.getUserDetails().LoginID;\r\n  }\r\n\r\n  /**\r\n   * Gets Date Format\r\n   */\r\n  getDateFormat() {\r\n    return this.getUserDetails().DateFormat;\r\n  }\r\n\r\n  /**\r\n   * Gets Time Format\r\n   */\r\n  getTimeFormat() {\r\n    return this.getUserDetails().TimeFormat;\r\n  }\r\n\r\n  /**\r\n   * Gets DateTime Format\r\n   */\r\n  getDateTimeFormat() {\r\n    return 'dd-mm-yyyy hh:mm'; //this.getUserDetails().DateFormat + ' ' + this.getUserDetails().TimeFormat;\r\n  }\r\n\r\n  /**\r\n  * Gets default Group id\r\n  */\r\n  getDefaultGroupID() {\r\n    return this.getUserDetails().DefaultGroupID;\r\n  }\r\n\r\n  /**\r\n  * Gets default property id\r\n  */\r\n  getPropertyId() {\r\n    return this.getUserDetails().DefaultPropertyID;\r\n  }\r\n\r\n  getPropertyDetails() {\r\n    // return this.getAcrDetails()[0].PropertyName;\r\n   // return this.getSelectedHotelDetails().HotelName;\r\n   return JSON.parse(localStorage.getItem('property_details'));\r\n  }\r\n\r\n  // Product Licence Starts\r\n\r\n  /**\r\n   * Sets Subscribed Product Details\r\n   */\r\n  setSubscribedProductDetails(data: string) {\r\n    localStorage.setItem('subscribed_products', JSON.stringify(data));\r\n  }\r\n\r\n  /**\r\n   * Gets Subscribed Product Details\r\n   */\r\n  getSubscribedProductDetails() {\r\n    return JSON.parse(localStorage.getItem('subscribed_products'));\r\n  }\r\n\r\n  /**\r\n   * Gets Subscribed Product ID\r\n   */\r\n  getSubscribedProductID() {\r\n    return this.getSubscribedProductDetails().ProductID;\r\n  }\r\n\r\n  /**\r\n   * Sets Selected Hotel Details\r\n   */\r\n  setSelectedHotelDetails(data: any): void {\r\n    window.localStorage.setItem('selected_hotel', JSON.stringify(data));\r\n  }\r\n\r\n  /**\r\n   * Gets Selected Hotel Details\r\n   */\r\n  getSelectedHotelDetails(): any {\r\n    if (!localStorage.getItem('selected_hotel')) return ''\r\n    return JSON.parse(window.localStorage.getItem('selected_hotel'));\r\n  }\r\n\r\n  // Product Licence Ends\r\n\r\n  /**\r\n   * @return Accounting Date\r\n   */\r\n\r\n  getAccountingDate() {\r\n    if (this.queryData == null) {\r\n      this.opAccountDate = this.getSelectedHotelDetails().AccountingDate;\r\n    }\r\n    else {\r\n      this.opAccountDate = this.queryData.uaccdate ? this.queryData.uaccdate : this.getSelectedHotelDetails().AccountingDate;\r\n    }\r\n    return this.opAccountDate;\r\n  }\r\n\r\n  getAccountingDateForAvailability() {\r\n    this.opAccountDate = this.getSelectedHotelDetails().AccountingDate;\r\n    return this.opAccountDate;\r\n  }\r\n\r\n  /**\r\n   * @return Accounting Status\r\n   */\r\n  getAccountingStatus() {\r\n    return \"Pending\";\r\n  }\r\n\r\n  /**\r\n   * @return Pending Date\r\n   */\r\n  getPendingDate() {\r\n    return new Date();\r\n  }\r\n\r\n  /**\r\n   * Clears All Local Storages\r\n   */\r\n  clearAllLocalStorages() {\r\n    window.localStorage.clear();\r\n  }\r\n\r\n  /**\r\n  * Gets Holding Company Code from Local Storage\r\n  */\r\n  getHoldingCompanyCode() {\r\n    return this.getUserDetails().HoldingCompanyCode;\r\n  }\r\n\r\n  /**\r\n  * Gets Holding Company Code from Local Storage\r\n  */\r\n  getUserType() {\r\n    return this.getUserDetails().UserType;\r\n  }\r\n\r\n\r\n  /**\r\n  * Gets Holding Company Code from Local Storage\r\n  */\r\n  getFOMEnabled() {\r\n    return this.getUserDetails().IsFOMEnabled ? this.getUserDetails().IsFOMEnabled : true;\r\n  }\r\n\r\n  /**\r\n  * Gets Holding Company Code from Local Storage\r\n  */\r\n  getCRSEnabled() {\r\n    return this.getUserDetails().IsCRSEnabled ? this.getUserDetails().IsCRSEnabled : false;\r\n  }\r\n\r\n  /**\r\n  * Gets Holding Company Code from Local Storage\r\n  */\r\n  getPrimarySave() {\r\n    return this.getUserDetails().PrimarySave ? this.getUserDetails().PrimarySave : 'FOM'\r\n  }\r\n  /**\r\n * Sets User Role to Local Storage\r\n */\r\n  setUserRoles(json) {\r\n    localStorage.setItem('user_roles', JSON.stringify(json));\r\n  }\r\n\r\n  /**\r\n   * Gets User Role from Local Storage\r\n   */\r\n  getUserRoles() {\r\n    if (localStorage.getItem('user_roles') == undefined || localStorage.getItem('user_roles') == \"undefined\" || localStorage.getItem('user_roles') == null || localStorage.getItem('user_roles') == '')\r\n      return [];\r\n    else\r\n      return JSON.parse(localStorage.getItem('user_roles'));\r\n  }\r\n\r\n  /**\r\n * Sets default group to Local Storage\r\n */\r\n  setDefaultGroupCode(json) {\r\n    localStorage.setItem('default_groupcode', JSON.stringify(json));\r\n  }\r\n  setSelectedDefaultGroupCode(param) {\r\n    localStorage.setItem('sub_default_groupcode', param);\r\n  }\r\n  /**\r\n   * Gets default group from Local Storage\r\n   */\r\n  getDefaultGroupCode() {\r\n    return JSON.parse(localStorage.getItem('default_groupcode')) * 1;\r\n    // return localStorage.getItem('sub_default_groupcode') ? JSON.parse(localStorage.getItem('sub_default_groupcode')) : JSON.parse(localStorage.getItem('default_groupcode'));\r\n  }\r\n\r\n  /**\r\n   * Sets default Property  to Local Storage\r\n   */\r\n  setDefaultPmsCustCode(json) {\r\n    localStorage.setItem('default_pmscustcode', JSON.stringify(json));\r\n  }\r\n  setSelectedDefaultPmsCustCode(param: string = \"\") {\r\n    localStorage.setItem('sub_default_pmscustcode', param);\r\n  }\r\n\r\n  /**\r\n   * Gets default Property from Local Storage\r\n   */\r\n  getDefaultPmsCustCode() {\r\n    // if(this.queryData==null)\r\n    if (!localStorage.getItem('default_pmscustcode')) return ''\r\n    return localStorage.getItem('sub_default_pmscustcode') ? JSON.parse(localStorage.getItem('sub_default_pmscustcode')) : JSON.parse(localStorage.getItem('default_pmscustcode'));\r\n    // else \r\n    // return this.queryData.pms\r\n  }\r\n\r\n  getCookie(name) {\r\n    let value = \"; \" + document.cookie;\r\n    let parts = value.split(\"; \" + name + \"=\");\r\n    return parts.pop().split(\";\").shift();\r\n  }\r\n\r\n  getlocale() {\r\n    if (this.queryData == null) {\r\n      try {\r\n        let x = this.getCookie('locale');\r\n        if (x && x.includes('-'))\r\n          return x.split('-')[0];\r\n        return 'en';\r\n      }\r\n      catch (e) {\r\n        return 'en';\r\n      }\r\n    }\r\n    else\r\n      return this.queryData.ln\r\n  }\r\n  queryParam(myvar) {\r\n    let urls = myvar;\r\n    let myurls = urls.split(\"?\");\r\n    let queryString = myurls[1];\r\n    if (queryString)\r\n      return JSON.parse('{\"' + queryString.replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}')\r\n    else\r\n      return null;\r\n  }\r\n\r\n\r\n  getSkyresConnectionString() {\r\n    return JSON.parse(localStorage.getItem('connection_string'));\r\n  }\r\n\r\n  getThousandSeparator() {\r\n    if (this.getPropertyDetails().ThousandSeparator)\r\n      return this.getPropertyDetails().ThousandSeparator;\r\n    return ',';\r\n    // return this.getPropertyDetails().ThousandSeparator;\r\n  }\r\n  getRateDecimal() {\r\n    if (this.getPropertyDetails().RateDecimal)\r\n      return this.getPropertyDetails().RateDecimal;\r\n    return 2;\r\n    // return this.getPropertyDetails().RateDecimal;\r\n  }\r\n\r\n  getNumberFormat() {\r\n    if (this.getPropertyDetails().NumberFormat)\r\n      return this.getPropertyDetails().NumberFormat;\r\n    return '###,###,###';\r\n    //return this.getPropertyDetails().NumberFormat;\r\n  }\r\n  getShortLogo() {\r\n    if (this.getPropertyDetails().ShortLogo)\r\n      return this.getPropertyDetails().ShortLogo;\r\n      else\r\n      return '';\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'mat-star-rating',\r\n  templateUrl: './star-rating.component.html',\r\n  styleUrls: ['./star-rating.component.scss'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class StarRatingComponent implements OnInit {\r\n\r\n  @Input('rating') private rating: number = 3;\r\n  @Input('starCount') public starCount: number = 5;\r\n  @Input('color') private color: string = 'accent';\r\n  @Output() private ratingUpdated = new EventEmitter();\r\n\r\n  private snackBarDuration: number = 2000;\r\n  public ratingArr = [];\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n \r\n    for (let index = 0; index < this.starCount; index++) {\r\n      this.ratingArr.push(index);\r\n    }\r\n  }\r\n  onClick(rating:number) {\r\n   \r\n    \r\n    this.ratingUpdated.emit(rating);\r\n    return false;\r\n  }\r\n\r\n  showIcon(index:number) {\r\n    if (this.rating >= index + 1) {\r\n      return 'star';\r\n    } else {\r\n      return 'star_border';\r\n    }\r\n  }\r\n\r\n}\r\nexport enum StarRatingColor {\r\n  primary = \"primary\",\r\n  accent = \"accent\",\r\n  warn = \"warn\"\r\n}\r\n","<button mat-icon-button [color]=\"color\" *ngFor=\"let ratingId of ratingArr;index as i\" [id]=\"'star_'+i\" (click)=\"onClick(i+1)\" [matTooltip]=\"ratingId+1\" matTooltipPosition=\"above\">\r\n    <mat-icon>\r\n      {{showIcon(i)}}\r\n    </mat-icon>\r\n  </button>\r\n  <mat-error *ngIf=\"starCount == null || starCount == 0\">\r\n    Star count is <strong>required</strong> and cannot be zero\r\n  </mat-error>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'toggle'\r\n})\r\nexport class TogglePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if(value)\r\n      return \"Yes\";\r\n    else\r\n      return \"No\";\r\n  }\r\n\r\n}\r\n","import { Component, OnInit,Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss']\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  @Input('breadCrumbList') breadCrumbList:string[];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"col s12 col m12 col l12 no-padding\">\r\n    <ul class=\"breadcrumb\">\r\n      <li><a><em class=\"fa fa-home breadcrumb-icon\"></em></a></li> \r\n      <li *ngFor=\"let crumb of breadCrumbList;let last=last\" [ngClass]=\"{'breadcrumb-active':last}\">{{crumb}}</li>\r\n    </ul>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TRANSLATE } from 'src/app/shared/constant/translate';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { WebService } from 'src/app/shared/services/web.service';\nexport interface PeriodicElement {\n  name: string;\n  productName:string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1,productName:\"Fx Front Office Desk\", name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, productName:\"Fx Front Office Desk\",name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, productName:\"Fx Front Office Desk\",name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, productName:\"Fx Front Office Desk\",name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5,productName:\"Fx Front Office Desk\", name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6,productName:\"Fx Front Office Desk\", name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7,productName:\"Fx Front Office Desk\", name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, productName:\"Fx Front Office Desk\",name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, productName:\"Fx Front Office Desk\",name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, productName:\"Fx Front Office Desk\", name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n@Component({\n  selector: 'app-db-connection',\n  templateUrl: './db-connection.component.html',\n  styleUrls: ['./db-connection.component.scss']\n})\nexport class DbConnectionComponent implements OnInit {\n  hide = true;\n  TRANSLATE: any = TRANSLATE['en'];\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n  holdingCompanyList = [];\n  groupList=[];\n  propertyList=[];\n  productData = [];\n\n  public breadCrumb: string[] = [];\n  dbConfigForm: FormGroup = this.formBuilder.group({\n  'products': this.formBuilder.array([]),\n    holdingCompany: [, { validators: [Validators.required], updateOn: \"change\" }],\n    group: [, { validators: [Validators.required], updateOn: \"change\" }],\n    property: [, { validators: [Validators.required], updateOn: \"change\" }]\n    \n  });\n  \n  constructor(private formBuilder: FormBuilder,private webService: WebService, private toast: ToastService){\n\n\n\n  }\n  addProduct(product?: any,isOpen?: any) {\n    let fg = this.formBuilder.group({\n      'live': [product? product.live:''],\n      'username': [product? product.username:''],\n      'password': [product? product.password:''],\n      'dbName': [product? product.dbName:''],\n      'productName': [product? product.productName:''],\n      'productID': [product? product.productID:''],\n      'dbConnectionID': [product? product.dbConnectionID:''],\n     \n    });\n    (<FormArray>this.dbConfigForm.get('products')).push(fg);\n   \n   \n  }\n\n  ngOnInit() {\n    //this.getProductList();\n    this.breadCrumb = [\"Admin\", \"DB Connection Access\"];\n    this.getHoldingCompanyList();\n\n  }\n  getProductList() {\n  \n    this.webService.commonMethod('product/get?pageSize=1000', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n        this.productData = data.data;\n        if (this.productData) {\n          this.productData.forEach(product => {\n            product.dbConnectionID=null;\n            product.productName=product.name;\n            this.addProduct(product);\n          \n          });\n        } else {\n          //this.addProperty(null,true);\n         \n       }\n        }\n        else {\n          this.productData = [];\n          this.toast.error(data.errors);\n        }\n  \n  \n      });\n  }\n  onDelete(traineeId: string)\n  {\n    \n  }\n\n  ngOnDestroy() {\n\n  }\n  getPropertyList(groupID) {\n    this.dbConfigForm.controls.products = new FormArray([]);\n    this.webService.commonMethod('property/getbygroup/' + groupID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          this.propertyList = data.data;\n        }\n        else {\n          this.propertyList = [];\n          this.toast.error(data.errors);\n        }\n\n\n      });\n  }\n  getHoldingCompanyList() {\n\n    this.webService.commonMethod('holdingcompany/get?pageSize=1000', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {         \n         \n         this.holdingCompanyList=data.data;\n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n\n\n      });\n  }\n  getCompanyGroupList(holdingCompanyID) {\n    this.dbConfigForm.controls.products = new FormArray([]);\n    this.webService.commonMethod('group/getbycompany/' + holdingCompanyID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          this.groupList = data.data;\n\n       \n\n\n\n        } else {\n          this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getProductByProperty(PropertyID) {\n    \n    this.webService.commonMethod('dbconnection/GetByProperty/' + PropertyID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          this.productData = data.data;\n          this.dbConfigForm.controls.products = new FormArray([]);\n          if (this.productData.length>0) {\n            this.productData.forEach(product => {\n              this.addProduct(product);\n            \n            });\n          } else {\n            this.getProductList();\n          }  \n       \n\n\n\n        } else {\n          this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getControls() {\n    return (this.dbConfigForm.get('products') as FormArray).controls;\n  }\n  onSubmit(formValue) {\n\n    if (this.dbConfigForm.valid) {\n      var products = [];\n      for (let control of this.dbConfigForm.get('products')['controls']) {\n      var dbConnectionID=0;\n      if(control.controls[\"dbConnectionID\"].value!=null){\n        dbConnectionID=control.controls[\"dbConnectionID\"].value;\n      }\n          var productData = {\n            \"HoldingCompanyID\": this.dbConfigForm.controls[\"holdingCompany\"].value,\n            \"GroupID\": this.dbConfigForm.controls[\"group\"].value,\n            \"PropertyID\": this.dbConfigForm.controls[\"property\"].value,\n            \"ProductID\": control.controls[\"productID\"].value,\n            \"Live\": control.controls[\"live\"].value,\n            \"Username\": control.controls[\"username\"].value,\n            \"Password\": control.controls[\"password\"].value,\n            \"DBName\": control.controls[\"dbName\"].value,\n            \"DBConnectionID\": dbConnectionID,\n            \"CreatedBy\": \"Sirojan\",\n            \"IsDeleted\": false,\n            \"ModifiedBy\": \"Sirojan\"\n  \n          }\n          products.push(productData);\n       \n      }\n      this.webService.commonMethod('dbconnection/post', {'DBConnections':products}, 'POST', null)\n        .subscribe(data => {\n          if (data.succeeded) {\n\n            this.toast.success(\"Success Fully Saved\");\n          }\n          else {\n            this.toast.error(data.errors);\n          }\n        });\n    }\n  }\n}\n","\n<div>\n    <h1 class=\"page_heading margin-padding-none\">{{TRANSLATE.GEM.DB_CON_Title}}</h1>\n    <app-breadcrumb [breadCrumbList]=\"breadCrumb\"></app-breadcrumb>\n</div>\n\n<form [formGroup]=\"dbConfigForm\" (ngSubmit)=\"onSubmit(dbConfigForm.value)\">\n\n\n<div class=\"db-config\"  fxLayout=\"column wrap\">\n    \n\n   \n    <div fxFlex=\"100%\" fxLayout=\"row wrap\">\n\n        <br>\n          <mat-card fxFlex=\"100%\" fxLayout=\"row wrap\" style=\"padding: 16px 0px !important;\">\n\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" >\n                <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\" style=\"padding: 10px;\">\n                    <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\n                        <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\n                            <mat-label>HoldingCompany</mat-label>\n                            <mat-select placeholder=\"Select Company\" (selectionChange)=\"getCompanyGroupList($event.value)\" formControlName=\"holdingCompany\">\n                              \n                              <mat-option *ngFor=\"let holdingCompany of holdingCompanyList\" [value]=\"holdingCompany.holdingCompanyID\">{{holdingCompany.name}}</mat-option>\n                            \n                          </mat-select>\n        \n                          <mat-error\n                          *ngIf=\"dbConfigForm.get('holdingCompany').hasError('required')\">\n                          Company is <strong>required</strong>\n                        </mat-error>\n                    \n                  \n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>Group</mat-label>\n                            <mat-select placeholder=\"Select Group\" (selectionChange)=\"getPropertyList($event.value)\" formControlName=\"group\">\n                             \n                                <mat-option *ngFor=\"let group of groupList\" [value]=\"group.groupID\">{{group.name}}</mat-option>\n                            </mat-select>\n                                  <mat-error\n                          *ngIf=\"dbConfigForm.get('group').hasError('required')\">\n                          Group is <strong>required</strong>\n                        </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\n                        <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                            <mat-label>Property</mat-label>\n                            <mat-select placeholder=\"Select Property\" formControlName=\"property\" (selectionChange)=\"getProductByProperty($event.value)\">                      \n                                <mat-option *ngFor=\"let property of propertyList\" [value]=\"property.propertyID\">{{property.name}}</mat-option>\n                            </mat-select>\n                            <mat-error\n                            *ngIf=\"dbConfigForm.get('property').hasError('required')\">\n                            Property is <strong>required</strong>\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                    \n                    </div>\n                    <div fxFlex=\"100%\"  fxLayout=\"row wrap\"  class=\"form-input-row\"  *ngIf=\"dbConfigForm.controls.products['controls'].length > 0\">\n            <h2 style=\"padding:0px 20px;\">Product List</h2>\n          \n              <div fxFlex=\"100%\" class=\"DBheader\" fxLayout=\"row wrap\">\n<div fxFlex=\"20%\">\n    Product\n</div>\n<div fxFlex=\"20%\">\n    Live\n</div>\n<div fxFlex=\"20%\">\n    Username\n</div>\n<div fxFlex=\"20%\">\n    Password\n</div>\n<div fxFlex=\"20%\">\n    DBName\n</div>\n              </div>\n              <div formArrayName=\"products\" fxFlex=\"100%\">\n\n              \n              <div  *ngFor=\"let product of dbConfigForm.controls.products['controls']; let i = index\" formGroupName=\"{{i}}\"  class=\"DBRow\" fxLayout=\"row wrap\">\n                <div fxFlex=\"20%\">\n                    <div style=\"margin: 10px 20px;\">\n                        {{product.controls['productName'].value}}\n                    </div>\n                  \n                </div>\n                <div fxFlex=\"20%\">\n                    <mat-form-field  floatLabel=\"always\"> \n                        <mat-label></mat-label>\n                       \n                        <input matInput #input placeholder=\"Live\" formControlName=\"live\">\n                      \n                    \n                        <!-- <mat-error\n                        *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\n                        CheckIn  is <strong>required</strong>\n                        </mat-error> -->\n                        \n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"20%\">\n                    <mat-form-field  floatLabel=\"always\"> \n                        <mat-label></mat-label>\n                       \n                        <input matInput #input placeholder=\"Username\" formControlName=\"username\">\n                      \n                    \n                        <!-- <mat-error\n                        *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\n                        CheckIn  is <strong>required</strong>\n                        </mat-error> -->\n                        \n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"20%\">\n                    <mat-form-field  floatLabel=\"always\"> \n                        <mat-label></mat-label>\n                       \n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n                        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                        <!-- <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> -->\n                        </button>\n                      \n                    \n                        <!-- <mat-error\n                        *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\n                        CheckIn  is <strong>required</strong>\n                        </mat-error> -->\n                        \n                    </mat-form-field> \n                </div>\n                <div fxFlex=\"20%\">\n                    <mat-form-field  floatLabel=\"always\"> \n                        <mat-label></mat-label>\n                       \n                        <input matInput #input placeholder=\"DBName\" formControlName=\"dbName\">\n                      \n                    \n                        <!-- <mat-error\n                        *ngIf=\"property['controls'].propertyCheckIn.hasError('required')\">\n                        CheckIn  is <strong>required</strong>\n                        </mat-error> -->\n                        \n                    </mat-form-field>\n                </div>\n                              </div>\n                            </div>\n              </div>\n            </div>\n              <br>\n         \n              </mat-card>\n    <p>&nbsp;</p>\n\n</div>\n    <!-- numbersOnly -->\n \n    \n    <mat-card>\n        <div fxLayout=\"row wrap\" fxFlex=\"100%\"  fxLayoutAlign=\"end end\" fxLayoutGap=\"3% grid\">\n            \n            \n            <div fxFlex=\"10%\" fxFlex.xs=\"50%\">\n                <button  mat-button  class=\"border btnProperty\">Back</button>\n            </div>\n            <div fxFlex=\"10%\" fxFlex.xs=\"50%\">\n                <button type=\"submit\"  mat-button class=\"button btnProperty\">Save</button>\n            </div>\n           \n          \n        </div>\n      </mat-card>\n</div>\n</form>\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { DatabaseComponent } from './pages/database/database.component';\r\nimport { PropertyComponent } from './pages/property/property.component';\r\n\r\nimport { SampleComponent } from './pages/sample/sample.component';\r\nimport { UserComponent } from './pages/user/user.component';\r\nimport { DbConnectionComponent } from './pages/user/db-connection/db-connection.component';\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'sample' },\r\n  { path: 'sample', component: SampleComponent},\r\n  { path: 'property', component: PropertyComponent},\r\n  { path: 'user', component: UserComponent},\r\n  { path: 'database', component: DatabaseComponent},\r\n  { path: 'DBConfig', component: DbConnectionComponent},\r\n\r\n  { path: '**', pathMatch: 'full', redirectTo: 'sample' }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      preloadingStrategy: PreloadAllModules\r\n    }),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const routingComponents = [\r\n];\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nexport interface CompanyData {\r\n  holdingCompanyID: string;\r\n  holdingCompanyName: string;\r\n}\r\n@Component({\r\n  selector: 'app-edit-holdingcompany',\r\n  templateUrl: './edit-holdingcompany.component.html',\r\n  styleUrls: ['./edit-holdingcompany.component.scss']\r\n})\r\nexport class EditHoldingcompanyComponent implements OnInit {\r\n  editCompanyForm: FormGroup = this.formBuilder.group({\r\n    holdingCompanyName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    holdingCompanyCode: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    holdingCompanyAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    holdingCompanyCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n    holdingCompanyState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n    holdingCompanyCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\r\n    holdingCompanyPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    holdingCompanyPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n\r\n  });\r\n  holdingCompanyData: CompanyData;\r\n  country: any = 0;\r\n  city: any = 0;\r\n  state: any = 0;\r\n  public cityList: any = [];\r\n  public stateList: any = [];\r\n  public countryList: any = [];\r\n  constructor(public dialogRef: MatDialogRef<EditHoldingcompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public _holdingCompanyData: CompanyData, private webService: WebService, private toast: ToastService, private formBuilder: FormBuilder) {\r\n    this.holdingCompanyData = _holdingCompanyData;\r\n    this.getHoldingCompanyData(_holdingCompanyData.holdingCompanyID);\r\n\r\n    this.getCountryList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  close(): void {\r\n\r\n    this.dialogRef.close({ event: 'close', data: null });\r\n  }\r\n  getCityList(stateID: string, isInitial: boolean) {\r\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.cityList = data.data;\r\n          if (!isInitial) {\r\n            this.editCompanyForm.get('holdingCompanyCity').setValue(0);\r\n          }\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n\r\n      });\r\n  }\r\n\r\n  getCountryList() {\r\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.countryList = data.data;\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  getStateList(countryID: string, isInitial: boolean) {\r\n    this.cityList = [];\r\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n          this.stateList = data.data;\r\n\r\n          if (!isInitial) {\r\n         \r\n            this.editCompanyForm.get('holdingCompanyCity').setValue(0);\r\n            this.editCompanyForm.get('holdingCompanyState').setValue(0);\r\n          }\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n          this.stateList = [];\r\n        }\r\n\r\n\r\n\r\n      });\r\n  }\r\n  getHoldingCompanyData(holdingCompanyID) {\r\n    this.webService.commonMethod('holdingcompany/get/' + holdingCompanyID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n\r\n          this.editCompanyForm.get('holdingCompanyCode').setValue(data.data.code);\r\n          this.editCompanyForm.get('holdingCompanyName').setValue(data.data.name);\r\n          this.editCompanyForm.get('holdingCompanyAddress').setValue(data.data.address);\r\n          this.editCompanyForm.get('holdingCompanyCountry').setValue(data.data.countryId);\r\n\r\n          this.editCompanyForm.get('holdingCompanyState').setValue(data.data.stateId);\r\n\r\n          this.editCompanyForm.get('holdingCompanyCity').setValue(data.data.cityId);\r\n          this.getStateList(data.data.countryId, true);\r\n          this.getCityList(data.data.stateId, true);\r\n          this.editCompanyForm.get('holdingCompanyPinZip').setValue(data.data.zipCode);\r\n          this.editCompanyForm.get('holdingCompanyPhone').setValue(data.data.phoneNumber);\r\n\r\n\r\n        }\r\n        else {\r\n          this.toast.error(data.errors);\r\n        }\r\n\r\n      });\r\n  }\r\n  submitForm(): void {\r\n    \r\n    if (this.editCompanyForm.valid) {\r\n      \r\n      var postData = {\r\n        \"HoldingCompanyID\": this.holdingCompanyData.holdingCompanyID,\r\n        \"Name\": this.editCompanyForm.controls['holdingCompanyName'].value,\r\n        \"Code\": this.editCompanyForm.controls['holdingCompanyCode'].value,\r\n        \"CityId\": this.editCompanyForm.controls['holdingCompanyCity'].value,\r\n        \"StateId\": this.editCompanyForm.controls['holdingCompanyState'].value,\r\n        \"CountryId\": this.editCompanyForm.controls['holdingCompanyCountry'].value,\r\n        \"ZipCode\": this.editCompanyForm.controls['holdingCompanyPinZip'].value,\r\n        \"PhoneNumber\": this.editCompanyForm.controls['holdingCompanyPhone'].value,\r\n        \"Address\": this.editCompanyForm.controls['holdingCompanyAddress'].value,\r\n        \"ModifiedBy\": \"Sirojan\",\r\n\r\n      }\r\n      this.webService.commonMethod('holdingcompany/put/' + this.holdingCompanyData.holdingCompanyID, postData, 'PUT', null)\r\n        .subscribe(data => {\r\n          if (data.succeeded) {\r\n            if (data.data == 0) {\r\n              this.toast.error(\"Code Must be unique\");\r\n            }\r\n            else if (data.data = 1) {\r\n              this.dialogRef.close({ event: 'close', data: 1 });\r\n            }\r\n\r\n          }\r\n          else {\r\n\r\n            this.toast.error(data.errors);\r\n          }\r\n\r\n\r\n\r\n        });\r\n    } else {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editCompanyForm\" #editForm=\"ngForm\" (ngSubmit)=\"submitForm()\">\r\n<h2 mat-dialog-title>\r\n    <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\r\n<div fxFlex=\"70%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Holding Company</div>\r\n<div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"headerAction\">\r\n    <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"cancelcontainer\">\r\n        <div fxFlex=\"100%\">\r\n            <i class=\"fas fa-times themecolor cancelicon\" (click)=\"close()\" ></i>\r\n        </div>\r\n        <div fxFlex=\"100%\" class=\"headercanceltext\" (click)=\"close()\">\r\n            Cancel\r\n        </div>\r\n     \r\n    </div>\r\n    <div fxFlex=\"33%\"  fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100%\">\r\n           <i class=\"far fa-check-circle themecolor saveicon\" (click)=\"editForm.submitted = true; editForm.ngSubmit.emit()\"></i>\r\n        </div>\r\n        <div fxFlex=\"100%\" class=\"headersavetext\" (click)=\"editForm.submitted = true; editForm.ngSubmit.emit()\">\r\n           Save\r\n        </div>\r\n      \r\n    </div>\r\n    <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"disablecontainer\">\r\n        <div fxFlex=\"100%\">\r\n            <i class=\"far fa-trash-alt  deleteicon\"></i>\r\n        </div>\r\n        <div fxFlex=\"100%\" class=\"e_headerdeletetext\">\r\n            Delete\r\n        </div>\r\n      \r\n    </div>\r\n    \r\n   </div>\r\n    </div>\r\n   \r\n</h2>\r\n\r\n\r\n    <mat-dialog-content  class=\"mat-typography\">\r\n    \r\n      <div>\r\n        <div class=\"content-0\">\r\n          \r\n         \r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Code</mat-label>\r\n                    <input matInput  placeholder=\"Code\" formControlName=\"holdingCompanyCode\" readonly >\r\n                    <mat-error\r\n                    *ngIf=\"editCompanyForm.get('holdingCompanyCode').hasError('required')\">\r\n                    Code is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput #input placeholder=\"Name\" formControlName=\"holdingCompanyName\" maxlength=\"100\">\r\n                    <mat-error\r\n                    *ngIf=\"editCompanyForm.get('holdingCompanyName').hasError('required')\">\r\n                    Name is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"48%\" fxFlex.xs=\"100%\" >\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Address</mat-label>\r\n                    <input matInput #input placeholder=\"Address\" formControlName=\"holdingCompanyAddress\" maxlength=\"100\">\r\n                    <mat-error\r\n                    *ngIf=\"editCompanyForm.get('holdingCompanyAddress').hasError('required')\">\r\n                    Address is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"content\">\r\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"form-input-row\">\r\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" >\r\n                    <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\r\n                        <mat-label>Country</mat-label>\r\n                        <mat-select [(ngModel)]=\"country\" (selectionChange)=\"getStateList($event.value,false)\" formControlName=\"holdingCompanyCountry\">\r\n                             <mat-option  [value]=\"0\">Select Country</mat-option>\r\n                          <mat-option *ngFor=\"let country of countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\r\n                        \r\n                      </mat-select>\r\n    \r\n                      <mat-error\r\n                      *ngIf=\"editCompanyForm.get('holdingCompanyCountry').hasError('min')\">\r\n                      Country is <strong>required</strong>\r\n                    </mat-error>\r\n                \r\n              \r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                        <mat-label>State</mat-label>\r\n                        <mat-select [(ngModel)]=\"state\" (selectionChange)=\"getCityList($event.value,false)\" formControlName=\"holdingCompanyState\">\r\n                          <mat-option  [value]=\"0\">Select State</mat-option>\r\n                            <mat-option *ngFor=\"let state of stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\r\n                        </mat-select>\r\n                              <mat-error\r\n                      *ngIf=\"editCompanyForm.get('holdingCompanyState').hasError('min')\">\r\n                      State is <strong>required</strong>\r\n                    </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                        <mat-label>City</mat-label>\r\n                        <mat-select [(ngModel)]=\"city\" formControlName=\"holdingCompanyCity\">\r\n                          <mat-option  [value]=\"0\">Select City</mat-option>\r\n                            <mat-option *ngFor=\"let city of cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                        *ngIf=\"editCompanyForm.get('holdingCompanyCity').hasError('min')\">\r\n                        City is <strong>required</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"22%\" fxFlex.xs=\"100%\">\r\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                        <mat-label>Pin/Zip</mat-label>\r\n                        <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"holdingCompanyPinZip\" maxlength=\"20\">\r\n                        <mat-error\r\n                        *ngIf=\"editCompanyForm.get('holdingCompanyPinZip').hasError('required')\">\r\n                        PinZip is <strong>required</strong>\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n    </div>\r\n    <div class=\"content\">\r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\r\n            \r\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input matInput #input placeholder=\"Phone Number\" formControlName=\"holdingCompanyPhone\" numbersOnly maxlength=\"20\"> \r\n                    <mat-error\r\n                    *ngIf=\"editCompanyForm.get('holdingCompanyPhone').hasError('required')\">\r\n                    Phone Number is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n    </div>\r\n    \r\n      \r\n    \r\n    </div>\r\n    \r\n    </mat-dialog-content>\r\n</form>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { WebService } from 'src/app/shared/services/web.service';\r\nimport  *  as  access  from  'src/app/shared/data/access.json'; \r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-single-property',\r\n  templateUrl: './single-property.component.html',\r\n  styleUrls: ['./single-property.component.scss']\r\n})\r\nexport class SinglePropertyComponent implements OnInit {\r\n  DataArray = [];\r\n  groupList=[];\r\n  propertyList=[];\r\n  productList=[];\r\n  accessList= (access  as  any).default;\r\n  public formDummyData = [\r\n    {\r\n      name: 'akassh',\r\n      product: ['9517532486', '9517532684']\r\n    },\r\n    {\r\n      name: 'jain',\r\n      product: ['9517532486', '9517532684']\r\n    }\r\n  ];\r\n  public form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder,private webService: WebService, private toast: ToastService,public dialogRef: MatDialogRef<SinglePropertyComponent>) {\r\n    this.form = fb.group({\r\n      'property': fb.array([]),\r\n      defaultGroupName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n      defaultPropertyName: [, { validators: [Validators.required], updateOn: \"change\" }],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.formDummyData) {\r\n      this.formDummyData.forEach(user => {\r\n        this.addProperty(user,true);\r\n      \r\n      });\r\n    } else {\r\n      this.addProperty(null,true);\r\n     \r\n   }\r\n    this.getCompanyGroupList(35);\r\n    this.getProductList();\r\n  }\r\n\r\n\r\n  addProduct(propertyIndex: number, data?: any) {\r\n    console.log('userIndex', propertyIndex, '-------', 'data', data);\r\n    let fg = this.fb.group({\r\n      'productCtrl': ['', Validators.compose([Validators.required])],\r\n      'access': ['', Validators.compose([Validators.required])],\r\n    });\r\n    (<FormArray>(<FormGroup>(<FormArray>this.form.controls['property'])\r\n      .controls[propertyIndex]).controls['products']).push(fg);\r\n\r\n  }\r\n\r\n  deleteProduct(propertyIndex: number, index: number) {\r\n    console.log('userIndex', propertyIndex, '-------', 'index', index);\r\n    (<FormArray>(<FormGroup>(<FormArray>this.form.controls['property'])\r\n      .controls[propertyIndex]).controls['products']).removeAt(index);\r\n  }\r\n\r\n  addProperty(property?: any,isOpen?: any) {\r\n    let fg = this.fb.group({\r\n      'group': ['', Validators.compose([Validators.required])],\r\n      'property': ['', Validators.compose([Validators.required])],\r\n      'products': this.fb.array([]),\r\n    });\r\n    (<FormArray>this.form.get('property')).push(fg);\r\n    this.DataArray.push({\r\n          \r\n      propertyList:[],\r\n      PanelOpenState:isOpen,\r\n\r\n    })\r\n    let propertyIndex = (<FormArray>this.form.get('property')).length - 1;\r\n    if (!property) {\r\n      this.addProduct(propertyIndex);\r\n    }\r\n    else {\r\n      property.product.forEach(product => {\r\n        this.addProduct(propertyIndex, product);\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteProperty(index: number) {\r\n    (<FormArray>this.form.get('property')).removeAt(index);\r\n    this.DataArray.splice(index,1);\r\n  }\r\n\r\n  onCancle() {\r\n    this.form.reset();\r\n    console.log(this.form, this.form.value);\r\n  }\r\n\r\n  onSubmit(formValue) {\r\n \r\n    if (this.form.valid) {\r\n      var products = [];\r\n      for (let control of this.form.get('property')['controls']) {\r\n        for(let prdControl of control.get('products')['controls']){\r\n          var productData = {\r\n            \"UserID\": 11,\r\n            \"GroupID\": control.controls[\"group\"].value,\r\n            \"PropertyID\": control.controls[\"property\"].value,\r\n            \"ProductID\": prdControl.controls[\"productCtrl\"].value,\r\n            \"AccessID\": prdControl.controls[\"access\"].value,\r\n            \"CreatedBy\": \"Sirojan\",\r\n            \"IsDeleted\": false,\r\n            \"ModifiedBy\": \"Sirojan\"\r\n  \r\n          }\r\n          products.push(productData);\r\n        }\r\n      }\r\n      var reqData={\"UserProducts\": products,\"DefaultGroupID\":this.form.controls[\"defaultGroupName\"].value,\r\n                  \"DefaultPropertyID\":this.form.controls[\"defaultPropertyName\"].value,UserID:11};\r\n                  console.log(reqData);\r\n    \r\n      this.webService.commonMethod('userproduct/post', reqData, 'POST', null)\r\n        .subscribe(data => {\r\n          if (data.succeeded) {\r\n\r\n            this.dialogRef.close({ event: 'close', data: null });\r\n          }\r\n          else {\r\n            this.toast.error(data.errors);\r\n          }\r\n        });\r\n      \r\n    }\r\n    else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n  getCompanyGroupList(holdingCompanyID) {\r\n    this.webService.commonMethod('group/getbycompany/' + holdingCompanyID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n           this.groupList= data.data;\r\n        } else {\r\n          this.toast.error(data.errors);\r\n        }\r\n  \r\n      });\r\n  }\r\n  getPropertyList(groupID:any,index:any) {\r\n  \r\n    this.webService.commonMethod('property/getbygroup/' + groupID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n        this.DataArray[index].propertyList = data.data;\r\n        }\r\n        else {\r\n          //this.propertyData = [];\r\n          this.toast.error(data.errors);\r\n        }\r\n  \r\n  \r\n      });\r\n  }\r\n  getProductList() {\r\n  \r\n    this.webService.commonMethod('product/get/', null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n        this.productList = data.data;\r\n        }\r\n        else {\r\n          this.productList = [];\r\n          this.toast.error(data.errors);\r\n        }\r\n  \r\n  \r\n      });\r\n  }\r\n  getPropertyListParent(groupID) {\r\n\r\n    this.webService.commonMethod('property/getbygroup/' + groupID, null, 'GET', null)\r\n      .subscribe(data => {\r\n        if (data.succeeded) {\r\n        this.propertyList = data.data;\r\n        }\r\n        else {\r\n          //this.propertyData = [];\r\n          this.toast.error(data.errors);\r\n        }\r\n  \r\n  \r\n      });\r\n  }\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close({ event: 'close', data: null });\r\n  }\r\n  \r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\" class=\"form-horizontal\">\r\n  <mat-dialog-content  class=\"mat-typography link-property-content\">\r\n    \r\n    <div>\r\n      <div class=\"content\">\r\n        <div fxFlex=\"100%\" fxLayoutAlign=\"center center\">\r\n          <ul style=\"margin-top: 0px;\">\r\n            <li><div>1</div><div class=\"steptext\">User Details</div></li>\r\n            <li class=\"active\"><div>2</div><div class=\"steptext\">Link Property / Product</div></li>\r\n          \r\n          </ul>  \r\n        </div>\r\n      </div>\r\n      <div class=\"content\" style=\"margin-top: 15px;\">\r\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\r\n            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" fxLayout=\"row wrap\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\r\n                <div fxFlex=\"100%\">\r\n                    <b>Link Property/ Product for John Lee</b>\r\n                </div>\r\n                <div fxFlex=\"100%\">\r\n                  <span class=\"lable_txt\">Holding Company</span><br/>\r\n                  Hyaat Regency\r\n              </div>\r\n                  \r\n              </div>\r\n              <div fxFlex=\"73.8%\" fxFlex.xs=\"100%\"  fxLayout=\"row wrap\"   fxLayoutAlign=\"end\" style=\"background:#f5f5f5;padding: 10px;\">\r\n                  <div fxFlex=\"100%\">\r\n<b>Select Default</b>\r\n                  </div>\r\n                  <div fxFlex=\"100%\" fxLayoutGap=\"10px\" fxLayout.lt-sm=\"column\" >\r\n                      <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\" > \r\n                              <mat-label>Group</mat-label>\r\n                              <mat-select placeholder=\"Select Default Group\" formControlName=\"defaultGroupName\" (selectionChange)=\"getPropertyListParent($event.value)\">\r\n                           \r\n                                <mat-option *ngFor=\"let group of groupList\" [value]=\"group.groupID\">{{group.name}}</mat-option>\r\n                            </mat-select>\r\n                              <mat-error\r\n                              *ngIf=\"form.get('defaultGroupName').hasError('required')\">\r\n                              Default Group  is <strong>required</strong>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                          <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\" > \r\n                              <mat-label>Property</mat-label>\r\n                              <mat-select placeholder=\"Select Default Property\"  formControlName=\"defaultPropertyName\">\r\n                           \r\n                                <mat-option *ngFor=\"let property of propertyList\" [value]=\"property.propertyID\">{{property.name}}</mat-option>\r\n                            </mat-select>\r\n                            <mat-error\r\n                            *ngIf=\"form.get('defaultPropertyName').hasError('required')\">\r\n                            Default Property  is <strong>required</strong>\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                  </div>\r\n          \r\n               \r\n            </div>\r\n              \r\n            </div>\r\n      </div>\r\n      <div formArrayName=\"property\">\r\n        <mat-accordion *ngFor=\"let property of form.controls.property['controls']; let i = index\" formGroupName=\"{{i}}\">\r\n    \r\n                <mat-expansion-panel [expanded]=\"DataArray[i].PanelOpenState\" (opened)=\"DataArray[i].PanelOpenState = true\"\r\n                (closed)=\"DataArray[i].PanelOpenState = false\"  hideToggle=\"true\" class=\"mat-elevation-z0\"  >\r\n                                   \r\n                  <mat-expansion-panel-header #panelH (click)=\"panelH._toggle()\" class=\"disable_hover\">\r\n                    <mat-panel-title>\r\n              \r\n              <div class=\"content\" (click)=\"panelH._toggle()\">\r\n                <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\r\n                    <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\r\n                        <b>Link {{i+1}}</b> - Hyaat Regency Banglore       \r\n                      </div>\r\n                      <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\r\n                        <i  *ngIf=\"form.controls.property.controls.length > 1\" (click)=\"deleteProperty(i)\" class=\"far fa-trash-alt themecolor iconSize moreicon\" style=\"margin-right: 10%;\"></i>\r\n                        <i  *ngIf=\"DataArray[i].PanelOpenState\" class=\"fas fa-angle-up themecolor iconSize moreicon\"></i>\r\n                        <i  *ngIf=\"!DataArray[i].PanelOpenState\" class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\r\n                    \r\n                       \r\n                    </div>\r\n                      \r\n                    </div>\r\n              </div>\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <div fxFlex=\"100%\" fxLayout=\"row wrap\">\r\n    \r\n          \r\n          <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n            <div fxFlex=\"45%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Group</mat-label>\r\n                    <mat-select placeholder=\"Select Group\" (selectionChange)=\"getPropertyList($event.value,i)\" formControlName=\"group\">\r\n                      <mat-option *ngFor=\"let group of groupList\" [value]=\"group.groupID\">{{group.name}}</mat-option>\r\n                      \r\n                  </mat-select>\r\n                  <mat-error\r\n                  *ngIf=\"property.get('group').hasError('required')\">\r\n                   Group  is <strong>required</strong>\r\n                </mat-error>\r\n                   \r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"45%\" fxFlex.xs=\"100%\">\r\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                    <mat-label>Property</mat-label>\r\n                    <mat-select placeholder=\"Select\" formControlName=\"property\">\r\n                      <mat-option *ngFor=\"let property of DataArray[i].propertyList\" [value]=\"property.propertyID\">{{property.name}}</mat-option>\r\n                      \r\n                  </mat-select>\r\n                  <mat-error\r\n                  *ngIf=\"property.get('property').hasError('required')\">\r\n                   Property  is <strong>required</strong>\r\n                </mat-error>\r\n          \r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        \r\n        <div fxFlex=\"90%\"  fxLayout=\"row wrap\" formArrayName=\"products\">\r\n          <div fxFlex=\"100%\" style=\"margin-bottom: 10px;\">\r\n            <b>Add Products</b>\r\n          </div>\r\n          <div fxFlex=\"100%\" *ngFor=\"let product of property.controls.products.controls; let j = index\" formGroupName=\"{{j}}\"  style=\"background-color: #F8F8F8;padding:10px;margin-bottom: 5px;\" fxLayoutGap=\"15px\"    >\r\n    \r\n          \r\n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\" > \r\n                  <mat-label>Product</mat-label>\r\n                  <mat-select placeholder=\"Select Product\" formControlName=\"productCtrl\">\r\n                    <mat-option *ngFor=\"let produtcObj of productList\" [value]=\"produtcObj.productID\">{{produtcObj.name}}</mat-option>\r\n                \r\n                </mat-select>\r\n                <mat-error\r\n                *ngIf=\"product.get('productCtrl').hasError('required')\">\r\n                 Product  is <strong>required</strong>\r\n              </mat-error>\r\n          \r\n              </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \r\n                  <mat-label>DB Access</mat-label>\r\n                  <mat-select placeholder=\"Select\" formControlName=\"access\">\r\n               \r\n                    <mat-option *ngFor=\"let access of accessList\" [value]=\"access.accessID\">{{access.name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error\r\n                *ngIf=\"product.get('access').hasError('required')\">\r\n                 Access  is <strong>required</strong>\r\n              </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"10%\" fxFlex.xs=\"50%\" fxLayout=\"row wrap\" *ngIf=\"property.controls.products.controls.length > 1\" (click)=\"deleteProduct(i,j)\">\r\n            <div fxFlex=\"100%\" fxLayoutAlign=\"end start\">\r\n              <i  class=\"far fa-trash-alt themecolor iconSize moreicon fxcursor_pointer\"  style=\"margin-right: 15px;\"></i>\r\n          </div>\r\n          <div fxFlex=\"100%\" fxLayoutAlign=\"end start\" class=\"themecolor fxcursor_pointer\">\r\n             Delete\r\n          </div>\r\n         \r\n           \r\n        </div>\r\n        <div fxFlex=\"10%\" fxFlex.xs=\"50%\" fxLayout=\"row wrap\" *ngIf=\"property.controls.products.controls.length == (j+1)\" (click)=\"addProduct(i)\">\r\n          <div fxFlex=\"100%\" fxLayoutAlign=\"end start\">\r\n            <i  class=\"fas fa-plus themecolor iconSize moreicon fxcursor_pointer\" style=\"margin-right: 15px;\"></i>\r\n        </div>\r\n        <div fxFlex=\"100%\" fxLayoutAlign=\"end start\" class=\"themecolor fxcursor_pointer\"  >\r\n           <span style=\"margin-right: 10px\">Add</span>\r\n        </div>\r\n       \r\n         \r\n      </div>\r\n      </div>\r\n      \r\n      </div>\r\n    </div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n        </div>\r\n    \r\n        <div class=\"content\">\r\n            <div fxFlex=\"100%\" fxLayoutAlign=\"end start\">\r\n              <div class=\"icon btnusercreate fxcursor_pointer\" (click)=\"addProperty()\" id=\"bigplus\"  style=\"padding:0px 32px;\"></div>\r\n             </div>\r\n           </div>\r\n\r\n\r\n\r\n  \r\n  </div>\r\n  \r\n\r\n  \r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n      <button  mat-button type=\"button\" class=\"border btnProperty\" (click)=\"onNoClick()\">Back</button>\r\n      <button  mat-button class=\"button btnProperty\" type=\"submit\" >Save & Continue</button>\r\n      <button  mat-button class=\"button btnProperty\" type=\"submit\">Save</button>\r\n   \r\n  </mat-dialog-actions>\r\n\r\n\r\n</form>","import { StarRatingColor } from 'src/app/shared/star-rating/star-rating.component';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatIconRegistry } from '@angular/material/icon/icon-registry';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { WebService } from 'src/app/shared/services/web.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport  *  as  dayList  from  'src/app/shared/data/day.json';\nexport interface PropertyData {\n  propertyID: string;\n  propertyName: string;\n  groupID:string;\n  groupName:string;\n  holdingCompanyID:string;\n  holdingCompanyName:string;\n  propertyIndex:number;\n\n}\nexport interface NetworkIP {\n  name: string;\n}\nexport interface MacID {\n  name: string;\n}\n@Component({\n  selector: 'app-edit-property',\n  templateUrl: './edit-property.component.html',\n  styleUrls: ['./edit-property.component.scss']\n})\nexport class EditPropertyComponent implements OnInit {\n\n  form: FormGroup;\n  \n  items = [];\n  rating: number = 4;\n  starCount: number = 5;\n  starColor: StarRatingColor = StarRatingColor.primary;\n  starColorP: StarRatingColor = StarRatingColor.primary;\n  starColorW: StarRatingColor = StarRatingColor.warn;\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n \n  countryList = [];\n  currencyList=[];\n  dayList=(dayList  as  any).default;\n  \n  hotelTypeList=[];\n  cityList = [];\n  stateList = [];\n  formGroup: FormGroup;\n  propertyData: PropertyData;\n  DataObj = {\n\n    countryList: this.countryList,\n    stateList: [],\n    cityList: [],\n    \n    propertyState:0,\n    propertyCity:0,\n    propertyCountry:0,\n    dayList:this.dayList,\n    currencyList:this.currencyList,\n    propertyCurrency:[],\n    propertyOtherCurrency:[],\n    propertyWeekends:[],\n    propertyWeekDays:[],\n    propertyHotelType:0,\n    \n    networkIPs:[],\n    \n    rating:0,\n    hotelTypeList:this.hotelTypeList,\n    macIDs:[]\n  };\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n \n  value = this.fb.group({\n\n  });\n  public validate(): void {\n   \n    this.formGroup = this.fb.group({\n      propertyName: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyCode: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyAddress: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyCountry: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n      propertyState: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n      propertyCity: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n      propertyPinZip: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyPhone: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyHotelType: [0, { validators: [Validators.min(1)], updateOn: \"change\" }],\n      propertyCheckIn: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyCheckOut: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyWebsite: [, { validators: [Validators.required], updateOn: \"change\" }],    \n      propertyWeekends: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyCurrency: [0, { validators: [], updateOn: \"change\" }],\n      propertyOtherCurrency: [, { validators: [Validators.required], updateOn: \"change\" }],\n      propertyNetworkIP: [, { validators: [], updateOn: \"change\" }],\n      propertyMacAddress: [, { validators: [], updateOn: \"change\" }],\n    });\n   \n   \n  }\n\n\n\n \n\n \n  addNetworkIP(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n  \n    // Add our fruit\n    if ((value || '').trim()) {\n      this.DataObj.networkIPs.push(value.trim());\n     \n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeNetworkIP(networkIP: NetworkIP): void {\n    \n    \n    const index = this.DataObj.networkIPs.indexOf(networkIP);\n\n    if (index >= 0) {\n      this.DataObj.networkIPs.splice(index, 1);\n    }\n  }\n  addMacID(event: MatChipInputEvent): void {\n    \n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.DataObj.macIDs.push(value.trim());\n      \n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeMacID(macID: MacID): void {\n\n    const index = this.DataObj.macIDs.indexOf(macID);\n    if (index >= 0) {\n      this.DataObj.macIDs.splice(index, 1);\n    }\n  }\n  \n\n\n  constructor(\n    public dialogRef: MatDialogRef<EditPropertyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PropertyData, private fb: FormBuilder,private webService:WebService,private toast: ToastService) {\n    this.propertyData=data;\n    this.getPropertyData(data.propertyID);\n    this.getCountryList();\n    this.getCurrencyList();\n    this.getHotelTypeList();\n    \n  }\n  ngOnInit() {\n    this.validate();\n  }\n  onRatingChanged(rating) {\n \n    this.DataObj.rating = rating;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  getCityList(stateID,isInitial) {\n\n    this.webService.commonMethod('city/get/' + stateID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n     \n          this.DataObj.cityList = data.data;\n          if(!isInitial){\n            this.DataObj.propertyCity=0;\n          }\n          \n        }\n        else {\n          this.toast.error(data.errors);\n        }\n       \n      \n      });\n  }\n\n  getCountryList() {\n    this.webService.commonMethod('country/get?pageSize=100', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          \n          this.countryList = data.data;\n          this.DataObj.countryList = data.data;\n      \n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getCurrencyList() {\n    this.webService.commonMethod('currency/get?pageSize=10000', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          \n          this.currencyList = data.data;\n          this.DataObj.currencyList = data.data;\n      \n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n      });\n  }\n  getHotelTypeList() {\n    this.webService.commonMethod('hotelType/get?pageSize=10000', null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n          \n          this.hotelTypeList = data.data;\n          this.DataObj.hotelTypeList = data.data;\n      \n        }\n        else {\n          this.toast.error(data.errors);\n        }\n\n      });\n  }\n\n  getStateList(countryID,isInitial) {\n\n \n\n    this.webService.commonMethod('state/get/' + countryID, null, 'GET', null)\n      .subscribe(data => {\n        if (data.succeeded) {\n    \n       \n          this.DataObj.stateList = data.data;\n         // item.value.groupState = 0;\n         if(!isInitial){\n          this.DataObj.propertyState=0;\n         }\n         \n\n        }\n        else {\n          this.toast.error(data.errors);\n          this.stateList = [];\n        }\n\n\n   \n      \n      });\n  }\n  submitForm() {\n   \n    if (this.formGroup.valid) {\n\n\n  \n        var otherCurrency=[];\n        for(let currency of this.formGroup.controls[\"propertyOtherCurrency\"].value){\n          if(currency!=0){\n            otherCurrency.push({\"CurrencyID\":currency});\n          }        \n        }\n        var weekDayArr=[];\n      \n        var weekEndArr=[];\n        for(let weekEnd of this.formGroup.controls[\"propertyWeekends\"].value){\n          if(weekEnd!=0){\n            weekEndArr.push({\"DayID\":weekEnd});\n          }        \n        }\n       \n        var macIDArr=[];\n        for(let macID of this.DataObj.macIDs){\n         \n          macIDArr.push({\"MacAddress\":macID});\n           \n        }\n        var netWorkIPArr=[];\n        for(let networkIP of this.DataObj.networkIPs){\n\n          netWorkIPArr.push({\"IPAddress\":networkIP});           \n        }\n        if(!this.validateCheckTime(this.formGroup.controls[\"propertyCheckIn\"].value,this.formGroup.controls[\"propertyCheckOut\"].value)){\n          \n          this.toast.error(\"Checkout time must be less then CheckIn time\");\n          return false;\n        }\n        \n        var propertyData = {\n          \"PropertyID\": parseInt(this.propertyData.propertyID),\n          \"Name\": this.formGroup.controls[\"propertyName\"].value,\n          \"Code\": this.formGroup.controls[\"propertyCode\"].value,\n          \"CityID\": this.formGroup.controls[\"propertyCity\"].value,\n          \"StateId\": this.formGroup.controls[\"propertyState\"].value,\n          \"CountryId\": this.formGroup.controls[\"propertyCountry\"].value,\n          \"ZipCode\": this.formGroup.controls[\"propertyPinZip\"].value,\n          \"PhoneNumber\": this.formGroup.controls[\"propertyPhone\"].value,\n          \"Address\": this.formGroup.controls[\"propertyAddress\"].value,\n          \"CreatedBy\": \"Sirojan\",          \n          \"StarRating\":this.DataObj.rating,\n          \"Website\": this.formGroup.controls[\"propertyWebsite\"].value,\n          \"CurrencyID\":this.formGroup.controls[\"propertyCurrency\"].value,\n          \"HotelTypeID\":this.formGroup.controls[\"propertyHotelType\"].value,\n          \"OtherCurrencies\":otherCurrency,\n          \"PropertyWeekDays\":weekDayArr,\n          \"PropertyWeekends\":weekEndArr,\n          \"MacAddresses\":macIDArr,\n          \"IPAddresses\":netWorkIPArr,\n          \"CheckInTime\":this.convertTime(this.formGroup.controls[\"propertyCheckIn\"].value),\n          \"CheckOutTime\":this.convertTime(this.formGroup.controls[\"propertyCheckOut\"].value),\n          \"ModifiedBy\":\"Sirojan\"\n        }\n        //properties.push(groupData);\n        \n\n\n\n      \n  \n      this.webService.commonMethod('property/put/'+parseInt(this.propertyData.propertyID), { \"property\":propertyData }, 'PUT', null)\n        .subscribe(data => {\n          if (data.succeeded) {\n\n            this.dialogRef.close({ event: 'close', data: 1 });\n          }\n          else {\n            this.toast.error(data.errors);\n          }\n        });\n      \n    }\n    else {\n      this.toast.error(\"form validation failed\");\n    }\n\n  }\n  validateCheckTime(checkInTime,chekcOutTime):boolean{\n    var jdt1=Date.parse('20 Aug 2000 '+checkInTime);\n\t\tvar jdt2=Date.parse('20 Aug 2000 '+chekcOutTime);\n\t\t\n\t/*\tif(jdt1=='NaN')\n\t\t{\n\t\t\talert('invalid start time');\n\t\t\treturn false;\n\t\t}\n\t\tif(jdt2=='NaN')\n\t\t{\n\t\t\talert('invalid end time');\n\t\t\treturn false;\n\t\t}*/\n\t  \tif (jdt1>jdt2)\n\t\t{\n\t\t return true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n  }\n  getPropertyData(propertyID){\n    this.webService.commonMethod('property/get/'+propertyID,null,'GET',null)\n    .subscribe(data=>{\n      if(data.succeeded){\n        var responseData=data.data;\n   \n        if(data.data.networkIP){\n          this.DataObj.networkIPs=data.data.networkIP.split(',');\n        }\n        if(data.data.macAddresses){\n          this.DataObj.macIDs=data.data.macAddresses.split(',');\n        }\n        \n     \n        this.formGroup.get('propertyCode').setValue(data.data.code);\n        this.formGroup.get('propertyName').setValue(data.data.name);\n        this.formGroup.get('propertyAddress').setValue(data.data.address);\n        this.formGroup.get('propertyCountry').setValue(data.data.countryID);\n        this.DataObj.rating=data.data.starRating;\n        this.formGroup.get('propertyState').setValue(data.data.stateID);\n    \n        this.formGroup.get('propertyCity').setValue(data.data.cityID);\n        this.getStateList(data.data.countryID,true);\n        this.getCityList(data.data.stateID,true);\n        this.formGroup.get('propertyPinZip').setValue(data.data.zipCode);\n        this.formGroup.get('propertyPhone').setValue(data.data.phoneNumber);\n        this.formGroup.get('propertyHotelType').setValue(data.data.hotelTypeID);\n        this.formGroup.get('propertyCheckIn').setValue(this.tConvert(data.data.checkInTime));\n        this.formGroup.get('propertyCheckOut').setValue(this.tConvert(data.data.checkOutTime));\n        this.formGroup.get('propertyWebsite').setValue(data.data.website);\n        \n        var weekEndArr = [];\n        if(responseData.weekEnds){\n          weekEndArr = data.data.weekEnds.split(',');\n        }\n       \n        this.DataObj.propertyWeekends=weekEndArr.map(el=>parseInt(el));\n        this.formGroup.get('propertyCurrency').setValue(data.data.currencyID);\n       \n        this.DataObj.propertyOtherCurrency=responseData.otherCurrenciesArr.map(function(a) {   \n         \n          return a.currencyID;\n        }\n        );\n        this.formGroup.get('propertyOtherCurrency').setValue(this.DataObj.propertyOtherCurrency);\n        this.formGroup.get('propertyWeekends').setValue(this.DataObj.propertyWeekends);\n \n       \n      }\n      else{\n        this.toast.error(data.errors);\n      }\n      \n      \n      \n      //this.isProgressing = false;\n    });\n  }\n  close(): void {\n   \n    this.dialogRef.close( { event: 'close', data: null });\n  }\n\n  convertTime(time:any): any{\n   if(time){\n    var time = time;\n    var hours = Number(time.match(/^(\\d+)/)[1]);\n    var minutes = Number(time.match(/:(\\d+)/)[1]);\n    var AMPM = time.match(/\\s(.*)$/)[1];\n    if(AMPM == \"PM\" && hours<12) hours = hours+12;\n    if(AMPM == \"AM\" && hours==12) hours = hours-12;\n    var sHours = hours.toString();\n    var sMinutes = minutes.toString();\n    if(hours<10) sHours = \"0\" + sHours;\n    if(minutes<10) sMinutes = \"0\" + sMinutes;\n\n    return (sHours + \":\" + sMinutes);\n   }\n   else{\n     return null;\n   }\n  \n\n  }\n  tConvert(time) {\n    if(time){\n      time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n      if (time.length > 1) { // If time format correct\n        time = time.slice(1); // Remove full string match value\n        time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n        time[0] = +time[0] % 12 || 12; // Adjust hours\n      }\n      return time.join(''); // return adjusted time or original string\n    }\n    else{\n      return null;\n    }\n    // Check correct time format and split into components\n  \n  }\n\n}\n","\n\n\n<form #editForm=\"ngForm\" [formGroup]=\"formGroup\" novalidate (ngSubmit)=\"submitForm()\">\n    <h2 mat-dialog-title> <div fxFlex=\"100%\" fxLayout=\"row wrap\" class=\"headercontainer\" fxLayout.lt-sm=\"column\">\n        <div fxFlex=\"70%\" fxFlex.xs=\"100%\"><i class=\"fas fa-arrow-left themecolor titlearrowicon\"   (click)=\"close()\" style=\"font-size: 24px;\"></i> View Poperty</div>\n        <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"headerAction\">\n            <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"cancelcontainer\">\n                <div fxFlex=\"100%\">\n                    <i class=\"fas fa-times themecolor cancelicon\" (click)=\"close()\" ></i>\n                </div>\n                <div fxFlex=\"100%\" class=\"headercanceltext\" (click)=\"close()\">\n                    Cancel\n                </div>\n             \n            </div>\n            <div fxFlex=\"33%\"  fxLayout=\"row wrap\">\n                <div fxFlex=\"100%\">\n                   <i class=\"far fa-check-circle themecolor saveicon\" (click)=\"editForm.submitted = true; editForm.ngSubmit.emit()\"></i>\n                </div>\n                <div fxFlex=\"100%\" class=\"headersavetext\"  (click)=\"editForm.submitted = true; editForm.ngSubmit.emit()\">\n                   Save\n                </div>\n              \n            </div>\n            <div fxFlex=\"33%\"  fxLayout=\"row wrap\" class=\"disablecontainer\">\n                <div fxFlex=\"100%\">\n                    <i class=\"far fa-trash-alt  deleteicon\"></i>\n                </div>\n                <div fxFlex=\"100%\" class=\"e_headerdeletetext\">\n                    Delete\n                </div>\n              \n            </div>\n            \n           </div>\n            </div>\n        </h2>\n    <mat-dialog-content  class=\"mat-typography\">\n      <div>\n        <div class=\"content\" style=\"margin-bottom: 20px;\" >\n          <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"15px\" >\n              <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                Holding Company\n              \n                </div>\n                <div fxFlex=\"25%\">\n                    {{propertyData.holdingCompanyName}}\n                  </div>\n                \n                </div>\n                <div fxFlex=\"100%\"  fxLayout=\"column wrap\" fxLayoutGap=\"15px\" >\n                    <div fxFlex=\"25%\"  style=\"font-size: 12px;opacity:0.7\">\n                        Group\n                       \n                         </div>\n                <div fxFlex=\"25%\" >\n                  {{propertyData.groupName}}\n                  </div>\n                \n              </div>\n    </div>\n     \n        \n          \n          <div class=\"content\">\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_border_bottom\" >\n                <div fxFlex=\"80%\" fxFlex.xs=\"75%\" fxFlex.sm=\"100%\" class=\"fx_subgroup_head\">\n                    Property  {{propertyData.propertyIndex+1}}            \n                  </div>\n                  <div fxFlex=\"18%\" fxFlex.xs=\"20%\" fxLayoutAlign=\"end\" >\n                      \n                    <i   class=\"fas fa-angle-down themecolor iconSize moreicon\"></i>\n                   \n                   \n                </div>\n                  \n                </div>\n          </div>\n\n       \n          <div class=\"content-0\">\n          \n         \n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                    <mat-label>Code</mat-label>\n                    <input matInput  placeholder=\"Code\" formControlName=\"propertyCode\" readonly maxlength=\"10\">\n                    <mat-error\n                    *ngIf=\"formGroup.get('propertyCode').hasError('required')\">\n                    Code is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                    <mat-label>Name</mat-label>\n                    <input matInput #input placeholder=\"Name\" formControlName=\"propertyName\" maxlength=\"100\">\n                    <mat-error\n                    *ngIf=\"formGroup.get('propertyName').hasError('required')\">\n                    Property Name is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"48%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                    <mat-label>Address</mat-label>\n                    <input matInput #input placeholder=\"Address\" formControlName=\"propertyAddress\" maxlength=\"100\">\n                    <mat-error\n                    *ngIf=\"formGroup.get('propertyAddress').hasError('required')\">\n                    Address is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\n                <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                  \n                    <mat-form-field  [style.width.%]=\"100\" floatLabel=\"always\">\n                        <mat-label>Country</mat-label>\n                        <mat-select [(ngModel)]=\"DataObj.propertyCountry\" (selectionChange)=\"getStateList($event.value,false)\" formControlName=\"propertyCountry\">\n                          <mat-option  [value]=\"0\" selected=\"true\">Select Country</mat-option>\n                          <mat-option *ngFor=\"let country of DataObj.countryList\" [value]=\"country.countryID\">{{country.countryName}}</mat-option>\n                        </mat-select>\n                        <mat-error\n                        *ngIf=\"formGroup.get('propertyCountry').hasError('min')\">\n                        Country is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>State</mat-label>\n                        <mat-select [(ngModel)]=\"DataObj.propertyState\"   (selectionChange)=\"getCityList($event.value,false)\" formControlName=\"propertyState\">\n                          <mat-option  [value]=\"0\">Select State</mat-option>\n                          <mat-option *ngFor=\"let state of DataObj.stateList\" [value]=\"state.stateID\">{{state.stateName}}</mat-option>\n                        </mat-select>\n                        <mat-error\n                        *ngIf=\"formGroup.get('propertyState').hasError('min')\">\n                        State is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>City</mat-label>\n                        <mat-select [(ngModel)]=\"DataObj.propertyCity\" formControlName=\"propertyCity\">\n                          <mat-option [value]=\"0\">Select City</mat-option>\n                          <mat-option *ngFor=\"let city of DataObj.cityList\" [value]=\"city.cityId\">{{city.name}}</mat-option>\n                        </mat-select>\n                        <mat-error\n                        *ngIf=\"formGroup.get('propertyCity').hasError('min')\">\n                        City is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                    <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Pin/Zip</mat-label>\n                        <input matInput #input placeholder=\"Pin/Zip\" formControlName=\"propertyPinZip\" maxlength=\"10\">\n                        <mat-error\n                        *ngIf=\"formGroup.get('propertyPinZip').hasError('required')\">\n                        PinZip is <strong>required</strong>\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n    </div>\n    <div class=\"content\">\n        <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n            \n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                    <mat-label>Phone Number</mat-label>\n                    <input matInput #input placeholder=\"Phone Number\" formControlName=\"propertyPhone\" numbersOnly maxlength=\"20\">\n                    <mat-error\n                    *ngIf=\"formGroup.get('propertyPhone').hasError('required')\">\n                    Phone is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                    <mat-label>Hotel Type</mat-label>\n                    <mat-select [(ngModel)]=\"DataObj.propertyHotelType\" formControlName=\"propertyHotelType\">\n                      <mat-option [value]=\"0\">Select Hotel Type</mat-option>\n                      <mat-option *ngFor=\"let hotelType of DataObj.hotelTypeList\" [value]=\"hotelType.hotelTypeID\">{{hotelType.name}}</mat-option>\n                    </mat-select>\n                    <mat-error\n                    *ngIf=\"formGroup.get('propertyHotelType').hasError('min')\">\n                    HotelType is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\" fxLayout=\"row wrap\">\n          \n                 \n                    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                      <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Check in Time</mat-label>\n                        <div fxFlex=\"20%\"><i class=\"fas fa-clock\"></i></div>\n                        <div fxFlex=\"80%\">\n                          <input matInput #input placeholder=\"Check in\" [ngxTimepicker]=\"inpicker\" formControlName=\"propertyCheckIn\">\n                     \n                          <ngx-material-timepicker #inpicker></ngx-material-timepicker>\n                       \n                        </div>\n                        <mat-error\n                        *ngIf=\"formGroup.get('propertyCheckIn').hasError('required')\">\n                        CheckIn  is <strong>required</strong>\n                      </mat-error>\n                        \n                    </mat-form-field>\n                    </div>\n                    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                      <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                        <mat-label>Check Out Time</mat-label>\n                        <div fxFlex=\"20%\"><i class=\"fas fa-clock\"></i></div>\n                        <div fxFlex=\"80%\">\n                          <input matInput #input placeholder=\"Check out\"   [ngxTimepicker]=\"outpicker\" formControlName=\"propertyCheckOut\">\n                         \n                          <ngx-material-timepicker #outpicker ></ngx-material-timepicker>\n                         \n                        </div>\n                        <mat-error\n                          *ngIf=\"formGroup.get('propertyCheckOut').hasError('required')\">\n                          CheckOut is <strong>required</strong>\n                        </mat-error>\n                        \n                    </mat-form-field>\n                    </div>   \n              </div>\n              <div fxFlex=\"22%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n                <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                    <mat-label>Website</mat-label>\n                    <input matInput #input placeholder=\"Website\" formControlName=\"propertyWebsite\" maxlength=\"100\">\n                    <mat-error\n                    *ngIf=\"formGroup.get('propertyWebsite').hasError('required')\">\n                    Website is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n    </div>\n    <div class=\"content\">\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" >\n       \n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                  <mat-label>Weekends</mat-label>\n                  <mat-select  placeholder=\"Select WeekEnds\" formControlName=\"propertyWeekends\" multiple>\n                    \n                    <mat-option *ngFor=\"let day of DataObj.dayList\" [value]=\"day.dayID\">{{day.name}}</mat-option>\n                  </mat-select>\n                  <mat-error\n                  *ngIf=\"formGroup.get('propertyWeekends').hasError('required')\">\n                  WeekEnd is <strong>required</strong>\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                  <mat-label>Currency</mat-label>\n                  <mat-select [(ngModel)]=\"DataObj.propertyCurrency\" formControlName=\"propertyCurrency\">\n                    <mat-option [value]=\"0\">Select Currency</mat-option>\n                    <mat-option *ngFor=\"let currency of DataObj.currencyList\" [value]=\"currency.currencyID\">{{currency.currencyCode}}</mat-option>\n                  </mat-select>\n                  <mat-error\n                  *ngIf=\"formGroup.get('propertyCurrency').hasError('min')\">\n                  Currency is <strong>required</strong>\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div fxFlex=\"24%\" fxFlex.xs=\"100%\" fxFlex.sm=\"50%\">\n              <mat-form-field [style.width.%]=\"100\" floatLabel=\"always\"> \n                <mat-label>Other Currency</mat-label>\n                <mat-select placeholder=\"Select Othercurrency\" formControlName=\"propertyOtherCurrency\" multiple>\n                  \n                  <mat-option *ngFor=\"let currency of DataObj.currencyList\" [value]=\"currency.currencyID\">{{currency.currencyCode}}</mat-option>\n                </mat-select>\n                <mat-error\n                *ngIf=\"formGroup.get('propertyOtherCurrency').hasError('required')\">\n               Other Currency is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            </div>\n          </div>\n    </div>\n    <div class=\"content\">\n      <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n        <mat-form-field class=\"network-ip-chip-list\" floatLabel=\"always\">\n          <mat-label>Property Network IP</mat-label>\n          <mat-chip-list #chipList aria-label=\"IP selection\">\n            <mat-chip *ngFor=\"let netWorkIP of DataObj.networkIPs\" [selectable]=\"selectable\"\n                     [removable]=\"removable\" (removed)=\"removeNetworkIP(netWorkIP)\" >\n              {{netWorkIP}}\n              <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n            <input formControlName=\"propertyNetworkIP\" placeholder=\"Network IP\"\n                   [matChipInputFor]=\"chipList\"\n                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                   (matChipInputTokenEnd)=\"addNetworkIP($event)\" maxlength=\"100\">\n          </mat-chip-list>\n        </mat-form-field>\n        </div>\n        </div>\n        <div class=\"content\">\n          <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n         \n            <mat-form-field class=\"network-ip-chip-list\" floatLabel=\"always\">\n              <mat-label>Network Mac ID</mat-label>\n              <mat-chip-list #macIdList aria-label=\"IP selection\">\n                <mat-chip *ngFor=\"let macID of DataObj.macIDs\" [selectable]=\"selectable\"\n                         [removable]=\"removable\" (removed)=\"removeMacID(macID)\">\n                  {{macID}}\n                  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                </mat-chip>\n                <input formControlName=\"propertyMacAddress\" placeholder=\"Mac ID\"\n                       [matChipInputFor]=\"macIdList\"\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                       [matChipInputAddOnBlur]=\"addOnBlur\"\n                       (matChipInputTokenEnd)=\"addMacID($event)\" maxlength=\"100\">\n              </mat-chip-list>\n            \n            </mat-form-field>\n            </div>\n            </div>\n            <div class=\"content\">\n            \n              <div fxFlex=\"100%\"  fxLayout=\"row wrap\" fxLayoutGap=\"15px\" class=\"fx_starRating\">\n                <div fxFlex=\"100%\">\n                  Ratings\n                </div>\n                <div fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\n              <div fxFlex=\"40%\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\">\n                <mat-star-rating [rating]=\"DataObj.rating\"  [starCount]=\"starCount\" [color]=\"starColor\" (ratingUpdated)=\"onRatingChanged($event)\"></mat-star-rating>\n    \n                \n              </div>\n           \n              </div>\n    \n             \n                </div>\n                </div>\n            \n     \n\n   \n    </div>\n    </mat-dialog-content>\n\n    </form>\n    ","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}